syntax = "proto3";

package echo;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

service Echo {
  // Echo "echos" the incoming string
  rpc Echo (EchoRequest) returns (EchoResponse) {
    option (google.api.http) = {
      // All fields (In) are query parameters of the http request unless otherwise specified
      get: "/echo"

      additional_bindings {
        // Trailing slashes are different routes
        get: "/echo/"
      }
    };
  }

  // Louder "echos" the incoming string with `Loudness` additional exclamation marks
  rpc Louder (LouderRequest) returns (EchoResponse) {
    option (google.api.http) = {
      custom {
        kind: "HEAD"
        // Loudness is accepted in the http path
        path: "/louder/{loudness}"
      }
      additional_bindings {
        post: "/louder/{loudness}"
        // All other fields (In) are located in the body of the http/json request
        body: "*"
      }
    };
  }

  // LouderGet is the same as Louder, but pulls fields other than Loudness (i.e. In) from query params instead of POST
  rpc LouderGet (LouderRequest) returns (EchoResponse) {
    option (google.api.http) = {
      // Loudness is accepted in the http path
      get: "/louder/{loudness}"
    };
  }
}

message EchoRequest {
  string in              = 1;
  optional int64 at      = 2;
  optional string desc   = 3;
  optional bool debug    = 4;
  /* repeated string others = 5; */
}

message LouderRequest {
  // in is the string to echo back
  string in = 1;
  // loudness is the number of exclamations marks to add to the echoed string
  int32 loudness = 2;
}

message EchoResponse {
  string out = 1;
  google.protobuf.Timestamp created_at =9;
}
