// Code generated by go-bindata. DO NOT EDIT.
// sources:
// NAME-service/baron/NAME.pb.baron.go.tmpl (26.964kB)
// NAME-service/cmd/NAME/main.go.tmpl (1.381kB)
// NAME-service/cmd/NAME-client/main.go.tmpl (2.923kB)
// NAME-service/server/endpoints.go.tmpl (230B)
// NAME-service/server/interrupt.go.tmpl (332B)
// NAME-service/server/server.go.tmpl (3.202kB)
// NAME-service/server/wrapper.go.tmpl (1.078kB)
// NAME-service/service/service.go.tmpl (572B)
// NAME-service/service/service_methods.go.tmpl (291B)
// NAME-service/service/wrapper.go.tmpl (1.366kB)

package template

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _baronNamePbBaronGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7d\x5b\x8f\x1b\x39\x76\xf0\xb3\xf4\x2b\x38\x85\x99\xb1\xd4\x9f\xba\x34\x5f\x80\x04\x9b\x1e\x74\x00\x4f\xdb\x73\xd9\x1d\xdb\xbd\x76\x7b\x06\x88\x61\x78\x29\x15\x25\x71\xbb\xaa\x58\x26\x59\x7d\x59\xa5\x5f\xf2\xb2\x01\x12\x20\x40\x9e\xf2\x10\x2c\xf2\x94\xd7\x20\xcf\xf9\x3d\x3b\xc1\xfe\x8b\xe0\x9c\x43\xb2\x58\x52\x95\x2e\x9e\xd9\x60\x11\x64\x80\xc4\xea\x22\x79\x78\x78\x78\x78\xee\xe4\x4e\xa7\xec\x42\x65\x82\x2d\x45\x29\x34\xb7\x22\x63\xb3\x7b\x36\xe3\x5a\x95\x29\x7b\xf2\x82\x3d\x7f\x71\xc5\x9e\x3e\xf9\xe6\x2a\x1d\x4e\xa7\xec\xa5\xd0\x75\x59\xca\x72\x49\x1d\xd8\xad\xcc\x73\xa6\x6e\x84\xbe\xd5\xd2\x0a\x66\x57\xd2\xb0\x85\xcc\x05\x76\xfe\x4e\x68\x23\x55\x79\xc6\xd6\xeb\xd4\xfd\x7e\x78\x88\x1a\xd8\x13\x6e\x45\xdc\x0a\x7f\x3f\x3c\x0c\x87\x15\x9f\x5f\xf3\xa5\x80\x96\x4b\xfa\xf9\x9c\x17\xd8\x32\x9d\xb2\x2b\x3f\x07\x9b\xab\xd2\x72\x59\x1a\x56\x08\xbb\x52\x99\x61\x56\xb1\x82\x5f\x0b\x26\xcb\x4c\xde\xc8\xac\xe6\x39\x13\x65\x56\x29\x59\x5a\xc3\x16\x5a\x15\xcc\x08\x7d\x23\xe7\xc2\x4c\x00\x92\x16\xef\x6b\x61\x2c\xe3\x65\xc6\xb4\x30\x95\x2a\x8d\x60\xf6\xbe\x12\x08\x09\xba\xc2\x8a\x94\x11\x0d\x94\x09\xe3\x86\xdd\x8a\x3c\x87\x7f\x45\x39\x57\x99\xd0\x06\x00\x00\xbc\x4c\xb8\xbf\x17\x4a\xbb\x81\x08\x6d\x82\x1f\x38\x50\x6a\xc1\x54\xad\x99\xa9\xab\x4a\x69\xa0\xb4\xd5\xbc\x34\xf0\x1b\xa6\x93\x3c\x97\xbf\xe1\x56\xaa\x12\xa0\x2d\x94\x2e\xb8\x35\xe9\x70\x28\x0b\xec\x31\x1a\x0e\x92\xd9\xbd\x15\x26\x19\x0e\x12\x58\xbb\xb8\xb3\xf0\x13\xd1\x90\xe5\x72\xfa\x6b\xa3\x4a\xf8\xb0\x28\xf0\xbb\x54\xf4\xff\xa7\x52\xd5\x56\xe6\xf0\x47\x29\xec\x74\x65\x6d\xe5\x7f\xd7\x1a\x3f\x1b\xab\xe7\xaa\xbc\x71\x3f\x65\xb9\x34\xc9\x70\x38\x48\x96\xd2\xae\xea\x59\x3a\x57\xc5\x74\xa9\x4e\xaf\xa5\x9d\xc2\xff\x79\x5a\x24\xc3\x01\x2f\xef\xab\x19\x4b\x96\x4a\x2d\x73\x91\x2e\x55\xce\xcb\x65\xaa\xf4\x72\x5a\x69\x65\xd5\xac\x5e\x4c\x71\xfd\xd3\xeb\x52\xdd\x96\x53\xec\x9d\x0c\x07\x59\xad\x71\x91\x47\x0c\x6d\x86\x24\xc3\x81\x28\x2a\x7b\xcc\xbc\xae\x7f\x32\x1c\x2c\xa4\xc8\xb3\x82\x9b\xeb\x23\x46\x47\x63\x92\xe1\xc0\x58\x5d\xcf\xed\x11\xc3\xfd\x80\x64\x38\xb0\xb2\x10\xc6\xf2\xa2\x3a\x62\x78\x34\x26\x19\x0e\x6e\x35\xaf\x2a\xa1\xcd\x11\x00\x9a\x21\xdb\x5b\xaa\x65\x9e\xf3\x69\x51\xdf\x25\xed\x96\xea\x7a\x39\x15\x5a\x2b\x8d\x9c\xb6\x63\xa2\xc0\x79\xf8\xc5\xb3\xdf\x8e\x01\xf8\x03\x10\x59\xaf\x4f\x99\x5c\x30\xf1\x9e\xa5\x17\xaa\x5c\xc8\x65\x7a\x15\x4e\x42\xc2\xf3\x3c\x61\x49\xc9\xad\x49\xd8\xc3\x43\x1b\x37\xf8\x7a\x2a\x15\xfe\x9b\x2e\x81\xc3\x01\x94\x28\x33\xe8\x78\x00\xd4\xa5\xae\xe6\x1e\xea\x16\x9e\xd8\xd8\xdb\x32\x2d\x84\xe5\x19\xb7\x7c\x73\xd2\x83\xa7\x84\x5f\xcd\x89\xef\x39\x5f\xa1\x83\x47\x27\x9a\x0b\xce\xee\x11\x00\xdc\x51\x3f\x8a\xd8\xf0\xeb\x88\x29\x70\x60\x8c\xe3\x78\x38\x1c\xde\x70\x0d\xd2\xea\x1d\x3b\x67\x8b\xc2\xa6\xaf\x2a\x2d\x4b\x4b\x7f\xa3\x00\x4b\x2f\x54\x51\x71\x2d\xe8\x93\x93\x3e\xe9\x63\xab\x24\x7d\x69\x2d\x33\x7d\x2e\x6e\x5f\x81\x2c\xd6\xd4\x48\xd2\x2c\x7d\xae\xaa\x8b\x5c\x99\xe6\x6b\x7a\xa1\xaa\x7b\xfa\x83\x98\x37\xfd\x5e\xf3\x6a\x38\x98\x4e\x99\xdb\x4f\xcf\x86\x24\x95\xa1\x2b\x8a\xa4\xf4\x71\x89\xe3\x1a\x21\x93\x3e\x71\x3f\xe1\xb3\x13\x1f\xe9\x53\xf8\x17\x3e\xf8\x23\x9d\xbe\xc2\x1f\xf0\x29\x3a\xa6\xe9\x95\xff\x0d\x0d\xcd\xf1\x83\xde\xb2\x5c\x7e\xc7\xf3\x1a\xd7\x1d\xc9\x95\xf4\x4b\xf8\xfd\x8c\x9b\x6b\xa0\xde\xf4\xe4\xa0\xff\xd8\xd3\xa0\xd9\x0e\x1b\x00\xff\x4d\x51\x83\x7e\x53\x32\x4e\xea\x4d\x4f\x98\xb4\x8f\x0c\xab\x8d\x58\xd4\x39\xaa\xa9\x45\x5d\xce\x61\xe9\x86\xd9\x15\xb7\xac\x14\xa0\xa5\x14\x53\x15\xda\x06\x4c\xc1\xd8\x4a\xe8\x53\xaf\x06\x00\xe0\x8c\x1b\x69\x52\xf6\xa5\xd2\x4c\xdc\xf1\xa2\xca\xc5\x84\xdd\xab\x9a\x15\x72\xb9\xb2\xac\xe2\x06\x54\x64\x84\xb0\x55\x8c\x87\x89\x68\x9e\x4a\xab\xac\x9e\x0b\x03\xe0\x78\x89\x1c\x90\x7e\xcd\xcb\x2c\x07\x1c\x6f\xa5\x5d\x31\xc1\xe7\x2b\xa7\xe9\xd9\xc8\xcf\x3e\x66\xb7\x52\x8b\x8c\xd5\x15\x01\x35\x95\x98\xcb\x85\x9c\xb3\x8a\xdb\x55\xca\x46\xdf\x20\x7e\xd2\x00\xfc\x19\x9f\xe5\xf7\x8c\xb3\x42\x1a\x4b\x56\x02\xcb\x84\x91\xcb\x12\x86\xca\xf2\x46\x5d\x83\xba\x17\xec\x15\xd9\x08\xc1\xaa\x40\x14\x05\xc0\x69\x56\x40\x3c\x00\x20\x3c\x25\xd3\xf1\x70\x3a\x0d\xd4\x9d\xe7\x52\x94\xb6\x4d\x5d\xab\xd8\x5c\xe5\xb9\xc0\x71\xde\x40\xc9\xef\xc1\x8c\x21\x70\x22\x8b\xcc\x15\x59\xc2\x82\x00\xa0\x91\xe5\x32\x27\x53\x82\x68\x25\x81\xc2\x85\x40\x4a\x46\xf8\xca\xd2\x0a\xbd\xe0\x73\xd1\xb7\x13\x00\x2c\x4c\xd6\x6d\x24\xd5\x30\x19\x6b\x4b\x10\x38\x80\x17\x6e\x3d\x73\x55\xcc\x64\x89\x74\x2a\x1c\x8a\xd1\xc6\x4e\x9c\x29\x65\x6b\x5d\x32\x69\x61\xc5\x80\xe0\x9c\xe7\xb9\xd0\x60\x31\x71\x8f\x6c\x3a\xc4\xe5\x6c\x11\x74\x3d\x1c\xbc\x2e\xc3\xfa\x44\xb6\x5e\xa7\x7e\x04\x99\x80\x4e\x12\xac\xd7\x9a\x97\x4b\xc1\x3e\x96\xec\xec\x9c\x85\x3e\xcf\x68\xcb\x48\x2c\x7f\x2c\xdd\x18\x3f\x0b\x63\x2c\x2c\x35\xf5\x1f\x87\xeb\x35\x09\x2e\xb2\x2e\x03\x46\xfb\xa7\x00\x06\x66\xa3\x68\x11\x63\x16\x4d\x3a\x9a\xdb\x3b\xe6\xac\x34\x10\xbb\xf0\xef\x04\x18\xe6\x64\xbd\xfe\x4a\x41\x1f\xf6\xb1\x4c\x5f\x92\x09\x7a\x75\x5f\xf9\x05\x8e\xd9\x68\xa3\x07\x19\xa6\x51\x97\x09\x09\xb8\x31\x50\xcb\xdb\xad\xf8\x0d\x10\x15\x69\xc7\xca\x01\x19\x98\x7c\x3c\x1c\x80\x22\xd0\x9a\x7d\x74\xce\x4a\x99\x03\x84\x81\xdb\xaf\x52\xe6\x08\x64\x38\x78\x18\xfa\x6f\x1e\x7a\xba\x17\xa7\xf1\x04\x00\x0c\x1f\x02\x39\x81\x98\xcf\xe0\x98\xc5\x14\xc5\x83\xfc\xb1\x15\x48\xd1\x07\xe8\x7c\xca\x62\x2a\x7f\x6c\x45\x1f\xa1\x01\x56\xd7\xca\x0c\x10\x3d\x1a\x16\xb3\xc9\x78\x7b\xbb\x89\x66\xb8\x38\x00\xdb\xbd\x4b\xde\x31\x08\x27\x6a\x0d\xdb\x12\x5c\x84\xe8\x33\x91\xbd\xd9\x8e\x81\x16\xef\x61\x21\x0e\xc2\x16\xdd\xb6\x76\x7b\x38\x18\xdc\x84\xbd\x33\xe9\x06\x03\x21\x2a\xd0\x67\x7b\xd7\xb6\xb7\x0d\xf6\xcd\x7f\xbd\xa1\xed\x18\x3c\x0c\x89\xc8\xb4\x27\xf1\xde\x80\x72\x7c\x9c\xe7\x4f\xef\xe6\xa2\xb2\xa8\xa7\x0c\x89\xd8\x40\x29\xd4\x50\xe0\xb2\xb8\xb3\xd9\x1c\x56\xdc\x46\x94\x4d\x1d\x7e\x41\xfa\x4c\x66\x59\x2e\x6e\xb9\x26\x2f\xf0\xb5\xf1\x7e\x21\x38\x41\x55\x95\xdf\x83\x88\x01\xb1\x69\x01\x78\x11\x7a\xa3\x5e\x10\x37\x42\xdf\x87\x6d\x83\xf3\x02\x12\xc4\x78\xa9\x31\x9d\xb2\x17\x15\x68\x0d\x90\x9c\x93\x48\x70\xcd\x79\xc9\x66\x02\x75\x8d\xc8\x60\xd8\xec\x9e\x95\x40\x76\xab\xe0\xbb\xb8\x9b\xe7\x75\x26\x32\xf2\x02\x67\x02\x50\x20\xdd\x9c\xa5\x5b\xd4\x18\x35\x38\x4d\x58\xf2\xca\x72\x5b\x9b\x64\xc2\x92\x4b\x59\x2e\x93\x71\x38\xf7\x27\xd1\xc1\xef\x1b\xcf\x3a\xa8\x32\x69\xb0\x49\xd3\x94\x1c\x2e\x64\x1e\x59\xba\xcf\x67\xe7\xac\xe0\xd5\x1b\x6a\x7a\x4b\xe4\x5f\x3f\xc0\xae\x6f\x1e\x98\x2e\xc9\x37\x18\x24\x11\x1b\x25\x67\x6c\xfd\x30\x71\x43\x9d\x19\xf9\x30\x1c\x0e\x60\x37\xde\x01\x2a\xc8\xae\x08\x32\xa0\xb5\x26\x8e\x7b\x37\x61\xea\x1a\x9a\x3d\x62\x6f\xc4\xdd\xdb\xcf\xd9\x47\xea\x9a\x38\xb0\xe2\xa5\x9c\x8f\x1a\x0b\x6f\x31\x4a\x9e\x7a\x10\x61\x07\x1f\x7d\x62\x1e\xb1\x4c\x09\xc3\x4a\x65\x99\xb8\x93\xc6\x7e\xce\x8c\x10\xf1\xc6\x07\xde\x41\x93\x1e\x90\x1a\x8f\x1d\x3f\x67\x22\x17\x56\x8c\x3c\x06\xd8\xd6\x2c\x40\x96\xf3\x06\xfd\x40\xbe\xc3\x09\x25\x17\x08\xe2\xfc\x9c\xb5\x48\x46\xcb\x1b\x74\x8a\x52\x76\x1e\x61\x3e\xea\xec\x02\xb8\x23\xf2\x2d\x92\xd3\xb1\xfb\x96\xcf\x44\x2e\xb2\x86\x1b\x28\x84\xb2\x14\xd6\xf3\x2e\xf0\x7b\xa0\x1e\xb2\xf0\xed\x4a\x94\xa1\x55\x45\xec\xea\x80\x11\xd7\x4d\xe8\x94\xb9\x83\x50\x53\x67\x46\x71\x19\x4e\xc1\x1d\x39\x07\xa3\x46\xcb\x39\x9a\x59\x11\x97\xde\xae\xe4\x7c\x85\x43\x8d\x28\xbb\x50\x70\x9a\xdc\x8d\xf6\x76\x8c\xd2\x4e\x8f\x6f\xaf\x0a\x85\x2b\x31\xf0\x64\x5b\x0a\x77\x08\xe6\x61\xdf\xba\x3e\x58\x36\x6d\x21\x35\x71\xeb\x44\x8a\x6b\x31\x17\xf2\x86\x2c\x3e\x5c\xa2\x5a\xb4\xd6\x9d\xb2\x57\x42\x04\x30\x11\x14\x6c\xf0\x86\x68\x38\xf7\x80\x28\x70\x64\x26\x2c\x97\x39\x1a\x8d\xfe\x38\x61\x30\xc7\x19\xbb\x3c\x97\xf6\x3e\xdd\x25\x42\x5a\x6b\x8f\x25\xc9\xd1\x14\xfd\x3f\x39\xf3\xbf\x47\xce\xb4\x86\x4d\xba\x8d\xbc\x3e\xb1\x73\x78\x80\xe2\x50\xd7\xf3\xab\x97\x97\x17\x64\x61\x1d\xed\x7b\x82\x19\x17\x0d\x2f\xf8\xb5\x30\x8d\x31\xd0\xe8\x73\x7e\xc3\x65\xce\x67\xb9\x20\xb7\x61\xf9\xf2\xf2\x82\xf5\x38\x03\x69\x63\x20\x36\x90\x47\x0d\xa8\xc8\x3d\x51\x15\xb9\xb6\x69\x9a\xb6\x62\x31\x29\x0d\x22\xd3\x62\xdc\x37\x11\x6c\x97\x89\x3a\x1a\xd8\xf0\x37\x6f\xfb\x21\xc1\xf6\x76\xb5\x7e\x21\x16\x4a\x8b\x11\x60\xfb\xcc\xc5\x94\xae\x94\xb3\x3e\xc7\x13\x34\xc0\xdb\xf3\x9c\x83\xe1\x24\xca\x6c\xd4\xfa\x1c\xd6\x93\xa6\xe9\x18\x03\x1d\xeb\x35\xbb\x52\xdf\xaa\x5b\xa1\x59\x6b\x05\x18\xd9\x71\xa6\xe1\xa7\x80\x11\xe1\xb1\x06\x37\x69\x2f\xf7\xae\xd7\x1e\x66\x60\xb9\x33\xd6\x5e\x56\x08\xd1\x8c\x80\x07\x9b\x53\xd6\xc1\xa5\x20\x22\x06\x4f\x30\x52\x0e\xeb\x8f\x7a\x38\xeb\x18\x3b\x3c\x2d\x3b\x3b\x38\x5f\x07\x7a\xb4\x28\x91\xa6\x29\x7c\x04\xda\x75\xe8\xdc\x66\xc1\x9b\xae\x73\x30\xce\xbb\xf7\x3b\x18\xfa\xa4\xe5\x22\x38\x7f\x04\x77\x75\x8b\xc8\x8c\x6d\x50\xd9\xc5\x43\x22\x83\xde\xb9\x59\x2e\x50\x01\x92\x2a\xc2\xd1\xaa\x66\xb9\x87\xaf\xf4\x40\xb7\xd7\xb0\x93\x66\xaa\x31\x8b\xbd\x9c\x5d\xfe\x2f\xb8\x47\x3f\xad\x03\xfc\x0e\x80\x56\x2d\x17\x6a\x8b\x92\x74\xec\x80\x9b\x62\xa7\xea\x48\x4f\xb8\xfa\x40\x27\xd8\x51\x98\x58\x7e\x3f\x79\xa7\x53\xb6\xeb\x74\x30\x09\xe2\xb0\x1d\x23\x4e\x69\x80\xeb\xf1\x25\xec\x0f\xc6\x89\xe6\xaa\xbc\x11\x1a\x84\x29\x9e\x02\x12\xa1\xdb\x6c\xe6\xbd\x5d\x0c\xa0\xd5\x46\xe8\xd3\x4c\x15\x5c\x96\xbb\x3a\xa7\xec\x52\xcb\x82\x6b\x99\xdf\xfb\xf0\x56\x1c\x0b\x23\x26\xd9\xb5\x8e\xd1\xbb\x6d\xe6\x80\xb5\xbc\x14\xef\x37\xdc\xee\x4d\x6f\x3b\x04\x3e\xd0\xd1\x76\x63\x0e\x71\xb4\xc3\x4e\xbe\xdf\xb1\x4d\x24\x78\x0e\xda\xa6\x9d\x32\xaa\x73\x9f\x68\x84\xef\xd2\xb7\x51\xfb\xb7\xc0\xa7\x2a\x55\xa3\x19\xbb\xba\x55\xf9\xfd\x41\xfb\xb4\x73\x21\x5d\x1b\xd5\x15\x09\xd9\xb5\x53\xa6\xa2\x98\xc8\xc1\xc1\xa4\x56\x00\xaa\x6b\xb7\xbe\x16\x79\x25\xb4\x19\xd2\x02\x3a\x15\x69\xb7\x00\x2a\x32\xe6\xd3\x38\xe9\xb3\x27\xe3\xcd\x0e\x80\x2f\x88\xd1\xeb\x09\xbb\x69\x2c\xbe\x22\x98\xaa\x37\xad\x10\x0c\x66\xa3\x05\xbb\x16\xf7\xb8\xdd\x19\x18\x85\x33\x65\x57\x40\x63\x3f\x8b\xcb\xe3\xb2\xd1\xf5\xd8\xb9\x1f\xd0\x35\xcf\x59\x0e\xfb\xe5\xa0\x70\xe7\x74\x61\xb8\xf5\x82\x97\xaa\x94\x73\x9e\x7f\x2d\x78\x26\xf4\x2f\xc4\xbd\xf7\x4d\x60\x22\xa3\x5c\x10\xd8\x3a\x57\xcf\x83\x98\xcf\x85\x8f\x7d\x08\x69\x57\x42\xbb\x99\xa1\x1d\x48\x71\x1e\xd6\xfa\xbd\xb4\x2b\xcc\x43\x90\x34\x84\xb5\xbe\xf9\xec\xed\x78\x6f\xc7\x1e\xec\x46\xd7\xe3\x06\x82\xb3\xfa\xdd\xf6\xcd\xed\x1d\xea\xa8\x23\xec\x4a\x8a\x34\x1f\x6d\x57\x3e\x17\xb7\xd1\x68\x9a\x1e\xb3\x0e\x2e\x74\xc4\x66\x7c\x7e\x4d\xa5\x0d\xee\xcc\x50\x88\x1e\xd6\x5a\x0a\xf4\xcd\x52\xf6\x0d\x8a\x57\x17\xec\x77\xec\x2a\x67\x12\x7c\x36\xbf\x05\x2e\x96\x6d\x15\xcb\x24\xcf\x29\xe0\x9d\x73\x2b\x34\x9b\xe7\xca\x88\x09\x75\x6a\x60\x12\x83\xb6\xb0\x1b\x41\x33\xa9\xcf\x94\xbe\x5c\xa8\xb2\xdc\x61\x9c\x52\x27\x6f\x9c\x8e\x7a\x8c\x8c\xf8\xc8\x81\x85\xb0\x19\x6b\x1d\x44\x5f\xab\xeb\x25\x1e\x3f\x17\x72\x6d\x17\x59\x0c\xb6\xbd\x9a\xee\xb8\xec\xe0\x86\xeb\x2e\xd1\x13\x5c\x98\x6d\x27\x7f\xb0\xee\x36\x28\x23\xaf\x67\xcb\xb2\x74\x54\x43\xf6\x04\x42\x79\xcf\xd3\x2d\xe2\xe1\x21\xed\x8a\x00\x27\x93\x2d\x0f\x75\x97\x65\xd9\x98\x9e\x3d\x5a\x2b\x32\x3d\xf7\x48\x2f\x72\x83\x07\xaa\x6d\x9a\x06\x1a\x8c\xd0\xaf\x44\x30\xce\x4e\x6d\x7e\x05\x11\xe7\x0f\x50\xf0\x5d\xf6\x9a\xea\xec\xd4\x81\xda\xa2\xe9\x19\x63\x6c\xd7\x36\x4d\x9a\x79\x07\x0f\x5e\xd8\xc2\x09\x00\x1a\x30\x77\xa2\x7e\xbc\xf9\xb2\x43\x2f\x7a\xfb\x65\xb7\x5e\xdc\xad\xe9\x0e\x35\x5f\x9c\x0e\xea\xd1\x8b\x24\x14\x76\xdb\x2f\xfd\x7a\x91\x8c\x11\x40\xe6\x40\xc5\x08\x5d\x83\x11\x03\xea\xfa\x28\xd5\x58\xe5\xf7\x5d\xba\x31\xde\xb6\x1f\x6f\xce\xf4\x5b\x9d\xde\x9a\xd9\x69\x75\x1e\x68\x4f\xee\xb5\x65\x76\x5a\x9d\xad\x5d\xdb\xb5\x8e\x6e\x63\xa6\x2b\xd9\xb3\xdb\xea\x3c\x22\xbd\xb3\xdb\xea\x74\x58\xa0\x92\x35\x57\x2a\x36\x64\x88\xe6\x5d\x9a\x20\x22\x39\x2d\x79\x07\x94\xd1\xb5\xb8\x37\xec\xcd\x5b\x1f\xfe\xdb\x03\xef\xa0\xf4\x58\x91\xb1\x93\x7d\x46\x14\xea\x86\x8a\x4b\xdd\x4c\x3e\x1c\xf8\x60\xe0\x75\x63\x5a\x21\x7a\x6b\x17\x23\xbb\xf1\x81\xc0\xb9\xbd\x4b\xc9\xf0\xb8\x1e\xa7\x2e\xe8\x39\xfe\x9c\xf9\x80\xe0\x80\x00\x87\xa8\x08\xfe\x49\x86\x4c\x08\x82\x81\x10\x05\x98\xd4\x35\xb6\xda\x4e\x8a\x8c\x9d\x37\x56\xe0\xcf\x95\x2c\x47\x27\x45\x36\x69\x3e\x5d\xc2\x18\x82\x9a\xa6\xa9\x8b\x11\x36\xfe\x21\x58\x35\x2e\xb2\x46\x3b\x79\xa8\x7d\xf3\xf5\xd5\xd5\xe5\x87\xc4\xcd\x30\x69\x4f\x54\x2e\x91\xbd\xd8\x39\x4b\x78\x55\xe5\x72\x8e\x65\x2a\x58\xf9\xf7\x39\x9b\xaf\xb8\x36\xc2\x9e\xd7\x76\x71\xfa\xb3\x24\x84\xdb\x60\x56\x17\x3a\x68\x0c\x23\xb6\x72\x5f\xf0\xcc\xee\x0f\xc3\x01\x30\x55\xb2\x4a\x8b\x4c\x2c\x64\x29\x32\xac\xb0\x30\x51\xec\x2d\x9a\x66\x6f\xf0\xad\x5d\xe0\xd3\x0e\xbe\xc5\xa5\x1f\xde\x96\x91\x0b\x96\x22\x7c\x34\xfb\x5b\xd1\xa9\x8e\x80\x5c\x3f\x74\xdc\xff\xae\x66\x17\x91\xa3\x39\xc0\xae\x35\xad\x80\x5c\xf7\xa0\xa7\x20\x16\x48\xdc\xe8\x91\x88\xfe\xe8\x1f\xf2\x78\x61\x85\x1e\x6d\xb6\xd8\x8b\x66\x6b\x47\xd1\x36\x8f\x11\xd0\xf6\x2a\x0f\x0a\x07\xba\x28\x11\x86\xfe\x0a\x0c\xf5\xd7\x77\x60\x4e\xbd\x54\x35\xe0\x30\x1e\x46\x16\x85\xcb\x66\x80\x6e\xe8\x21\x73\xe8\x3a\x93\x65\x26\xcb\x25\x5a\x85\x34\x2c\xfd\x82\x3e\xb9\x58\x77\xe1\xc7\x61\xd0\xda\x75\x4f\xbf\x13\x7a\xc6\xfe\x86\x5d\xa9\xd7\x55\x25\xf4\xc3\x43\x32\x4e\x2f\xb9\x5d\xb5\xfa\xc0\x87\x2b\x51\x54\x39\x96\x01\x27\x63\xcf\x05\xa3\x9e\x7a\xb0\x11\x45\xcf\xe3\x68\xa3\xc3\xa8\x23\xe4\xe8\xec\x3a\x58\x5e\x34\x25\x66\x5b\xda\xf6\x9f\xb3\x10\xa1\xe3\x57\x94\x34\x6b\x19\x7f\x9d\x81\xc7\x01\xca\x88\x8d\x4a\x44\xf7\xd3\x09\x8d\xc2\x17\x98\x44\x7c\x42\xd9\x39\x0a\x45\x22\xff\xf8\x3c\x9b\x9f\xf1\x7b\x68\xd7\x13\xf0\x5a\x32\xb1\xe0\x75\x6e\x41\xdb\x11\x83\x00\x30\x0c\x4b\xaa\x05\xdb\x94\x05\x13\xc6\xd9\x4c\x65\xe8\xb5\xc0\xdf\x64\xf6\x83\xfb\x98\xe0\x3c\x49\xf0\x38\x6f\xb0\x1e\x6d\x3a\xa5\xf9\x53\xc4\x6e\x34\x26\xbf\x86\x33\x83\xb9\x6f\x06\xc8\x02\xa8\x3f\xff\xec\xb3\x94\x7d\xb3\x88\xf0\x8d\xe2\xa9\x74\x6e\x84\xc6\xd2\x6a\xe8\x51\x69\x75\x23\xc1\x25\x5e\xd1\x89\xa2\xbc\xdb\x4c\x10\xb6\x94\x9e\x84\x7e\x8d\x4d\x16\x83\xc6\xba\xad\x06\x3a\xac\x22\x7d\xc6\xb5\x59\x71\x2c\x09\xf3\xf8\x17\xf4\x09\x38\xd2\xd4\xf3\xb9\x10\x99\x21\x1f\xec\xe7\xaf\x5e\x3c\x77\x15\xda\x99\x2f\xa7\x0e\x39\x3e\xc4\xdd\xa3\x53\x1b\x91\xf5\x2f\x8b\xd2\xff\x17\xb0\x5d\x13\xef\x1a\x86\x95\x35\x8d\x2d\x68\x4c\x96\xc6\x0a\x9e\x79\x9a\x91\x90\x8c\x25\x44\x97\x21\x12\x2a\x49\x26\xec\x96\xa4\x60\x9b\x0d\xd0\x00\x81\x5d\x9d\xb0\x77\x70\xfc\x62\x92\x90\xf8\xf9\x9e\xaa\x0d\xd7\xb8\x8b\x67\x00\xcc\x6f\xe8\x03\xc5\x3b\x8b\x86\x80\xa4\x68\xa1\xcb\xa8\x4d\xdb\x46\xcf\x4a\x62\x9e\x2f\x70\x4a\x37\xf4\x29\x85\x59\x03\x20\x3f\x0e\xc8\x3d\x1a\x7f\x1e\x77\x3b\x8f\x74\x2e\x32\xe3\x79\x00\xe7\x03\x05\x83\xdb\x94\xd8\x66\x34\x06\x31\x38\x4a\x9c\x20\x3c\x05\xe9\x97\x4c\x62\x95\x47\x0b\x58\x79\x26\x8b\xf1\x6f\x8b\x07\xcf\x87\xcd\x3a\x30\xa0\xd3\x98\x1c\x1e\x86\xeb\x69\x46\x54\xb9\xb3\x89\xcb\xf5\xa4\xa3\x67\xfa\x15\xb4\x8c\x43\xa4\x63\x80\x47\xe3\x8c\x4a\x56\x53\x62\x87\x6f\xc0\x74\x2c\x79\x1e\x29\x09\xc4\xdd\xcc\x77\x60\x1d\xb1\x59\x83\x38\x02\x3f\x67\x66\x1e\x35\x3b\xf7\xf1\x36\x45\xa6\x70\x18\x43\xc7\x71\xf8\x38\x02\x6a\x8f\x41\xde\x34\x7c\x47\xd2\x4f\x8f\x66\xf5\x82\xbd\x79\x3b\xbb\xb7\x62\xec\x78\x7d\x4d\x7e\xfc\x2d\x8b\x59\x28\x44\xc7\x3d\x9f\xbd\x2e\xdd\xce\x02\x84\x09\xfb\xf4\x76\xfc\xf9\x66\xf4\x9c\xac\x14\x23\x7f\x03\x38\xff\xec\xff\xff\xe5\x5f\x10\x0b\xe5\xa2\x84\x31\x63\xf6\x57\xd4\x46\xfc\x50\x2f\xd8\x39\x9b\xd5\x8b\x37\x67\xf0\xf1\x6d\xbb\x7a\x69\x51\x58\x62\xdc\xc5\x28\x09\xb1\x46\x64\xa1\x47\x9f\x98\x47\x67\x6c\xce\xcb\x52\x59\x56\x81\xb9\xc3\x4a\x55\x9e\xa2\x8c\xf3\x86\x3c\x74\x4c\x26\x00\x7c\xdc\x0a\x46\xb9\xaa\xe0\xe7\xe2\x76\x74\x4b\xe0\x91\x46\x28\x43\xe3\xb5\x47\xc9\x1d\xec\xc5\xc8\xfe\x64\xbf\x82\x59\xce\x9c\x00\xfd\x95\x13\xe7\xb0\x8b\xae\x17\xb7\xd2\x2c\xa4\x13\xe7\x9e\x0b\x51\x50\x45\x9b\xdb\xb8\x19\x86\x49\xbc\xe7\xe1\x2f\xbb\x1c\x52\xcc\xed\xca\x2d\xa2\x49\x03\xaa\x24\x34\x07\xa6\x91\x48\x18\x6f\xf1\xb2\x97\xb1\x38\xd5\x1f\x4c\x72\xcf\x23\xa3\x55\x03\x74\xcc\x62\x6e\x63\xed\xa2\xb9\x55\xda\xcc\xd0\x33\xba\x39\x56\x64\xca\xe1\x9f\x2d\x10\x0e\xa9\xe1\xce\x04\xc9\x5e\x9b\x24\x0a\x52\xed\x31\x4a\x42\x50\x62\xa7\xf6\xdf\x74\x72\x11\xfb\xee\xd4\x0a\x82\xa4\xeb\x3e\x30\x06\x84\xdf\xa9\xd3\x35\xb1\xff\xda\x18\x36\x1a\xfc\xd3\x0d\x97\x17\x4b\xd1\x90\x57\xae\xae\x2e\xfd\x57\x84\x0c\x1c\xbc\x2f\x72\x3f\x88\x42\x14\x3b\x97\xd5\xe9\xf3\xb2\x13\xa7\x60\xb0\x4b\xbf\xbf\x3b\xc8\xc4\x02\xdc\x86\x14\xa4\x76\x8a\x05\xf7\xa3\xb1\xf3\xee\xc0\x17\x6e\xdc\xdf\x8d\xb5\x46\xbe\x30\x9a\x85\x28\x35\x9c\x40\x71\x15\xfc\x2f\x05\xcf\x1e\xe7\xf9\x88\x80\x1f\x56\xe5\xe8\xcb\xfa\x17\xa0\xf0\x26\x2c\x71\x92\x40\x83\xb2\xf5\x06\x0f\xac\xcc\x93\x33\xf1\xf5\x1d\x6d\x41\xf4\x19\x01\xaf\xbd\x50\x03\x57\xe3\xec\x9c\x85\x6b\x2c\x8d\xb8\x73\x76\x1e\xb9\x9d\x8f\xf3\x5c\xdd\x5e\x72\x6d\x25\xcf\xcf\x18\x63\x56\xd7\xce\x28\x7c\x22\xcd\x9c\xeb\xec\x75\x89\xb7\x6e\xce\x9a\x16\x5f\xfe\x01\xeb\x3a\x67\xf1\x84\x5b\x22\x55\x8b\xf7\xdb\x42\xb5\x5b\xac\xf6\x0b\xd6\x4e\xd1\xea\xd0\x68\x11\x33\x1c\xd8\x75\x07\x59\x63\x51\x7a\xac\xcc\x25\x82\x0c\x22\x85\xf8\x05\xcf\x5a\x06\xf6\x00\x10\x68\xd0\x0a\xde\x3a\x78\x94\x97\x5c\xf3\xc2\x78\x77\xe5\x3b\xae\xcd\x48\xc3\x1e\xbe\x63\xe7\xac\x69\x87\xde\xef\x6b\xa1\xef\x9b\xee\x3a\x7d\xfd\xf2\xdb\xf4\x97\xf0\x71\xe4\x07\x44\x5d\x86\xb1\x0f\x43\xd5\x63\x20\x2c\x3c\xd7\xe2\x0d\x0c\xe3\x83\xdf\x72\xc1\x4a\xdf\x2d\xfd\x56\x91\x61\xcd\x12\x5c\x24\xf5\x19\xac\xd7\xae\xf9\x2b\x51\xe2\xa4\x61\x37\xc1\xbb\xe9\x0e\xef\xee\x46\xe1\x45\x29\xd4\x62\x0b\x0f\xf1\x7e\x1b\x0f\x5c\xd6\x8f\x41\x24\x70\xc2\xa7\x18\x96\xf2\xa9\x6e\xef\x31\x9e\x6e\x94\x0a\xf7\x3a\x44\x9d\x12\xb3\x2f\xc9\x49\xf2\xd1\x78\xef\x20\xe8\x75\x6e\xc8\x56\xdf\xf0\x06\xc8\x37\xd2\x47\x24\x30\x3b\x10\xec\x92\x7d\x9d\xb6\x75\x5f\x4e\x33\x98\x48\x7d\x82\xe2\xd9\x96\x98\xd8\x14\x12\x41\x16\xbc\x36\xe2\x12\xc6\x81\xbc\x34\x67\xed\x86\xa7\x65\x5d\x3c\xaf\x8b\x99\xd0\xd0\xe2\x1b\x9e\x16\xd2\xbe\x2e\x2b\x55\xd5\xe0\x12\x67\x41\xac\x3c\x0c\x5b\xf2\x34\x92\x29\xde\x1d\x68\x72\xad\x88\x6a\xfa\x4c\x18\xc3\x97\x62\xbc\xab\xec\xc1\xb3\xc1\xbb\x89\x93\x56\xc1\x9c\x44\x4b\x2a\xea\x15\xe7\x60\x9b\x0b\x43\xce\x18\xe8\x8a\xa1\xf4\x14\x83\x6c\x6a\xa1\xbe\x64\x6c\x63\xbb\xeb\xc8\x9c\xd8\x99\x7e\x45\x25\xb0\x95\x7a\x5d\x71\xc3\x56\x3c\xa3\xb1\x7d\xc9\x56\x4c\xf1\x65\x4c\xe1\x15\x16\x59\x46\x77\x74\xa3\xbb\xbf\xe0\x09\x22\x14\x77\x61\x36\xf5\x4a\x3f\xe4\x78\x81\x99\x97\xba\x9a\x6f\x65\x82\x5b\xc9\x5c\x02\xd2\xce\xe8\xee\xcc\xe5\xee\x4b\xe5\x7a\x0a\x45\x9e\xca\xce\x21\x1b\xf8\x63\x32\x77\x1b\x06\x08\x2f\x20\x77\x5d\x8a\xe6\x8e\xd5\x7c\x05\x7b\x92\x62\x0b\xcf\x8d\x82\x2d\x70\x67\x98\xb4\x42\xad\xf3\xe1\xee\xd9\xbd\xa6\x39\xad\x75\x9e\x4c\x9c\x10\xbf\xe4\x76\x35\xde\x37\x30\xec\x4a\x32\x61\x09\xf0\x1c\x08\x91\x64\xfc\xc1\xb9\x67\x00\xf1\xe1\xb9\xe7\x68\x74\x13\x62\xed\x48\x3d\x97\x64\xec\x91\xf4\x62\xb9\xbc\xc1\xbb\x10\xd6\x51\xad\x50\x16\xe3\x0b\xb2\x34\x96\x97\x73\x91\xb2\xef\x05\x13\x77\x15\x5d\x19\xa3\x6f\x74\x8d\xac\x10\x64\x3e\x36\x93\x64\xd2\xcc\x15\x5e\x9e\x30\xf7\xc6\x8a\x62\x02\xcc\x35\x9d\xb2\x5c\x5e\x8b\x3c\xa4\xaf\x31\x0a\x92\xac\x94\xb1\x67\x48\xbb\x26\x3f\xdd\xac\x60\x14\xa6\xf2\xd5\xc6\xbd\x91\xdb\xe3\x33\xd3\x72\xc1\x3e\xf2\x2c\xf7\x35\x37\x97\x5a\x2c\xe4\x5d\x98\x71\xc2\x12\xbc\xb3\x4a\xb6\x67\xc0\xe3\x9c\x3e\x9f\x4d\xa7\x09\xfb\x7f\x81\x12\x28\xac\xea\x20\x05\x6b\x9d\x83\xf1\x69\x44\x80\x76\x70\x8d\x17\xd8\x0a\xf5\xd0\x5d\xe5\x05\x2b\xa7\xc3\xe3\x70\xf9\x55\xaa\x45\x4e\x9e\x2b\xda\xc8\x28\xbc\x4d\xd5\xf7\xc4\x03\x18\x0c\x02\x40\xb7\x4a\x5f\x4f\x18\x85\xcc\x99\xd3\xf4\xe0\xf8\xb1\x7b\x55\x6b\x52\x23\xd4\x2a\x81\x84\xc9\x38\x8e\x1c\x1e\x19\x9f\x65\x72\xb1\xe5\xfc\x38\xa4\xa1\x95\x12\xff\x91\xa3\x24\xcb\x4c\xdc\x6d\x8f\xf8\xcc\x8f\x71\xd9\xfd\x4d\xaf\x62\x57\x72\x1f\x66\x22\x0b\x6f\xc7\xb8\x8e\xeb\xbd\x51\x86\xdf\xe5\xec\x7b\xc3\xc6\xce\x82\x1c\xcc\x55\x75\xff\xfa\xe5\xb7\xa3\x7a\xc2\xe2\xfe\x5f\x70\x23\x40\x7c\x3c\x3c\x24\xde\x10\x8d\xe2\xb9\x7b\x02\xbf\x1b\x31\xe2\x56\x2c\xb9\x1d\x03\xde\xcc\xee\x0f\x36\x13\xfc\xde\xb6\x8d\xe2\xc0\xdd\xe1\xe1\xdd\x99\xfe\x9d\xfb\x1e\x32\xfe\x3f\xf9\xce\xf7\x05\xd2\x5d\x25\x41\xdf\xd6\x4e\x36\xad\xcd\xae\x70\x78\x53\x61\x80\x92\xc7\xef\xe3\x8c\x1b\xc1\x4e\xe0\x0c\xbf\x7e\xf9\xed\x04\x4d\x7d\xe6\x73\x96\xfe\x33\x9c\xdf\x12\xec\x82\xb3\x73\x76\x02\x03\xe8\x4f\xd4\x17\xce\x3d\x68\xaa\x9c\xa1\xc5\x19\x2a\x17\xf6\xce\xa7\x46\x5f\x81\x7d\x3b\xc7\x3a\xf8\x5a\xbb\x50\x0d\x9a\x0a\xee\xe0\x5a\xc5\xaa\x3a\xcf\xe9\xd2\x19\xe9\x39\x91\x51\x92\x52\xd5\xa0\xba\xbd\xf9\xea\xd4\x12\xc5\xc9\x49\xed\x15\xde\x84\x8d\x1d\x50\xb0\x15\x5c\xb8\x23\x65\xec\xb9\xb2\xee\x0e\x2f\x80\x04\x58\x28\x29\x56\xfc\x46\x30\xff\x36\xc7\x6e\x93\x04\xe7\x99\x61\xb6\xca\x5d\x63\xc3\x1b\x3b\x20\xf9\x3d\x6a\xb7\x52\x0b\x17\x1f\xe7\xbe\xa0\x89\x04\xbf\x5d\x89\xfb\x26\x0a\x1f\x2a\xec\xa3\x4b\x76\x42\x07\x85\xeb\x52\xcb\x6d\xda\x51\x3a\x39\xba\x4e\xd2\xaf\x0f\xe2\x88\x4f\x47\x27\x97\x71\xdb\x71\x09\xf3\x00\xeb\xf0\x27\x4b\x28\x07\x8b\xc7\x45\x7e\xe3\x3c\xf2\x46\xde\x17\x83\x86\x68\xff\x82\x02\xe8\x29\x8f\xd9\x2b\xb0\x37\x43\x52\x9d\xc2\x66\x67\x44\x6a\xd3\xbf\x72\xe1\x28\xb2\xc6\x36\x43\x52\x3e\x4a\xe3\xa6\x89\x0b\x4b\xe2\x8a\xd2\xcd\x90\x54\x14\x7a\x25\x33\xcf\x65\x49\x42\xcb\x0a\x6f\x67\x94\xaa\x3c\xfd\xb3\xcf\x3e\x8b\xd3\x45\x13\x76\xeb\x72\x22\xe8\x4f\x55\x5a\x58\x42\x13\x06\x94\x08\x8b\x7c\x2b\x3c\x40\xd6\x8a\xa2\xc2\xd3\x47\xab\x88\xcf\x9f\x0b\x60\xb3\x82\x5c\x98\x06\x47\x8f\xc4\xde\x90\x99\x2f\x0f\xe9\x08\x99\x75\x92\x7d\x77\xc4\x8c\xfa\x1c\x1f\x32\x3b\x26\x02\x76\x8e\x0f\x5a\x3c\x7d\xf1\x65\x6f\x10\xec\xb9\xb8\x8d\x62\xe3\x28\x71\x30\x58\x83\xaf\x55\xc4\x51\xaf\x03\x03\x6a\x1d\xf1\xb4\x00\x34\x19\x47\xf5\x14\x3a\xca\x45\x00\xe0\x28\xce\xf3\xe2\x17\xfb\x63\x76\xad\x4c\xc4\x78\xc2\x92\x88\x67\xce\xd8\xa3\x4f\xb2\x47\xe8\x06\x34\x73\x84\xb9\x29\xe4\x68\xaa\x7d\xdc\x3c\x3c\x3a\xae\xd7\x1b\xd6\xeb\x8b\xea\x45\xa4\xdd\x1b\xd3\x33\x55\x47\x50\x6f\x8b\x42\x31\x51\x36\xaa\x4d\x3e\x6d\x6a\xa0\x07\x1b\x45\xd0\x91\x00\xda\x2c\xf4\x3a\x20\x7a\xbe\x3f\x76\x4e\x06\x41\x2b\x02\x74\x5c\xf4\x7c\xab\x44\x6c\x18\xbc\x5d\x17\x0e\x62\xfc\xf0\x80\x39\xbe\x37\x41\x49\x6b\x2d\x55\x6d\x18\x4c\x84\x8e\x89\x5a\x38\xc0\x1b\xca\x77\x04\x36\xc1\x84\xe2\x80\x94\x33\xc6\xd4\x98\x17\x05\x07\x2c\xeb\x80\xe8\x79\x4f\x09\x59\x08\x1d\x0d\x8c\xd5\x37\x3c\x07\x02\x27\x89\x8b\x4c\xd2\xa7\xdd\xef\x05\xec\x8a\xa8\xfb\x08\xa7\x16\xef\x91\x55\x62\xf5\xd5\xeb\x1a\x6f\xf6\xeb\xf7\xbd\x29\x2a\xf1\x4a\x90\x63\x8a\xc6\x58\xc5\x35\x2f\x84\x15\xda\xb8\x48\x2d\xde\xb6\x71\x9e\x1c\xd6\x50\xf9\xa4\xd2\xc6\xb5\x48\x43\x95\xd0\xad\x58\x27\xcc\xf2\x8a\xbe\x87\x60\xa7\xef\xf8\xb0\x79\x8b\x14\x4c\xc6\x64\x8a\xf8\x77\x79\x7b\x15\x45\x0b\x76\xc8\xba\xae\xbc\x81\xaa\xf3\xac\x7c\x64\x9b\xd3\x4b\xab\xfc\xe4\x7d\x42\xc6\xa7\x97\xa0\x44\x95\x97\xfc\xd6\x19\x99\xb5\xff\x1d\xda\x42\x03\x7e\x6d\x53\x0e\x19\xaf\x4d\x3a\x2c\xb8\xe8\x8c\x58\x83\x80\xb3\x45\xe5\xd2\xb3\x6e\x83\x6d\x51\xb5\xc9\xd9\x17\xbb\x66\x4d\xe5\xf6\x61\x61\x63\xb9\xc0\x03\xe1\xba\xbd\x14\x95\xc0\xb7\xff\xdc\xdf\xdf\x18\x70\xa5\x82\x44\x6d\x20\x8f\x2e\xfc\xab\x7b\x3e\xee\xac\xb0\x22\x2d\xf1\xdb\x9f\x8c\xfd\x08\x5a\xea\x9b\x24\x84\xa8\x7f\x19\xe2\xf1\xae\x22\xfb\x2d\xb1\x70\x1a\x7a\x5c\xf0\x42\xe4\x4d\x1d\xba\xe3\x83\xdc\x84\xbf\x9d\xc1\x17\x5d\xce\xe8\x1b\xef\xf3\x21\x0e\x8d\xf4\x71\x96\x8d\x76\xa0\x32\x89\x9e\xaa\x1a\xdd\x8c\xc9\x87\x1b\xc4\x58\x38\x6e\x44\x17\x27\x07\xe3\x6c\xc1\x94\x66\x23\xd0\x97\x5b\x44\x1b\x6f\xd2\xd5\xe3\x6f\x8b\xca\x87\x57\x5b\xf5\x1b\x7d\xab\x70\x78\x74\x30\x77\x27\x7f\x3b\xf6\x5e\x70\x99\x53\x81\x8d\xe7\xee\x3e\xf8\x49\x7b\xa1\x4e\x54\xf9\x93\x3d\xb2\x45\x35\x1e\x1e\x45\x45\x82\x30\x8e\x08\xd5\x6c\xe5\xf4\xe4\xf7\xff\xf6\xb7\x3f\xfc\xee\x5f\x7e\xf8\xe7\x7f\xff\xe1\x1f\x7e\xfb\x87\x7f\xfa\xbb\xff\xfa\x8f\xff\xfc\xfd\xef\xfe\xfe\x87\x7f\xfd\xed\x1f\x7e\xfb\x8f\x27\xd3\xe0\x7f\x12\x77\xba\x39\x5e\x59\xae\x9f\xde\x55\xda\xb7\x81\x0d\xd2\xb7\xe5\x1f\x9d\xc7\xe4\xf9\x80\x8d\x3f\xe9\xdd\x87\x4d\x86\x88\x57\xf6\x01\x13\xed\x9b\xa7\x71\xa3\x07\xad\x4a\xbe\x8d\xbf\x36\xe3\x0b\x4e\x48\xa8\x52\xa8\x45\x5f\x76\x69\x5b\x52\x60\xf7\x7e\x49\xd1\x80\xad\x82\x24\xa7\x21\xbe\x20\xb1\xb5\x6f\xe1\x50\x50\xf7\xf6\xa9\x70\xdf\x36\x8f\x05\x3a\x6b\xa4\x23\x81\x32\x5f\x09\xbb\x5e\xfb\xbe\xee\x3e\xe9\xf8\x73\xec\xf1\xd1\x39\x6b\x9a\xfe\x5a\x68\x85\x6e\x5d\x74\xdc\x77\x1e\xb1\x4e\xc0\x63\x3f\xb2\xfb\x94\x1d\x7d\xce\x3a\x27\x49\xc2\x2c\x7e\xc9\x3b\x0e\xdb\x16\x4b\x39\x60\x7b\xce\x5b\x0f\x7b\xfe\x94\xc4\x3d\x18\xaf\x58\x9a\xf2\x7c\xbc\x85\x60\xcc\xd2\x87\x71\x78\xac\x8d\x71\x42\x76\xce\x1c\x3a\x64\xc8\x61\x4d\xab\xe7\xeb\x32\xb2\xa0\x30\x8a\x98\x2c\x85\xa5\x27\x0e\x63\x0d\x8d\x4e\x53\x4b\x41\x5b\xf5\x52\xd8\x0f\xb5\xc9\x0e\x51\xd4\xa7\x7b\xd2\xbb\xed\x34\xf3\xf4\x84\xbd\x28\xf3\x7b\x2c\xcd\xc6\x40\x0e\x01\xa1\x34\x93\x59\x81\x1d\xc3\x66\x21\x86\x43\xe5\x81\x46\x31\x9e\xe7\x08\x40\xd9\x55\x5c\x7a\xa9\x0a\x69\x41\xcb\x67\x35\x26\x12\xc0\x5b\x94\xa5\x30\x86\x9d\x4c\xdd\x8c\xb8\xfc\x6e\xe9\xba\x5b\x57\x6f\x05\xfe\x88\xd6\x21\x19\xbd\x2f\x6f\xda\x9f\x38\xed\xcf\x9c\xf6\xa7\x4e\x7b\x73\xa7\xf4\xda\x07\xb7\x7c\x33\x7d\xda\xca\x9e\xee\x79\x74\x6b\x97\x45\x49\x8e\x0d\x31\x16\xa7\xc2\x55\xf6\xc9\x4d\x32\x61\x48\xd9\xc6\xae\xfc\x82\x4a\x22\x37\x9f\xb3\x1c\xd1\x0b\x99\xcf\xc5\xed\x17\xf5\x62\x21\xf4\x08\x70\x8d\xcb\x8b\x59\x9c\xc0\x77\x5e\xe1\x60\xfb\x8d\xaf\xbd\xaf\x7e\x84\x27\x3f\x0f\xcd\x90\x3d\x7f\x7c\xf5\xea\x03\x5f\xfd\xc0\x61\x30\x9e\x51\x54\x31\xfc\xed\xee\x42\xe2\x6b\xae\x74\x0b\xd2\xe8\x1b\xfa\x3b\x3c\xe1\xe6\xfc\xa8\xed\xd7\xe3\x0e\xbd\xa6\xd8\x75\xe1\xf0\x55\x3d\x0b\x0c\x00\x38\x80\x08\xab\xc5\xab\x7a\x66\xe6\x5a\xce\xe8\xc1\x95\xad\x3b\x85\x69\xfb\x15\x96\xce\x3e\x09\x2e\x21\xee\x49\xa5\xff\xcf\xcc\x12\x17\x3b\xde\xcb\x59\x8e\x43\xc0\xfa\xef\x46\x3c\xba\xaf\x17\xb1\x41\xfb\x1d\xc3\x67\xfc\x5a\x44\x1b\x76\xe8\x3b\x2b\xb8\x47\xfb\xdf\x59\x69\x20\xef\xbd\xea\xd1\x7a\x4f\x36\x0d\x04\x0e\xd7\x3d\xa2\xbd\xee\x79\x5f\x65\x37\x04\x57\x08\xf0\xa7\xf7\xcc\x4a\xb3\xae\x43\x9f\x59\x89\x9e\x57\x69\xaf\xf9\xb9\xb8\x6d\x96\x7d\xd4\x13\x2b\xb0\x51\x3d\xf7\x5c\x43\x58\x67\xab\x4f\x94\xe9\x6a\x7a\x74\xdd\x85\x38\xe2\x0d\x96\x68\x97\x7f\xd4\x1b\x2c\x11\x9c\x50\xfb\x7a\xd4\x63\xa0\x8c\x11\xcb\x75\x71\xd4\xd6\xcb\x2a\x47\xbe\xdd\x11\xc5\x97\x89\xa8\x1b\xb7\x0f\xbb\x6f\xd3\x99\xa5\x13\x80\xcf\xcc\xb2\x3f\xac\xbc\x5d\x71\xd9\x75\xe1\x70\x47\xdd\x76\x61\x96\xe9\x13\xd4\x7b\xdd\x95\x86\x3b\x1e\x3f\xf9\xf4\xa0\x37\x33\x86\x2d\x8e\xda\x53\x2a\x86\x0b\x3e\xa0\x54\x0c\x4b\xc3\xd4\xec\xd7\x62\x1e\x9e\x93\x35\x61\xbf\xfc\x1b\x17\xcf\x78\x79\x4f\x19\x0f\x85\x8c\xe1\x1e\xf9\xc7\x72\x9a\x1a\xe6\xb6\x8c\xd3\xcb\xc2\xcc\x88\xd2\x48\x10\x77\xee\x3e\x4d\xab\x82\xac\x03\xef\xbe\x67\x6c\x2a\x30\xc9\x5c\x79\x44\x39\x6f\x69\xb0\x3d\x95\x64\x9e\xce\x2d\x1e\xa4\xf9\x61\x09\xf1\xc4\x93\x70\xc9\x77\xde\x80\x1d\x1f\x53\xd5\x02\x2b\xfa\xf0\xaa\x96\x68\xf4\x9e\x17\x15\x60\x35\xff\xd3\x2f\x2a\x34\xd8\x6d\x5b\x11\xbd\x0a\xe8\xb2\x9e\xe5\xd2\xac\x1a\xfd\xf3\xe3\x9e\x53\x38\xc4\xfa\xf8\x90\x67\x12\x7c\x21\xc5\xee\xa7\x12\xb6\xb4\x44\x58\x9d\xab\xa5\x08\xef\x25\x50\x55\xc5\x1e\x83\x66\x18\x95\x4b\xb4\x8e\x42\x5c\x23\xd1\xa3\x57\x5a\xd5\x11\x9b\xc5\x11\x9b\xb5\x11\x7f\xc2\x6f\x1e\xa0\x01\xf4\xa1\x6f\x1e\xf4\x50\xa5\x53\xf6\x1d\xf6\xe6\x81\xd7\x0b\x7f\xb4\xd7\x0d\x7a\x50\x3e\x40\x55\xb1\x7e\x5d\x35\x9d\xb2\x43\xd4\x90\xd0\x3a\xa4\x53\x37\xd5\xd1\x74\xca\xb6\x35\xd2\x74\xca\x1e\x22\xe8\x7e\x30\x5d\xe6\xf1\x83\x3f\xfd\x74\xbb\x2d\xc5\x6c\xe5\xf9\x39\x4b\xde\x49\x77\x3b\xeb\x5d\xd2\x33\x8d\xcf\xae\x6e\x03\xf1\x45\xb4\x1e\x91\x8e\x8c\x64\xe7\x9b\x0d\x87\x2a\xe5\xae\x54\xe1\x6e\xad\xdc\xfd\x38\x52\xcc\xc3\x4e\x37\x77\xab\xe6\xce\xc4\x5d\x4b\x33\x6f\xbc\xed\xe0\xff\x47\x6a\x5c\xe5\x4c\x54\xe3\xc2\x7b\x94\x35\x2c\xce\x4b\xfa\x67\x66\xb9\xa9\xab\x4f\x11\xd7\x9f\x46\x61\x1f\x6a\x63\xed\xcb\xd7\xed\x55\xd0\x61\x22\x04\x1c\xc0\x8d\xa3\x6d\xf8\xef\x00\x00\x00\xff\xff\x9b\xf7\x11\x8f\x54\x69\x00\x00")

func baronNamePbBaronGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_baronNamePbBaronGoTmpl,
		"baron/NAME.pb.baron.go.tmpl",
	)
}

func baronNamePbBaronGoTmpl() (*asset, error) {
	bytes, err := baronNamePbBaronGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "baron/NAME.pb.baron.go.tmpl", size: 26964, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2c, 0xfb, 0xd0, 0x4c, 0xde, 0x28, 0x43, 0x54, 0xd, 0xef, 0x47, 0x92, 0xf, 0x80, 0x30, 0xf9, 0xa2, 0x7, 0xd6, 0x6a, 0x3e, 0x92, 0x21, 0xc7, 0xe1, 0x4c, 0x5, 0x87, 0x60, 0x9a, 0x20, 0xee}}
	return a, nil
}

var _cmdNameMainGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x4d\x6f\xdb\x3c\x0c\xc7\xcf\xd6\xa7\xe0\x23\xe0\x29\x6c\xc0\x73\x7b\xd9\x0e\x1d\x7c\x68\x9b\xae\x1b\x30\x6c\x46\x9a\xee\x32\x0c\x83\x12\xd3\x8e\x30\x5b\x32\x24\xd9\x45\x91\xe6\xbb\x0f\x94\x5f\x96\x2c\xe9\xd2\x43\x62\xcb\xa4\x7e\xa4\xa8\x3f\xd9\x88\xd5\x2f\x51\x22\xd4\x42\x2a\xc6\x64\xdd\x68\xe3\x20\x64\x01\x2f\x2a\x51\x72\x7a\xd6\x8e\x1e\xda\xd2\xbf\x75\x46\xaa\xd2\x72\xc6\x02\xbe\xd9\x24\x9f\xbc\x7b\x26\xdc\x1a\xde\x6c\xb7\x70\x6e\xd1\x74\x68\x38\x8b\x18\xeb\x84\x81\x95\x56\x85\x2c\xa1\xff\x9a\xdc\xf8\x15\x63\x45\xab\x56\x20\x95\x74\x61\x04\x1b\x16\x50\x9c\xe4\xde\x73\xbf\x09\x13\x9e\xf5\x9b\x92\x19\x2e\xdb\xf2\x2a\xcf\x4d\x0c\x3c\xa7\xf7\x44\xe4\xb9\xe1\x31\xf0\xcb\xb7\x17\xef\x2e\xe8\xc5\xbb\x80\x50\x39\xd4\xe8\x8c\x5c\x59\xa8\xa4\x75\xa8\x80\x3c\xd1\x5a\x1e\xbd\x48\xff\xb8\x58\x64\x03\x7c\xed\x5c\x33\xb1\xe9\x47\xb6\xd7\x93\xee\xe6\xd9\xcd\x40\x2a\x4d\xb3\xda\x23\x95\xf3\xec\x06\x42\xe2\x45\xaf\x07\x7e\xb9\x5a\xdc\x0f\x40\x25\x9c\xdd\x03\x92\xed\x25\xd2\xb5\xd6\xd5\x41\x01\xc7\xe2\xf1\x18\x0a\x51\x59\x9c\xaa\x56\xeb\x1c\x79\xc4\x58\x70\x7e\x0e\x0f\x16\x01\x55\x27\x8d\x56\x35\x2a\x07\x9d\x30\x52\x2c\x2b\xb4\x31\xc8\x02\x2c\xba\x04\x3e\x54\xa2\xb4\xb0\x16\x1d\x42\x63\xa4\x36\xd2\x3d\x81\xee\xd0\xc0\xad\xea\xc8\xdf\x26\x2c\x90\x05\xf8\x58\x70\x99\x82\xb6\xc9\x1d\x3a\x54\x5d\xc8\x67\xb7\xd7\x0f\x77\x3c\x7a\x3f\x18\xff\x4b\x81\x73\xba\xf7\x60\x37\x4f\x48\x81\x3b\xd3\x22\x87\x34\x85\x41\x64\xc9\x42\x7f\xd6\x8f\x68\x42\xbf\x31\x62\xc1\xd6\xc7\xa0\x73\x1f\x0b\xf1\xf3\x6a\x36\x9b\x53\x1c\xef\x70\x3c\x0c\xd5\x15\x52\xef\x31\xe2\xbc\xde\xf7\x71\xd9\xd7\xf9\x82\x40\xde\x74\x00\x1a\xa5\x03\x29\x14\xb5\x4b\xee\x1b\x23\x95\x2b\x42\x7e\xf9\xbf\xe5\xb1\xdf\xf3\xaf\x54\x69\xf7\x89\x4c\x77\x02\xec\x26\x7a\x04\x46\xda\x3b\x01\x1b\xe5\x79\x1a\x46\xda\x3a\x01\x1b\xa5\xb9\x03\xdb\x0e\xfd\x4c\xe3\xa3\xef\x67\x12\x54\x93\x0b\x87\xa3\x42\xd1\x92\x8c\xdc\x1a\x9f\x7a\x01\x2d\x11\x95\x17\xcf\xa3\x91\x8e\x94\xbc\x7c\x02\x52\xb0\x1d\x84\x9c\x09\x63\x31\x24\x6d\xca\x02\x0e\x6a\xe2\x73\x3a\x3b\x83\x83\xf3\xfd\x65\xf8\x93\xeb\x74\x0a\xba\xae\x8c\x6e\xab\x52\x21\x57\x7a\x98\x4b\xe0\x34\x98\x56\xc5\xfd\xb2\x3f\x79\xdd\x5a\x07\x4b\x24\xed\x83\x56\x08\xba\x80\xef\xd3\x9c\x78\x9e\xfa\xfc\x79\x6a\xd0\x1f\x3c\x0a\x02\x5f\xdc\x61\xd8\xcd\x5b\x15\xf6\x99\x44\x6c\xcb\x7e\x07\x00\x00\xff\xff\x1f\x82\x50\x0b\x65\x05\x00\x00")

func cmdNameMainGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameMainGoTmpl,
		"cmd/NAME/main.go.tmpl",
	)
}

func cmdNameMainGoTmpl() (*asset, error) {
	bytes, err := cmdNameMainGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME/main.go.tmpl", size: 1381, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb9, 0x88, 0x5b, 0xe, 0x57, 0x95, 0xcf, 0x6e, 0xf, 0xf8, 0xb4, 0x7d, 0x9e, 0x97, 0x71, 0xcc, 0xb, 0x39, 0xfe, 0xf, 0x7a, 0xa8, 0x19, 0x31, 0xe6, 0xee, 0x7c, 0xb1, 0xc5, 0xd5, 0xe1, 0x79}}
	return a, nil
}

var _cmdNameClientMainGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\x4d\x6f\xe3\x36\x10\x3d\x8b\xbf\x82\x25\xbc\x0b\xaa\x75\xe8\x45\xb0\x7b\x59\xc0\x87\xb5\x8b\xee\xe6\xd0\xc0\x48\x8c\xf6\x90\xe6\x40\x53\xb4\x4c\x84\x26\x15\x8a\x4a\x52\x08\xfa\xef\xc5\x50\x92\xe5\xcf\xd8\x75\xd2\xfa\x22\x82\x63\xbe\x37\x6f\xf8\x66\xa4\x8c\x8b\x07\x9e\x4a\xbc\xe4\xca\x20\xa4\x96\x99\x75\x1e\x53\x14\x11\x61\x8d\x97\x2f\x9e\xa0\x88\xcc\x35\x4f\xe1\xa9\x2d\x3c\xca\x52\xcd\xb1\x7c\xc4\x6c\x6c\xcd\x5c\xa5\x6c\xea\xb8\xc9\xc3\x31\xc2\xb5\x26\x98\x18\xee\x73\x82\xab\x0a\x45\x24\x55\x7e\x51\xcc\x98\xb0\xcb\x01\xec\x5e\x28\x1b\x9e\x2c\xb5\x01\x48\x9a\xa4\xaa\x10\x8a\xb2\x19\x26\x65\xc9\x26\xa3\xab\xc0\x3f\xe1\x7e\x81\x2f\xaa\xea\x14\xb2\xd4\x65\xa2\x25\xb3\x36\xd5\x92\xa5\x56\x73\x93\x32\xeb\xd2\x41\x08\x76\x44\x31\x42\x4f\xdc\x81\x3a\x08\x7c\x4b\x12\x87\x73\xef\x94\x49\x51\xb4\xf0\x3e\xdb\xd8\x80\x34\xd7\x37\x62\x84\xe6\x85\x11\x58\x19\xe5\x69\x8c\x4b\x14\x41\x55\xd8\x6d\x88\xfe\xc1\x1d\xfd\xd8\x62\xf6\xeb\xa4\x18\x4f\x12\x47\xfa\x98\x7c\xfd\xf2\xe9\xf3\x27\x58\xa4\x37\x93\x31\xa6\x3f\xa6\xd3\x49\x8c\xb5\xca\xbd\x34\x18\xfe\x23\xf3\x9c\xc4\xbb\x70\x6d\x46\x7d\x4c\x60\xb9\x0e\xf7\x25\xc0\x01\xd0\x09\x38\xad\x90\x7e\x7d\x31\x1d\xce\xe7\xcb\xcb\x4b\x58\x5c\x7f\x9b\xde\xee\xe2\x54\x8d\x5e\xf0\xc5\x9a\xde\x09\x77\xb9\xa4\x31\xd4\xf4\x59\xf9\x05\xee\x79\x89\xbf\x0e\x31\x0b\x37\xd0\x5e\x56\xcf\xcb\x13\xee\x6b\x30\xc0\x23\xee\xac\xc1\xdf\xa1\x2e\x63\xad\xa4\xf1\x28\xd2\x36\x65\x13\xa7\x8c\xd7\x86\x92\x3b\x08\xb1\xb2\x04\xc0\x5b\xe9\x9e\x94\x90\xec\x9a\x2f\x65\x55\xdd\x83\xd4\x4c\x1b\x48\x45\x58\x63\xfa\x58\x3a\x07\x99\x84\xd2\xff\xaa\xb8\xa6\x28\x5a\x5d\x73\xbf\x59\xb3\x3f\x95\x5f\x5c\x99\x5c\x8a\xc2\x49\x1a\x6f\x6c\x8f\xb4\x15\x0f\x61\x2f\x46\x11\xe8\x70\x0e\xff\x34\xc4\x46\x69\x10\x1f\xf2\xfa\x8d\x7b\xae\xa9\x74\x2e\x46\x51\x85\xa2\x44\xce\xa5\xc3\xc0\xce\xc6\xda\xd6\x65\x99\x81\x22\xc8\xba\xd6\xb3\x4a\x2b\x9b\xb1\x6b\xf9\xdc\x05\x28\x1c\x3b\x95\xa8\x2c\x1d\x37\xa9\xc4\x3d\x05\x50\xeb\xc5\xf8\x5d\xfa\x85\x4d\xf2\xa6\x9c\x07\xab\x05\x9b\xaa\x59\xa3\x08\x58\x84\x7f\x01\xac\xa6\xc9\xd9\x88\x8b\x87\xd4\xd9\xc2\x24\x20\x22\x82\x2e\x51\x06\x92\x2e\xcb\xef\x16\xce\xe1\x9e\x62\x37\xf2\xb1\x90\xb9\x9f\xfe\x9d\xc9\x15\x56\x64\x8b\x4e\xe4\x96\xf8\x8d\xc3\xf5\x01\x2a\xfc\x4b\x1f\x7f\x54\x20\x7d\x8f\xf6\x4e\xfc\x9c\x92\xbb\xe0\x0e\xd6\xe1\xdd\xe3\x03\xda\xb6\x59\x00\x76\xf8\xe1\xe9\x2f\x43\x42\x6a\xc0\x55\x35\x95\x0d\xd6\x7a\x1b\xb8\x93\x79\xa1\xfd\xf0\xc3\x2f\x35\xc1\xcf\xb6\xf0\xc0\xd0\x98\xb1\xea\xc6\xcd\xda\x80\x0b\x9d\x01\xf0\xd0\xb4\x3f\xa4\xce\xa4\xdb\xba\xbb\xba\x15\x42\x4f\xef\x6f\x05\x08\xdd\xdf\x1d\xeb\x85\x95\x55\x96\x01\xbd\xf5\xcb\x41\x5a\x08\x1c\xb4\x4c\x8d\xf1\x46\xdf\x34\x20\x6b\xe6\x09\xbe\x09\x5e\x01\xf6\xbd\x8d\xd2\x05\x68\x3b\x07\x8f\x39\x86\xae\xdd\xf4\x8e\x29\x3b\xbc\xdd\xcc\xce\x76\x66\x07\x7a\xd4\x3c\x1b\x54\xa7\xdb\xf3\x6c\x86\xd7\x3d\xfa\x9a\x49\x8f\x8c\xef\xf0\x6e\xdf\xb0\x6c\x78\x7d\xec\xb7\x2c\x84\x8e\x4e\x6f\x23\x56\x57\x15\xde\x4f\x63\x6b\x8c\x14\x9e\xb6\xef\xad\x7f\x37\x8d\x8d\xd8\x9a\xc5\x90\xc3\x5e\x8b\x75\x01\x6a\xc4\x7b\x4f\xe2\x83\xca\xff\xcf\x49\xdc\x29\x7c\x9f\x49\xdc\xe1\xfd\x07\x93\xf8\x1c\xf0\xf3\x26\x71\xbd\xaa\xea\xcf\x9b\xf0\x5f\x50\xbc\xe1\xdc\x8b\xf7\xfe\x85\x0f\xaa\x7f\x02\x00\x00\xff\xff\x06\x3c\xfd\x90\x6b\x0b\x00\x00")

func cmdNameClientMainGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameClientMainGoTmpl,
		"cmd/NAME-client/main.go.tmpl",
	)
}

func cmdNameClientMainGoTmpl() (*asset, error) {
	bytes, err := cmdNameClientMainGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME-client/main.go.tmpl", size: 2923, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc2, 0xcd, 0x51, 0x79, 0x9a, 0x4c, 0xcc, 0x37, 0xb0, 0xb7, 0x60, 0x7c, 0x1d, 0x9f, 0xa5, 0x53, 0x53, 0x2e, 0xf6, 0x2, 0xf2, 0x9c, 0x5c, 0x8c, 0x6d, 0x31, 0xc4, 0x35, 0xab, 0x44, 0x75, 0xee}}
	return a, nil
}

var _serverEndpointsGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8c\xb1\xca\x83\x30\x18\x45\xe7\xdc\xa7\xf8\x70\x32\xc3\xaf\xbb\xe0\xf2\x43\x87\x2e\x22\xf4\x09\x62\xfc\xda\x86\xd6\x24\x24\x51\x07\xf1\xdd\x8b\x6d\x51\xba\x5d\x0e\xe7\x1e\xaf\xf4\x43\xdd\x98\x22\x87\x89\x03\x60\x06\xef\x42\xa2\x1c\xc2\x77\x94\x2d\x4b\xd1\xfe\x9f\xdf\xa8\x55\xe9\x4e\x7f\xeb\x9a\x41\x6c\xf8\x17\x96\xdb\xdd\x68\xce\x20\x81\xb2\xa4\x93\xed\xbd\x33\x36\x45\x52\xde\x3f\x8d\x56\xc9\x38\x4b\xbd\x1b\x94\xb1\xb8\x8e\x56\x1f\x46\x2e\xc9\x77\xc5\x71\x58\x20\xe2\xa4\xa9\xaa\xe9\xdb\x2c\x1a\x9e\x2f\x9f\x99\x4b\x08\xde\xcd\xaa\xa6\x86\xe7\x23\x14\x27\x2d\x01\x11\x38\x8d\xc1\xd2\xee\x61\x05\x5e\x01\x00\x00\xff\xff\xa5\x94\xc8\x35\xe6\x00\x00\x00")

func serverEndpointsGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_serverEndpointsGoTmpl,
		"server/endpoints.go.tmpl",
	)
}

func serverEndpointsGoTmpl() (*asset, error) {
	bytes, err := serverEndpointsGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/endpoints.go.tmpl", size: 230, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5c, 0x95, 0xf2, 0xdc, 0x64, 0xb6, 0xb7, 0x5e, 0x95, 0x48, 0xb1, 0x9c, 0x2c, 0x2a, 0xed, 0xf3, 0x43, 0x5c, 0x7, 0xc1, 0xdb, 0x9e, 0x4d, 0x52, 0x52, 0x63, 0x14, 0xf3, 0x89, 0xac, 0x20, 0x4b}}
	return a, nil
}

var _serverInterruptGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8f\xc1\x6a\x83\x40\x10\x86\xcf\x3b\x4f\x31\x2c\x14\x14\x12\xa5\xd7\x62\x8f\xa1\x78\x68\x28\x4d\x5e\x60\xd8\x8c\xba\x44\x77\x65\x76\xac\x48\xe9\xbb\x17\x4d\x4a\xc9\x65\xe0\x9b\x1f\xfe\x6f\x66\x24\x77\xa5\x96\x31\xb1\x7c\xb1\x00\xf8\x61\x8c\xa2\x98\x81\xb1\xcd\xa0\x16\x8c\x8d\xe9\x36\xcb\xe4\xdb\x40\xfd\x0a\x69\x49\x8e\xfa\xde\x42\x0e\x50\x96\x58\x07\x65\x91\x69\xd4\x7b\x0b\xfa\xbf\x05\x34\x53\x70\xff\x79\xc6\x22\x0e\x5d\x47\xa1\xda\x23\x8b\x44\xc9\xf1\x1b\x8c\xc3\x97\x57\x1c\xe8\xca\xd9\x1a\x61\x4c\xc5\x69\x53\xed\xf0\x39\x07\x73\xd3\x16\xc7\xa8\xbe\x59\x32\xb7\xc3\xbb\xbd\x38\xd5\x6f\xf5\xf1\xfc\xc0\xe7\xc3\xe7\x7b\x0e\x46\x59\x06\x1f\x48\xf9\xb0\x3a\xd6\xf6\x66\xd0\x62\x83\x26\xb3\x4f\xc9\xee\xb0\xda\xbb\x1c\xc0\x94\x25\x7e\xf4\xe4\x18\xe7\x8e\x94\xd7\xdb\x53\x37\xe9\x25\xce\x01\x3b\x0a\x97\xde\x87\x16\x97\x38\xe1\x4c\x41\xb1\x63\x61\x00\xb3\x3d\x51\xed\xf1\xd1\x02\x3f\xf0\x1b\x00\x00\xff\xff\x9a\xa1\x07\xc4\x4c\x01\x00\x00")

func serverInterruptGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_serverInterruptGoTmpl,
		"server/interrupt.go.tmpl",
	)
}

func serverInterruptGoTmpl() (*asset, error) {
	bytes, err := serverInterruptGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/interrupt.go.tmpl", size: 332, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb4, 0xc, 0x82, 0xf7, 0xfd, 0xb, 0x1e, 0xed, 0xd0, 0x55, 0x7, 0x5, 0x2b, 0x1f, 0xa4, 0x65, 0x6e, 0xbb, 0xae, 0xc7, 0xe4, 0xb4, 0x4a, 0x2d, 0x20, 0x1a, 0xe9, 0xd9, 0xed, 0x28, 0x8e, 0x4f}}
	return a, nil
}

var _serverServerGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x57\x41\x6f\xdb\x38\x13\x3d\x8b\xbf\x62\x3e\xa1\x07\xe9\x83\x43\xdd\x8b\xf6\x90\x3a\xe9\x36\x40\x9b\x1a\x89\xb1\x7b\x5c\xd0\xd2\x58\x26\x4a\x93\x2a\x49\xd9\xe9\x0a\xfa\xef\x8b\x21\x25\xd9\xae\x53\x6f\x93\x4b\x2c\x91\xc3\xc7\x37\xef\xcd\x90\x4a\x51\xc0\xdc\x54\x08\x35\x6a\xb4\xc2\x63\x05\xab\x1f\xb0\x12\xd6\x68\x0e\x37\x5f\xe1\xfe\xeb\x12\x6e\x6f\xee\x96\x9c\x15\x05\x3c\xa0\x6d\xb5\x96\xba\x8e\x01\xb0\x97\x4a\x81\xd9\xa1\xdd\x5b\xe9\x11\xfc\x46\x3a\x58\x4b\x85\x21\xf8\x4f\xb4\x4e\x1a\xfd\x16\xba\x8e\x0f\xcf\x7d\x7f\x34\x01\x37\xc2\xe3\xf1\x2c\xbd\xf7\x3d\x63\x8d\x28\xbf\x89\x1a\xc1\xa1\xdd\xa1\x65\x4c\x6e\x1b\x63\x3d\x64\x2c\x49\x95\xa9\x53\x96\xa4\x1a\xfd\xf0\x53\x6c\xbc\x6f\x8e\x9f\x8b\xa6\xb1\x66\x4d\x23\xb6\xd5\x5e\x6e\x31\x65\x2c\xe9\x3a\xb9\x06\xfc\x0e\x7c\x6e\xf4\x5a\xd6\x7c\x69\x85\x76\x01\x34\x15\x4a\xa5\x90\x6a\xe1\x5d\x0a\x7d\xcf\x92\xb4\x96\x7e\xd3\xae\x78\x69\xb6\x05\x8d\x5e\x49\x13\x7e\x79\x6d\x52\x02\x42\x5d\x51\xd8\x7f\x22\xd6\xb6\x29\x47\x44\x63\x6a\x85\xbc\x36\x4a\xe8\x9a\x1b\x5b\x17\x61\xf2\x80\xc6\x92\x66\x05\x69\xd7\xf1\xc5\x87\xbb\x90\xeb\x42\xf8\x0d\x5c\xf5\x3d\xa5\xd1\x75\xfc\x74\xb0\x20\x5d\x64\x89\x29\xcb\x19\xdb\x09\x4b\xc2\xfc\x0d\x43\xb6\xfc\xd6\x5a\x63\x69\x40\xa3\x1f\x5e\x72\xc6\x82\xc9\x44\x14\x4a\xa3\xbd\x90\xda\x81\xdf\x20\x58\xfc\xde\x4a\x8b\x15\xac\x25\xaa\xca\xc1\xda\x58\x18\x1d\x16\xa3\xfe\xfe\x47\x83\xe3\x6a\xe7\x6d\x5b\x7a\xe8\x58\xf2\x69\xb9\x5c\x5c\x57\x95\xa5\x21\xa9\x6b\x96\xdc\xe0\xaa\xad\x4f\x46\xfe\x78\x58\xcc\x4f\x06\xee\xaf\x97\x8f\xe7\x6b\x60\x65\x8c\x62\x7d\x20\xf9\xd0\x6a\x70\x5e\x58\xef\x40\x80\xc6\x3d\x90\xa5\x03\x91\x19\xd4\x0f\x8b\xf9\xf4\x22\x74\x05\x02\xaa\x80\x10\xc7\x60\x2f\xfd\x86\xf2\x22\xa4\x46\x38\x87\x15\xa5\x4b\xbc\x29\x58\x99\xba\x46\xcb\xd6\xad\x2e\x69\x9f\xac\x5c\xd7\x43\x5a\x39\x25\x54\x14\x70\xdd\x34\x4a\x96\xc2\x53\x71\x56\x66\x2b\xa4\x66\x09\xea\xaa\x31\x52\x7b\x07\x6f\xdf\xc3\xed\xf8\x92\xe5\x2c\xac\x58\x90\xe3\x53\xa8\xb5\x25\x45\x6d\xc5\x37\xcc\xca\x8d\xd0\x80\xa4\xff\x10\xfa\x18\x39\xde\x69\x8f\xd6\xb6\x8d\x07\x96\xd4\xe6\xf0\x9a\xd1\xea\x21\x34\xca\xa2\xa4\xf3\xd4\x93\x2c\x91\x6b\x28\xd7\x35\x8f\xc3\x1d\x4b\x68\x21\xa5\x91\x05\xe2\x49\xa2\x4c\xcd\x17\x56\x6a\xaf\x74\x96\xfa\xb1\x12\xd3\x19\xa4\x41\x1e\x7a\x10\x55\x65\xd3\xd9\x01\x86\x6c\xa0\xdd\x92\x64\x4b\x94\x49\x66\x7e\x8f\xfb\x40\xf2\x4b\xfb\x94\xe5\x61\x8a\x7f\x12\xba\x52\x98\xa5\x45\x00\x8a\xbd\x55\xa4\xb3\x18\x1f\x27\xed\x47\x62\x12\x66\xf8\x9d\xae\xf0\x29\xbf\xb4\xb6\xdc\x56\x4a\x6a\xfc\x35\xc4\x3c\x06\x5c\x04\xa1\x3f\x52\x5d\x00\x59\xc4\x80\x8b\x20\xee\xc7\x76\x65\xd4\xaf\x31\x1e\xc3\xfc\x45\x08\x6f\x45\x79\x81\xc5\x92\xa6\xf3\xa8\x72\xa8\x8d\x77\x57\x31\xf4\x73\x70\xf6\x5a\x57\x41\xee\xec\xc4\x94\x19\x6c\x69\xcb\x9e\x1c\x18\xcf\x19\x4e\xcd\xf6\x09\x55\x83\x96\x7f\x41\xbf\x31\x95\xa3\x83\xa5\x28\x80\x26\x60\x72\x7c\xaa\x94\xa9\x39\xff\xf7\x1e\xd2\xf4\x65\x25\x43\x6b\x7f\xaa\x98\x11\x2e\x68\xb1\xa1\x7a\x69\x56\xfc\x8b\xf8\x86\x81\x57\xcc\x3b\x9b\x1a\x65\x16\x58\xc5\x72\xff\xda\x50\x33\xb9\x2c\xe7\x9c\xe7\xbf\xa3\xc3\xb8\xd5\x0c\x36\xa7\x32\xbc\xfc\xdc\x2d\x8a\x78\x60\x9c\xcb\x33\x1d\x4c\xaf\x90\x87\x20\xd3\xd9\xb1\x3a\x23\x5a\xc8\x4f\xe9\x19\x75\x3d\x69\x44\x07\x70\xcc\x30\x4b\x7d\xd9\x3c\x17\x4d\xb9\xd8\x40\x43\x4b\x15\x77\x9e\x14\x42\x6b\xc3\xbb\x45\xdf\x5a\x4d\x8f\x7d\xa8\x24\x67\x77\x47\x0e\x10\x5c\x94\xfa\xd8\x80\xc3\xe8\x99\x01\xe1\x1c\x23\x91\xa6\x76\xb7\xb1\xd9\x9b\x15\x7f\xc0\x9a\xf8\xda\xae\xe3\x8f\xf1\x8e\xe1\xf7\x62\x8b\x7d\x3f\xc4\xb9\x19\x38\xbb\x3b\x2d\x68\xc7\xa3\x79\x4a\xbf\xce\xaf\xc3\xcd\x5b\x14\x40\x17\xc4\x33\x7e\x4d\xf7\xc6\x2b\xfc\xa2\xb5\xa7\x7e\x8d\x68\x21\xeb\xd2\xe8\x23\xc7\xe8\x9e\x9f\x1b\xad\xb1\xf4\xd9\x59\xe8\x4b\xcd\x22\x74\x65\x1c\x12\x20\xa1\x07\xbe\x25\xfc\x7f\xda\x65\xe0\x9e\x94\x7c\x4e\x71\xd1\x86\xb0\x6e\xbc\xcc\x1f\xd1\x7f\x94\x5a\x28\xf9\x0f\xda\x2c\x52\x9d\x20\xf3\x67\xaa\x81\xf8\x9e\x57\x43\x18\x6d\x57\xae\xb4\x72\xf5\x7c\x4b\x42\x40\x08\x2b\x29\x78\xd8\x2a\x78\xfd\xaa\xc4\x7f\x2e\x83\x60\xee\xed\x93\xf4\xec\xd4\x29\x7c\x92\x64\xd2\xbb\xab\x78\xf9\xf5\x2c\xde\xce\xf7\xb8\x3f\xdc\xb4\x6e\x57\x12\xb9\x5f\xd4\x64\x4e\x73\x53\xf0\x70\x8f\x7f\x68\x9d\xd4\xe8\xdc\x74\x33\x13\xc6\x7b\x18\xbe\x9b\xf8\x5f\x56\x34\x03\x16\xa1\xe7\x91\xdd\x80\x31\xad\x19\xbe\xac\xba\xce\x0a\x5d\x23\xbc\x91\xa4\xf3\xc4\x61\x38\x86\xe9\x7b\x8c\x25\x49\xd7\x2d\xcd\x67\xb3\x47\x0b\x6f\xe4\x40\x6f\xc2\x9b\xcc\xe9\xba\xb3\xc9\x61\xfb\xa9\x5b\xc8\xd3\x93\x0f\x8e\xe3\xe4\xba\xdf\x26\x73\xb6\xcf\x5b\x00\x80\x0b\x24\x67\x47\x1c\x62\x27\x92\x46\xe0\x50\x61\x49\xff\x11\x1c\x04\x0e\x9f\x58\x5b\x59\x55\x0a\xf7\xc2\xa2\x3b\xe6\x7b\xaa\xf0\xc1\xc1\x29\x82\xd2\x8b\x85\x02\xd3\x18\xeb\xd9\xbf\x01\x00\x00\xff\xff\xbf\x27\xcc\x30\x82\x0c\x00\x00")

func serverServerGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_serverServerGoTmpl,
		"server/server.go.tmpl",
	)
}

func serverServerGoTmpl() (*asset, error) {
	bytes, err := serverServerGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/server.go.tmpl", size: 3202, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb7, 0xbe, 0x7f, 0xc4, 0xf4, 0x24, 0x4a, 0xd, 0x74, 0xa5, 0xcb, 0x3a, 0x7e, 0x5e, 0xda, 0xd5, 0x13, 0x5f, 0xc, 0x2a, 0x75, 0xd0, 0x4a, 0x3a, 0x15, 0xb3, 0xbd, 0xcb, 0x36, 0x4d, 0x52, 0xc0}}
	return a, nil
}

var _serverWrapperGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x31\xeb\xd3\x40\x18\xc6\xe7\xdc\xa7\x38\x32\x25\xa0\xc9\x2e\x38\xd4\x52\xec\xa2\x16\x9b\x4d\xa4\x5c\x92\x37\x69\x68\x7b\x17\xde\xbc\x29\x4a\x29\xb8\x38\x28\x38\xb9\x28\x38\x58\x27\x27\x77\x41\xfc\x34\x56\xda\x6f\x21\x77\xa9\xff\x26\x6d\x1a\xc8\x10\xb8\xbc\xf7\x7b\xee\x9e\xe7\xe1\x72\x11\x2d\x44\x0a\xbc\x00\x5c\x03\x32\x96\xad\x72\x85\xc4\x1d\x66\xa5\x98\x47\x84\x42\x16\x66\x60\xa7\x19\xcd\xcb\xd0\x8b\xd4\xca\x4f\xd5\xfd\x45\x46\xbe\xfe\xee\x00\x5f\xe3\x36\xb3\xe6\x44\x79\x0f\x95\xc6\x6d\x66\x49\x41\x45\x0f\x95\xc6\x6d\xe6\x32\xb6\x16\xa8\xad\xce\x78\xc3\xac\x37\xad\xc2\x58\x33\xde\xb0\x53\x9b\x37\x2e\xf4\xa6\x65\x58\x44\x98\x85\x80\xfa\x50\xdf\xe7\x8f\x9f\x4f\x86\x15\xfc\x2c\xa7\x4c\xc9\xc2\x4c\xf8\xdf\x2f\x1f\xf6\xef\x77\x7f\x7e\x7d\x3d\xfc\xfe\x78\x7c\xf3\xee\xb8\xfb\xc9\x92\x52\x46\xd7\xb8\xe3\xf2\x17\x2f\xdb\x3c\x55\xfb\x7c\xc3\x2c\xdf\xe7\x31\x24\xa2\x5c\x92\x59\x17\x8d\xdb\x1e\x3c\xec\xd4\x57\x72\xab\x0d\x78\x04\x89\x42\x70\xb4\xa3\x27\x40\x22\x16\x24\x02\x35\x54\x92\xe0\x15\xb9\xf7\x8c\x6e\xcb\x2c\x04\x2a\x51\x72\x99\x2d\xd9\xd6\x04\x1e\x07\xc1\xa4\x47\xe0\x2b\xdc\x04\x6e\x2b\xbb\x4f\xe0\xdb\xfa\x53\xe0\x36\xe0\x14\x38\x0f\x3d\x6d\x6a\x0c\x22\x06\x2c\x2e\x23\xb7\x2a\x47\x88\x0a\x47\x32\x52\x31\xa0\x03\xb5\x9f\x2e\xd1\x20\x21\x40\xe7\x72\x87\xcc\x75\x92\x82\xd7\x39\x38\xd1\x79\xed\x76\x54\xfe\x74\x10\x4c\xcf\x0f\xef\x7f\x11\x7a\xca\x0f\x3f\xbe\x1d\x3f\xbd\xdd\x7f\xfe\x5e\xef\xbc\x95\x37\xbd\xdf\x7a\xcc\x6d\xdd\x73\xa9\x24\x98\x81\xaa\x57\xdf\x7d\xc4\xe6\xd2\xff\xbf\x00\x00\x00\xff\xff\xc6\x3c\xe8\x7f\x36\x04\x00\x00")

func serverWrapperGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_serverWrapperGoTmpl,
		"server/wrapper.go.tmpl",
	)
}

func serverWrapperGoTmpl() (*asset, error) {
	bytes, err := serverWrapperGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/wrapper.go.tmpl", size: 1078, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc3, 0xb0, 0xce, 0x69, 0x33, 0x8, 0xeb, 0x26, 0x5d, 0x6a, 0xc7, 0xe2, 0xb6, 0x19, 0x90, 0x84, 0xf0, 0xdc, 0xf2, 0xab, 0x7c, 0x51, 0x26, 0x6b, 0xdf, 0x69, 0x2d, 0x5, 0x9a, 0x6b, 0xe3, 0x16}}
	return a, nil
}

var _serviceServiceGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x5f\x4a\x03\x31\x10\x87\x9f\x33\xa7\x18\x96\x45\x76\x4b\x9b\x03\x08\xbe\xe8\x83\x08\x5a\x8a\xd6\x03\x6c\xb7\x63\x1b\xec\x26\x31\x99\xed\x1f\x86\xdc\x5d\xd2\x6e\xa5\xa2\xd0\xa7\x24\x93\xef\xf7\x91\x99\xf8\xa6\xfd\x6c\x56\x84\x91\xc2\xd6\xb4\x04\x60\x3a\xef\x02\x63\x05\xaa\x68\x9d\x65\xda\x73\x01\xa0\xfc\x02\x0b\x11\x3d\xbb\x7f\x3a\x5e\xcf\x1a\x5e\xe3\x24\xa5\x02\x6a\x80\x8f\xde\xb6\x38\xa5\xdd\xdb\x49\x51\xd5\x38\x12\x99\xbb\x67\xb7\xa3\x80\x7a\xa8\xea\x69\xd3\x51\x4a\xc3\x09\x05\x54\x20\xee\x83\xc5\x9b\x6b\xac\x24\x48\x00\x7c\xf0\x84\x57\xb5\x91\x43\xdf\x72\xb6\xfb\x85\x7e\xb7\xa6\xf3\x1b\xea\xc8\x32\x2d\x45\xfe\x89\x50\xc8\x6a\x91\x9d\xe1\x35\x96\x4c\x78\x7b\x87\x1a\x53\x02\x25\x12\x1a\xbb\x22\x2c\x4d\xae\x95\x4c\x3f\xe9\x17\xe2\xb5\x5b\xc6\x0c\xa9\x63\xe7\x55\xbc\xec\xf7\x12\xfd\xf5\xb6\x1a\x45\x4a\x33\xd4\xaa\x96\xf7\x38\x8c\x57\x3f\x9c\xd6\x31\x1a\x8b\x23\xbf\xd0\x22\x8f\x2e\x63\x58\x1a\xfd\x4a\x5f\x3d\x45\x9e\x1f\xfc\x59\x57\x63\xf5\x17\x8a\xde\xd9\x48\x17\xd4\x18\x29\x04\x17\x6a\x01\xa5\xd4\xb6\x09\x18\x28\x7a\xbc\x9e\xcb\xf8\xf9\x63\x72\x64\x8c\xd6\x6c\x40\xa9\xe3\x48\xc8\x2e\x53\x02\x91\x09\x9e\x76\xdf\x01\x00\x00\xff\xff\xb2\xb4\x55\x6e\x3c\x02\x00\x00")

func serviceServiceGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_serviceServiceGoTmpl,
		"service/service.go.tmpl",
	)
}

func serviceServiceGoTmpl() (*asset, error) {
	bytes, err := serviceServiceGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service/service.go.tmpl", size: 572, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcf, 0x67, 0xd4, 0x35, 0x7d, 0x82, 0xea, 0x92, 0x9a, 0xdd, 0x29, 0x78, 0xfd, 0xb4, 0xc4, 0xb4, 0x66, 0xb4, 0x58, 0x32, 0x35, 0x9a, 0x5d, 0xa7, 0xfa, 0x9a, 0x94, 0xe, 0x89, 0xcc, 0xfd, 0xcb}}
	return a, nil
}

var _serviceService_methodsGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\xb1\x4e\x03\x31\x0c\x86\xe7\xdc\x53\xfc\xc3\x09\xdd\x55\x47\x1e\x00\x89\x89\x81\x05\x18\xa0\x2f\x70\xa4\x86\x46\x02\x27\x38\xbe\xb6\xc8\xca\xbb\xa3\xf4\x3a\x20\x16\x26\xdb\xbf\xbf\x6f\xf8\xcd\x70\x8c\xba\x47\xaf\xb8\xb9\x85\xaf\xb5\x73\x66\x32\xf3\x3b\xa1\x8f\xe7\xe8\x91\x74\x9f\x76\xa5\x7d\xdc\xdb\xc2\x01\x43\xc1\xc6\x6c\x9b\x1e\xd2\x91\x04\xbd\xfa\x17\x92\x43\x0c\xf4\x34\x7f\x52\xad\x97\x63\x84\x99\x5f\x93\x21\xe8\x09\x21\xb1\xd2\x49\xfd\xdd\x3a\x27\x44\xc6\x26\xbf\x7a\xb3\xfb\xd4\x30\xf8\x67\xfa\x5a\xa8\xe8\xf6\x3b\xd3\x45\x1c\x31\xfc\x45\x4a\x4e\x5c\xe8\x17\x33\x81\x44\x92\x8c\xd6\x39\xe7\x0e\xb3\x40\xa8\x64\xfc\x67\x35\x58\x48\x17\x61\x5c\x35\x61\x02\xc7\x8f\xce\xb9\x73\x7b\xe2\x5d\xad\x9d\xd9\x35\xd6\xed\x27\x00\x00\xff\xff\xcb\x00\x84\xc4\x23\x01\x00\x00")

func serviceService_methodsGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_serviceService_methodsGoTmpl,
		"service/service_methods.go.tmpl",
	)
}

func serviceService_methodsGoTmpl() (*asset, error) {
	bytes, err := serviceService_methodsGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service/service_methods.go.tmpl", size: 291, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdc, 0xf6, 0x45, 0xde, 0x10, 0x2e, 0x4f, 0x2f, 0xf0, 0xf, 0x4, 0x74, 0x6b, 0x36, 0xd4, 0x4b, 0x2e, 0xcf, 0xbf, 0x1f, 0x38, 0x37, 0x9f, 0x25, 0x32, 0x4, 0xef, 0x94, 0xc0, 0x26, 0x22, 0x4b}}
	return a, nil
}

var _serviceWrapperGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x5d\x8b\xdb\x3a\x10\x7d\x5e\xff\x8a\x21\x2f\x37\x86\x5c\xf9\x17\xdc\x87\x7b\x2f\x0b\x2d\x74\x97\xc0\x16\xfa\x58\x26\xf6\xc4\x16\x95\x47\xea\x68\x9c\x6c\x08\xf9\xef\x45\xf2\xc7\x3a\x5b\x5a\xe8\x53\x22\x69\x74\xe6\x9c\x33\x47\x0e\x58\x7f\xc3\x96\x20\x92\x9c\x6c\x4d\x45\x61\xfb\xe0\x45\x61\x5b\x3c\x84\x03\x6c\xae\x57\xb3\xff\xef\x63\xde\xda\xa3\x76\xf0\xf7\xed\xb6\x29\xca\xa2\xa8\x2a\xf8\x22\x18\x1e\xb9\x09\xde\xb2\x46\xc0\xba\xa6\xa0\x11\xb4\x5b\xb0\xfe\x8a\x40\xac\x56\x08\x6a\xef\x1c\xd5\x6a\x3d\x83\x3f\x02\xcd\x97\x76\x10\x3d\x68\x87\x0a\x98\x00\x23\x69\x3a\xee\x6d\xd3\x38\x3a\xa3\x50\x84\x1a\x19\x0e\x04\x67\xc1\x10\xa8\x01\x14\x3f\x70\x03\x74\x22\xb9\xac\xea\x60\x4b\xa6\x35\xbb\xcc\x21\xc6\x04\xe5\x7c\xdb\x5a\x6e\x01\xb9\x01\xcb\x51\x65\xe8\x89\x15\x13\x83\x72\x97\x77\xbd\x76\x24\x71\x41\x8e\x94\x09\x9e\xc8\x5d\xe6\x2e\xd1\xf7\x94\xb0\xe8\x4d\x23\x37\xc0\x5e\xe7\xbb\x53\xd7\xb7\x73\xa1\xef\x83\x95\xdc\x77\xd0\x2e\x69\xaf\x51\x13\xed\xcc\xab\x34\x09\xed\xd9\x2b\x8d\x9a\x93\x53\x47\xcb\xe8\xd6\x4a\x66\x3e\x67\xeb\x5c\x52\x9e\x8a\xfc\xa0\x24\xbd\x8f\xba\x2a\x4c\x50\x5b\x6b\xc8\x00\x86\xe0\x2c\x35\x70\xb4\x12\xb5\x2c\x8e\x03\xd7\xf7\xa3\xd9\x5a\x86\x70\x30\xcb\xba\xbc\x5b\xc1\xb5\x28\x1e\xaa\x0a\xf6\x18\x23\xe0\x9a\xca\xc5\x0f\x70\x46\xd6\xa5\x83\xfa\xc9\xf9\x59\xb1\xc9\x37\x7d\x48\xb6\xa2\x73\x17\x08\x09\xc4\xf2\xca\x92\xc3\x05\x18\xfb\x49\xf1\x82\xa8\x3e\x69\xa3\xd7\xda\x0d\x0d\x35\x19\x25\x79\x99\xff\x58\x36\x89\xfe\xbf\xce\x3d\xbe\xa6\x48\x6d\x93\x97\x4f\x0b\xad\x1d\x6c\x5e\x14\x75\x88\x9b\x1d\x6c\xf6\x96\xdb\x4d\xb9\x12\x60\x19\x10\xe2\xa9\x36\x9f\xf0\x40\x8e\x9a\xa7\x3f\x97\xf3\xb9\xa3\x48\x77\x21\x6c\x49\xb3\xb2\x74\xa7\xa3\x95\xb8\xac\x0c\x73\xe6\xad\x8c\x03\x00\x94\x36\x67\x0d\xce\x1d\xf1\xdc\x6b\x46\xb6\x4b\xa2\x87\x38\x32\x38\x8b\x55\x82\x96\x98\xc4\xd6\xd0\x93\xa6\x9f\x16\x53\xc0\x52\x8e\xd6\x34\xb2\x85\x35\x72\xc6\x12\xca\xaf\x74\xcd\x67\xa4\x73\xf4\x02\x47\x21\x1a\x5b\xb6\x56\xbb\xe1\x60\x6a\xdf\x57\x4a\xd8\x3b\xcb\x5a\x1d\x50\x3c\x57\x5f\xe9\x15\xfb\xe0\xa8\x5a\xb5\xa8\xdc\xe8\xda\x6a\xcb\xb4\x3e\x43\x4e\xd5\xf1\xfd\x8c\x26\x9f\xa7\x51\x91\x88\x97\xff\xfd\xc0\x4a\xb2\x8d\x8a\x1a\x9b\x69\x55\xfe\x72\x6e\x1f\xfc\x39\x19\x91\x9c\xba\xdc\x07\x30\xed\x42\xb4\xdc\x3a\x7a\x37\x23\xcb\xe6\x71\x24\x34\xe7\x18\xfe\x81\xfb\x9c\x6c\x7f\xae\x49\x0d\x85\x74\x10\x06\xcb\xc5\xad\x78\x7b\x2b\x2f\xe3\x07\x6b\x7a\x29\xd7\xab\x99\x36\xcc\x33\xf6\x74\xbb\xa5\x15\x49\xf9\x9b\x33\xb8\xde\x43\xff\x08\x00\x00\xff\xff\x21\x7f\x7f\xa9\x56\x05\x00\x00")

func serviceWrapperGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_serviceWrapperGoTmpl,
		"service/wrapper.go.tmpl",
	)
}

func serviceWrapperGoTmpl() (*asset, error) {
	bytes, err := serviceWrapperGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service/wrapper.go.tmpl", size: 1366, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf6, 0xcd, 0xad, 0x54, 0x2f, 0xb, 0xba, 0x25, 0x8c, 0xe1, 0x4e, 0xad, 0x15, 0x25, 0x1, 0xd5, 0xaa, 0xdf, 0x61, 0x67, 0x97, 0x14, 0xa9, 0x35, 0xe3, 0x62, 0xcf, 0x4, 0xaf, 0xad, 0x1f, 0x5c}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"baron/NAME.pb.baron.go.tmpl":     baronNamePbBaronGoTmpl,
	"cmd/NAME/main.go.tmpl":           cmdNameMainGoTmpl,
	"cmd/NAME-client/main.go.tmpl":    cmdNameClientMainGoTmpl,
	"server/endpoints.go.tmpl":        serverEndpointsGoTmpl,
	"server/interrupt.go.tmpl":        serverInterruptGoTmpl,
	"server/server.go.tmpl":           serverServerGoTmpl,
	"server/wrapper.go.tmpl":          serverWrapperGoTmpl,
	"service/service.go.tmpl":         serviceServiceGoTmpl,
	"service/service_methods.go.tmpl": serviceService_methodsGoTmpl,
	"service/wrapper.go.tmpl":         serviceWrapperGoTmpl,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"baron": {nil, map[string]*bintree{
		"NAME.pb.baron.go.tmpl": {baronNamePbBaronGoTmpl, map[string]*bintree{}},
	}},
	"cmd": {nil, map[string]*bintree{
		"NAME": {nil, map[string]*bintree{
			"main.go.tmpl": {cmdNameMainGoTmpl, map[string]*bintree{}},
		}},
		"NAME-client": {nil, map[string]*bintree{
			"main.go.tmpl": {cmdNameClientMainGoTmpl, map[string]*bintree{}},
		}},
	}},
	"server": {nil, map[string]*bintree{
		"endpoints.go.tmpl": {serverEndpointsGoTmpl, map[string]*bintree{}},
		"interrupt.go.tmpl": {serverInterruptGoTmpl, map[string]*bintree{}},
		"server.go.tmpl": {serverServerGoTmpl, map[string]*bintree{}},
		"wrapper.go.tmpl": {serverWrapperGoTmpl, map[string]*bintree{}},
	}},
	"service": {nil, map[string]*bintree{
		"service.go.tmpl": {serviceServiceGoTmpl, map[string]*bintree{}},
		"service_methods.go.tmpl": {serviceService_methodsGoTmpl, map[string]*bintree{}},
		"wrapper.go.tmpl": {serviceWrapperGoTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
