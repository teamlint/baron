// Code generated by go-bindata. DO NOT EDIT.
// sources:
// NAME-service/baron/NAME.pb.baron.go.tmpl (26.126kB)
// NAME-service/cmd/NAME/main.go.tmpl (1.24kB)
// NAME-service/cmd/NAME-client/main.go.tmpl (2.923kB)
// NAME-service/server/server.go.tmpl (3.16kB)
// NAME-service/service/hooks.go.tmpl (310B)
// NAME-service/service/middlewares.go.tmpl (1.366kB)
// NAME-service/service/service.go.tmpl (641B)
// NAME-service/service/service_methods.go.tmpl (291B)

package template

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _baronNamePbBaronGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7d\x4f\x8f\x1b\x39\x76\xf8\x59\xfa\x14\x6f\x0a\x33\xb6\xaa\x7f\x72\x69\x7e\x01\x12\x6c\x7a\xd0\x01\x3c\x3d\x9e\x3f\xbb\xe3\xb6\xd7\xdd\x9e\x01\x62\x18\x5e\x4a\x45\x49\xdc\x2e\x15\xcb\x24\xab\xd5\xbd\x4a\x5f\x72\xd9\x00\x09\x10\x20\xa7\x1c\x82\x45\x4e\xb9\x06\x39\xe7\xf3\xec\x04\xfb\x2d\x82\xc7\x47\xb2\x58\x52\x95\xa4\xf6\xcc\x06\x8b\x20\x03\x24\x6e\xb1\xc8\xc7\xc7\xc7\xc7\xf7\x9f\xdc\xc9\x04\xce\x65\xce\x61\xc1\x4b\xae\x98\xe1\x39\x4c\xef\x60\xca\x94\x2c\x33\xf8\xe2\x05\x5c\xbc\xb8\x82\x67\x5f\x7c\x73\x95\x0d\x27\x13\x78\xc5\x55\x5d\x96\xa2\x5c\x50\x07\x58\x8b\xa2\x00\x79\xc3\xd5\x5a\x09\xc3\xc1\x2c\x85\x86\xb9\x28\xb8\xed\xfc\x1d\x57\x5a\xc8\xf2\x14\x36\x9b\xcc\xfd\x7d\x7f\x1f\x7d\x80\x2f\x98\xe1\xf1\x57\xfc\x7d\x7f\x3f\x1c\x56\x6c\x76\xcd\x16\x1c\xbf\xbc\xa4\x3f\x2f\xd8\xca\x7e\x99\x4c\xe0\xca\xcf\x01\x33\x59\x1a\x26\x4a\x0d\x2b\x6e\x96\x32\xd7\x60\x24\xac\xd8\x35\x07\x51\xe6\xe2\x46\xe4\x35\x2b\x80\x97\x79\x25\x45\x69\x34\xcc\x95\x5c\x81\xe6\xea\x46\xcc\xb8\x1e\x23\x24\xc5\xdf\xd7\x5c\x1b\x60\x65\x0e\x8a\xeb\x4a\x96\x9a\x83\xb9\xab\xb8\x85\x84\x5d\x71\x45\x52\xf3\x06\xca\x18\x98\x86\x35\x2f\x0a\xfc\x97\x97\x33\x99\x73\xa5\x11\x00\xc2\xcb\xb9\xfb\x3d\x97\xca\x0d\xb4\xd0\xc6\xb6\x81\x21\xa5\xe6\x20\x6b\x05\xba\xae\x2a\xa9\x90\xd2\x46\xb1\x52\xe3\xdf\x38\x9d\x60\x85\xf8\x0d\x33\x42\x96\x08\x6d\x2e\xd5\x8a\x19\x9d\x0d\x87\x62\x65\x7b\x8c\x86\x83\x64\x7a\x67\xb8\x4e\x86\x83\x04\xd7\xce\x6f\x0d\xfe\x69\xd1\x10\xe5\x62\xf2\x6b\x2d\x4b\x6c\x98\xaf\x6c\xbb\x90\xf4\xff\x27\x42\xd6\x46\x14\xf8\xa3\xe4\x66\xb2\x34\xa6\xf2\x7f\xd7\xca\x36\x6b\xa3\x66\xb2\xbc\x71\x7f\x8a\x72\xa1\x93\xe1\x70\x90\x2c\x84\x59\xd6\xd3\x6c\x26\x57\x93\x85\x7c\x72\x2d\xcc\x04\xff\xcf\xd3\x22\xd9\xee\x51\xb0\x72\x31\xa9\x94\x34\x72\x5a\xcf\x2d\x32\xd5\xf4\x40\x27\xfb\xc7\x4e\x1f\x25\x8a\x82\x4d\x56\xf5\xed\xd6\x97\xea\x7a\x31\xe1\x4a\x49\x85\x14\xd8\x6c\xc4\x1c\xf8\x7b\xc8\xce\x65\x39\x17\x8b\xec\x2a\x50\x32\x61\x45\x91\x40\x52\x32\xa3\x13\xb8\xbf\x6f\xc3\xc0\xd6\x27\x42\xda\x7f\xb3\x85\xb4\x80\x78\x99\x63\xb7\x83\x10\x17\xaa\x9a\x79\x88\x52\x2e\x0a\x9e\xd1\x7a\x32\xa9\x16\x13\xfb\xb1\xf7\xcb\x64\xc5\x0d\xcb\x99\x61\x1f\x38\x21\xfe\xd5\xf0\x4a\xcf\xce\x84\x0e\x1e\x99\x30\x13\xee\xf9\x03\x86\x3b\x16\x79\x00\x89\xf1\xaf\x07\x4c\x60\x07\x36\xf8\xa5\xc3\xe1\xf0\x86\x29\xe4\xf0\x77\x70\x06\xf3\x95\xc9\x2e\x2b\x25\x4a\x43\xbf\x2d\xd3\x67\xe7\x72\x55\x31\xc5\xa9\xc9\x71\x6c\xf6\xd4\x48\x41\x2d\xad\x25\x66\x17\x7c\x7d\x89\xe7\x57\xd1\x47\x3a\x01\xd9\x85\xac\xce\x0b\xa9\x9b\xd6\xec\x5c\x56\x77\xf4\x83\x18\x2b\xfb\x5e\xb1\x0a\xf1\x99\x9c\x1c\xf5\x1f\x3c\x0b\xf2\xe5\xb8\x01\xf8\xdf\xc4\xca\xb1\x6f\x4a\x60\x24\x64\xd4\x18\x84\x79\xac\xa1\xd6\x7c\x5e\x17\x56\x58\xcc\xeb\x72\x86\x82\x40\x83\x59\x32\x03\x25\x47\x59\x21\x41\x56\x56\x42\x83\xc4\xb1\x15\x57\x4f\xfc\x61\x44\x80\x53\xa6\x85\xce\xe0\x4b\xa9\x80\xdf\xb2\x55\x55\xf0\x31\xdc\xc9\x1a\x56\x62\xb1\x34\x50\x31\x8d\x82\x2a\x42\xd8\x48\x60\x61\x22\x9a\xa7\x52\x32\xaf\x67\x5c\x23\x38\x56\x5a\x9a\x66\x5f\xb3\x32\x2f\x10\xc7\xb5\x30\x4b\xe0\x6c\xb6\x74\xf2\x16\x46\x7e\xf6\x14\xd6\x42\xf1\x1c\xea\x8a\x80\xea\x8a\xcf\xc4\x5c\xcc\xa0\x62\x66\x99\xc1\xe8\x1b\x8b\x9f\xd0\x08\x7f\xca\xa6\xc5\x1d\x30\x58\x09\x6d\x48\x56\x43\xce\xb5\x58\x94\x38\x54\x94\x37\xf2\x1a\x85\x2e\x87\x4b\x92\xd4\x41\xb6\x5b\x14\x39\xc2\x69\x56\xa0\x8d\xaa\x67\x06\x41\x78\x4a\x66\xe9\x70\x32\x09\xd4\x9d\x15\x82\x97\xa6\x4d\x5d\x23\x61\x26\x8b\x82\xdb\x71\x5e\x4d\x14\x77\xa8\x4c\x08\x1c\xcf\x23\xa5\x21\x4a\x5c\x10\x02\xd4\xa2\x5c\x14\x24\xd0\x89\x56\x02\x29\xbc\xe2\x96\x92\x11\xbe\xa2\x34\x5c\xcd\xd9\x8c\xf7\xed\x04\x02\x0b\x93\x75\xab\xaa\x1a\x27\x83\xf6\x79\x44\x96\x3e\x77\xeb\x99\xc9\xd5\x54\x94\x96\x4e\x2b\x87\x62\xb4\xb1\x63\xa7\xd0\x4c\xad\x4a\x10\x06\x57\x8c\x08\xce\x58\x51\x70\x85\x7a\x8b\x79\x64\xb3\xa1\x5d\xce\x0e\x41\x37\xc3\xc1\xeb\x32\xac\x8f\xe7\x9b\x4d\xe6\x47\x90\x22\x76\x67\x6b\xb3\x51\xac\x5c\x70\xf8\x58\xc0\xe9\x19\x84\x3e\xcf\x69\xcb\x48\xc4\x7d\x2c\xdc\x18\x3f\x0b\x00\x84\xa5\x66\xbe\x71\xe8\x45\x01\xe9\xf8\x80\xd1\xe1\x29\x90\x81\x61\x14\x2d\x22\x85\x68\xd2\xd1\xcc\xdc\x82\xd3\x95\x28\xc6\xf0\xdf\x31\x32\xcc\xc9\x66\xf3\x95\xc4\x3e\xf0\xb1\xc8\x5e\x91\x21\x70\x75\x57\xf9\x05\xa6\x30\xda\xea\x41\xe6\x41\xd4\x65\x4c\x22\x23\x45\x6a\x79\xeb\xc1\xb6\x21\xa2\x3c\xeb\x58\x39\x22\x83\x93\xa7\xc3\x01\x0a\x56\xa5\xe0\xa3\x33\x28\x45\x81\x10\x06\x6e\xbf\x4a\x51\x58\x20\xc3\xc1\xfd\xd0\xb7\x79\xe8\xd9\x41\x9c\xd2\x31\x02\x18\xde\x07\x72\x22\x31\x9f\xe3\x31\x8b\x29\x6a\x0f\xf2\xc7\x86\x5b\x8a\xde\x63\xe7\x27\x10\x53\xf9\x63\xc3\xfb\x08\x8d\xb0\xba\x56\xa6\x91\xe8\xd1\xb0\x98\x4d\xd2\xdd\xed\x26\x9a\xd9\xc5\x21\xd8\xee\x5d\xf2\xe6\x59\x38\x51\x1b\xdc\x96\x60\xa8\x45\xcd\x44\xf6\x66\x3b\x06\x8a\xbf\xc7\x85\x38\x08\x3b\x74\xdb\xd9\xed\xe1\x60\x70\x13\xf6\x4e\x67\x5b\x0c\x64\x51\xc1\x3e\xbb\xbb\xb6\xbb\x6d\xb8\x6f\xbe\xf5\x86\xb6\x63\x70\x3f\x24\x22\xd3\x9e\xc4\x7b\x83\xea\xe6\x69\x51\x3c\xbb\x9d\xf1\xca\xc0\x5a\xb1\x4a\x93\x88\x0d\x94\x9a\x0b\x5e\xe4\x68\x38\xba\xb3\xd9\x1c\x56\xbb\x8d\x56\x36\x75\x58\x67\xd9\x73\x91\xe7\x05\x5f\x33\x45\xb6\xf8\x6b\xed\xad\x73\x34\x45\xab\xaa\xb8\x43\x11\x83\x62\xd3\x20\xf0\x55\xe8\x6d\xf5\x02\xbf\xe1\xea\x2e\x6c\x1b\x9e\x17\x94\x20\xda\x4b\x8d\xc9\x04\x5e\x54\xa8\x35\x50\x72\x8e\x23\xc1\x35\x63\x25\x4c\xb9\xd5\x35\x3c\xc7\x61\xd3\x3b\x28\x91\xec\x46\x62\x3b\xbf\x9d\x15\x75\xce\x73\xb2\xc5\xa7\x1c\x51\xc0\x35\x57\x3c\xcf\x76\xa8\x31\x6a\x70\x1a\x43\x72\x69\x98\xa9\x75\x32\x86\xe4\xa5\x28\x17\x49\x1a\xce\xfd\x49\x74\xf0\xfb\xc6\x43\x07\x55\xc6\x0d\x36\x59\x96\x91\xd9\x6b\x99\x47\x94\xae\xf9\xf4\x0c\x56\xac\x7a\x43\x9f\xde\x12\xf9\x37\xf7\xb8\xeb\xdb\x07\xa6\x4b\xf2\x0d\x06\x49\xc4\x46\xc9\x29\x6c\xee\xc7\x6e\xa8\x33\xca\xee\x87\xc3\x01\xee\xc6\x3b\x44\xc5\xb2\xab\x05\x19\xd0\xda\x10\xc7\xbd\x1b\x83\xbc\xc6\xcf\x1e\xb1\x37\xfc\xf6\xed\x67\xf0\x91\xbc\x26\x0e\xac\x58\x29\x66\xa3\xc6\x66\x9a\x8f\x92\x67\x1e\x44\xd8\xc1\xc7\x9f\xe8\xc7\x90\x4b\xae\xa1\x94\x06\xf8\xad\xd0\xe6\x33\xd0\x9c\xc7\x1b\x1f\x78\xc7\x1a\xc6\x88\x54\x9a\x3a\x7e\xce\x79\xc1\x0d\x1f\x79\x0c\xec\xb7\x66\x01\xa2\x9c\x35\xe8\x07\xf2\x1d\x4f\x28\x31\xb7\x20\xce\xce\xa0\x45\x32\x5a\xde\xa0\x53\x94\xc2\x59\x84\xf9\xa8\xb3\x0b\xe2\x6e\x91\x6f\x91\x9c\x8e\xdd\xb7\x6c\xca\x0b\x9e\x37\xdc\x40\x8e\xec\x82\x1b\xcf\xbb\xc8\xef\x81\x7a\x96\x85\xd7\x4b\x5e\x86\xaf\x32\x62\x57\x07\x8c\xb8\x6e\x4c\xa7\xcc\x1d\x84\x9a\x3a\x03\x79\xc7\x8c\x5c\x6c\x31\x43\xa3\x46\x89\x99\x35\xb3\x22\x2e\x5d\x2f\xc5\x6c\x69\x87\x6a\x5e\x76\xa1\xe0\x34\xb9\x1b\xed\xed\x18\xa9\x9c\x1e\xdf\x5d\x95\x15\xae\xc4\xc0\xe3\x5d\x29\xdc\x21\x98\x87\x7d\xeb\xfa\x60\xd9\xb4\x83\xd4\xd8\xad\xd3\x52\x5c\xf1\x19\x17\x37\x64\xf1\xd9\x25\xca\x79\x6b\xdd\x19\x5c\x72\x1e\xc0\x44\x50\xec\x07\x6f\x88\x86\x73\x8f\x88\x22\x47\xe6\xdc\x30\x51\x58\xa3\xd1\x1f\x27\xeb\x52\x3b\x63\x97\x15\xc2\xdc\x65\xfb\x44\x48\x6b\xed\xb1\x24\x79\x30\x45\xff\x4f\xce\xfc\xef\x91\x33\xad\x61\xe3\x6e\x23\xaf\x4f\xec\x1c\xef\xec\x1f\xeb\x7a\x7e\xf5\xea\xe5\x39\x59\x58\x0f\xf6\x3d\xd1\x8c\x8b\x86\xaf\xd8\x35\xd7\x8d\x31\xd0\xe8\x73\x76\xc3\x44\xc1\xa6\x05\x27\xb7\x61\xf1\xea\xe5\x39\xf4\x38\x03\x59\x63\x20\x36\x90\x47\x0d\xa8\xc8\x3d\x91\x15\xb9\xb6\x59\x96\xb5\xe2\x1a\x19\x0d\x22\xd3\x22\xed\x9b\x08\xb7\x4b\x47\x1d\x35\x6e\xf8\x9b\xb7\xfd\x90\x70\x7b\xbb\xbe\x7e\xce\xe7\x52\xf1\x11\x62\xfb\xdc\x45\x67\xae\xa4\xb3\x3e\xd3\xb1\x35\xc0\xdb\xf3\x9c\xa1\xe1\xc4\xcb\x7c\xd4\x6a\x0e\xeb\xc9\xb2\x2c\x1d\x0e\x26\x13\xd8\x6c\xe0\x4a\x7e\x2b\xd7\x5c\x41\x6b\x05\x36\x52\xe2\x4c\xc3\x47\x88\x11\xe1\xb1\x41\x37\xe9\x20\xf7\x6e\x36\x1e\x66\x60\xb9\x53\x68\x2f\x2b\x04\x3d\x46\xc8\x83\xcd\x29\xeb\xe0\x52\x14\x11\x83\x2f\x6c\xbc\x12\xd7\x1f\xf5\x70\xd6\xb1\xed\xf0\xac\xec\xec\xe0\x7c\x1d\xec\xd1\xa2\x44\x96\x65\xd8\x88\xb4\xeb\xd0\xb9\xcd\x82\xb7\x5d\xe7\x60\x9c\x77\xef\x77\x30\xf4\x49\xcb\x45\x70\xfe\x08\xee\xea\x0e\x91\x01\xb6\xa8\xec\xe2\x21\x91\x41\xef\xdc\x2c\x17\xa8\x40\x49\x15\xe1\x68\x64\xb3\xdc\xe3\x57\x7a\xa4\xdb\xab\xe1\xa4\x99\x2a\x85\xd8\xcb\xd9\xe7\xff\xa2\x7b\xf4\xd3\x3a\xc0\xef\x10\x68\xd5\x72\xa1\x76\x28\x49\xc7\x0e\xb9\x29\x76\xaa\x1e\xe8\x09\x57\x1f\xe8\x04\x3b\x0a\x13\xcb\x1f\x26\xef\x64\x02\xfb\x4e\x07\x08\x14\x87\xed\x78\x6b\x46\x03\x5c\x8f\x2f\x71\x7f\x6c\x9c\x68\x26\xcb\x1b\xae\x50\x98\xda\x53\x40\x22\x74\x97\xcd\xbc\xb7\x6b\x03\x68\xb5\xe6\xea\x49\x2e\x57\x4c\x94\xfb\x3a\x67\xf0\x52\x89\x15\x53\xa2\xb8\xf3\xe1\xad\x38\x16\x46\x4c\xb2\x6f\x1d\xa3\x77\xbb\xcc\x81\x6b\x79\xc5\xdf\x6f\xb9\xdd\xdb\xde\x76\x08\x7c\x58\x47\xdb\x8d\x39\xc6\xd1\x0e\x3b\xf9\x7e\xcf\x36\x91\xe0\x39\x6a\x9b\xf6\xca\xa8\xce\x7d\xa2\x11\xbe\x4b\xdf\x46\x1d\xde\x02\x9f\x30\x92\x8d\x66\xec\xea\x56\x15\x77\x47\xed\xd3\xde\x85\x74\x6d\x54\x57\x24\x64\xdf\x4e\xe9\x8a\x62\x22\x47\x07\x93\x5a\x01\xa8\xae\xdd\xfa\x9a\x17\x15\x57\x7a\x48\x0b\xe8\x54\xa4\xdd\x02\x68\x95\x83\x4f\x88\x64\xcf\xbf\x48\xb7\x3b\x20\xbe\x28\x46\xaf\xc7\x70\xd3\x58\x7c\xab\x60\xaa\xde\xb4\x42\x30\x36\x27\xc8\xe1\x9a\xdf\xd9\xed\xce\xd1\x28\x9c\x4a\xb3\x44\x1a\xfb\x59\x5c\x36\x0d\x46\xd7\xa9\x73\x3f\xb0\x6b\x51\x40\x81\xfb\xe5\xa0\x30\xe7\x74\xd9\x70\xeb\x39\x2b\x65\x29\x66\xac\xf8\x9a\xb3\x9c\xab\x5f\xf0\x3b\xef\x9b\xe0\x44\x5a\xba\x20\xb0\x71\xae\x9e\x07\x31\x9b\x71\x1f\xfb\xe0\xc2\x2c\xb9\x72\x33\xe3\x77\x24\xc5\x59\x58\xeb\xf7\xc2\x2c\xbf\x63\x45\xcd\x49\x1a\xe2\x5a\xdf\x7c\xfa\x36\x3d\xd8\xb1\x07\xbb\xd1\x75\xda\x40\x70\x56\xbf\xdb\xbe\x99\xb9\xb5\x3a\xea\x01\x76\x25\x45\x9a\x1f\x6c\x57\x5e\xf0\x75\x34\x9a\xa6\xb7\x59\x07\x17\x3a\x82\x29\x9b\x5d\x53\x82\xd9\x9d\x19\x0a\xd1\xe3\x5a\x4b\x6e\x7d\xb3\x0c\xbe\xb1\xe2\xd5\x05\xfb\x1d\xbb\x8a\xa9\x40\x9f\xcd\x6f\x81\x8b\x65\x1b\x09\xb9\x60\x05\x05\xbc\x0b\x66\xb8\x82\x59\x21\x35\x1f\x53\xa7\x06\x26\x31\x68\x0b\xbb\x11\x7e\x26\xf5\x99\x51\xcb\xb9\x2c\xcb\x3d\xc6\x29\x75\xf2\xc6\xe9\xa8\xc7\xc8\x88\x8f\x1c\x5a\x08\xdb\xb1\xd6\x41\xd4\x5a\x5d\x2f\xec\xf1\x73\x21\xd7\x76\xaa\x7b\xb0\xeb\xd5\x74\xc7\x65\x07\x37\x4c\x75\x89\x9e\xe0\xc2\xec\x3a\xf9\x83\x4d\xb7\x41\x19\x79\x3d\x3b\x96\xa5\xa3\x9a\x65\x4f\x24\x94\xf7\x3c\xdd\x22\xee\xef\xb3\xae\x08\x70\x32\xde\xf1\x50\xf7\x59\x96\x8d\xe9\xd9\xa3\xb5\x22\xd3\xf3\x80\xf4\x22\x37\x78\x20\xdb\xa6\x69\xa0\xc1\xc8\xfa\x95\x16\x8c\xb3\x53\xe3\xbc\xac\x13\x71\xfe\x00\x05\xdf\xe5\xa0\xa9\x0e\x4f\x1c\xa8\x1d\x9a\x9e\x02\xc0\xbe\x6d\x1a\x47\xe9\xda\x7b\x2f\x6c\xf1\x04\x20\x0d\xc0\x9d\xa8\x1f\x6f\xbe\xec\xd1\x8b\xde\x7e\xd9\xaf\x17\xf7\x6b\xba\x63\xcd\x17\xa7\x83\x7a\xf4\x22\x09\x85\xfd\xf6\x4b\xbf\x5e\x24\x63\x04\x91\x39\x52\x31\x62\xd7\x60\xc4\xa0\xba\x7e\x90\x6a\xac\x8a\xbb\x2e\xdd\x18\x6f\xdb\x8f\x37\x67\xfa\xad\x4e\x6f\xcd\xec\xb5\x3a\x8f\xb4\x27\x0f\xda\x32\x7b\xad\xce\xd6\xae\xed\x5b\x47\xb7\x31\xd3\x95\xec\xd9\x6f\x75\x3e\x20\xbd\xb3\xdf\xea\x74\x58\x58\x25\xab\xaf\x64\x6c\xc8\x10\xcd\xbb\x34\x41\x44\x72\x5a\xf2\x1e\x28\xa3\x6b\x7e\xa7\xe1\xcd\x5b\x1f\xfe\x3b\x00\xef\xa8\xf4\xd8\x2a\x87\x93\x43\x46\x94\xd5\x0d\x15\x13\xaa\x99\x7c\x38\xf0\xc1\xc0\xeb\xc6\xb4\xb2\xe8\x6d\x5c\x8c\xec\xc6\x07\x02\x67\xe6\x36\x23\xc3\xe3\x3a\xcd\x5c\xd0\x33\xfd\x0c\x7c\x40\x70\x40\x80\x43\x54\xc4\xfe\x24\x43\x26\x04\xc1\x50\x88\x22\x4c\xea\x1a\x5b\x6d\x27\xab\x1c\xce\x1a\x2b\xf0\xe7\x52\x94\xa3\x93\x55\x3e\x6e\x9a\x5e\xe2\x18\x82\x9a\x65\x99\x8b\x11\x36\xfe\x21\x5a\x35\x2e\xb2\x46\x3b\x79\xac\x7d\xf3\xf5\xd5\xd5\xcb\x0f\x89\x9b\xd9\xa4\x3d\x51\xb9\xb4\xec\x05\x67\x90\xb0\xaa\x2a\xc4\xcc\x16\x6d\xd9\x92\xa7\xcf\x60\xb6\x64\x4a\x73\x73\x56\x9b\xf9\x93\x9f\x25\x21\xdc\x86\xb3\xba\xd0\x41\x63\x18\xc1\xd2\xb5\xd8\x33\x7b\x38\x0c\x87\xc0\x64\x09\x95\xe2\x39\x9f\x8b\x92\xe7\xb6\xc2\x42\x47\xb1\xb7\x68\x9a\x83\xc1\xb7\x76\xc9\x4c\x3b\xf8\x16\x97\x7e\x78\x5b\x46\xcc\x21\xb3\xf0\xad\xd9\xdf\x8a\x4e\x75\x04\xe4\xfa\xa1\xdb\xfd\xef\xfa\xec\x22\x72\x34\x07\xda\xb5\xba\x15\x90\xeb\x1e\xf4\x0c\xc5\x02\x89\x1b\x35\xe2\xd1\x8f\xfe\x21\x4f\xe7\x86\xab\xd1\xf6\x17\x73\xde\x6c\xed\x28\xda\xe6\xd4\x02\xda\x5d\xe5\x51\xe1\x40\x17\x25\xb2\xa1\xbf\x95\x0d\xf5\xd7\xb7\x68\x4e\xbd\x92\x35\xe2\x90\x0e\x23\x8b\xc2\x65\x33\x50\x37\xf4\x90\x39\x74\x9d\x8a\x32\x17\xe5\xc2\x5a\x85\x34\x2c\xfb\x9c\x9a\x5c\xac\x7b\xe5\xc7\xd9\xa0\xb5\xeb\x9e\x7d\xc7\xd5\x14\xfe\x06\xae\xe4\xeb\xaa\xe2\xea\xfe\x3e\x49\xb3\x97\xcc\x2c\x5b\x7d\xb0\xe1\x8a\xaf\xaa\xc2\x16\x63\x26\xa9\xe7\x82\x51\x4f\x85\xd5\x88\xa2\xe7\x71\xb4\xd1\x61\xd4\x11\x72\x74\x76\x1d\x2e\x2f\x9a\xd2\x66\x5b\xda\xf6\x9f\xb3\x10\xb1\xe3\x57\x94\x34\x6b\x19\x7f\x9d\x81\xc7\x81\x95\x11\x51\xe8\x31\xfa\xd3\x09\x8d\x95\x2f\x30\x89\xf8\x84\xb2\x73\x14\x8a\xb4\xfc\xe3\xf3\x6c\x7e\xc6\xef\xf1\xbb\x1a\xa3\xd7\x92\xf3\x39\xab\x0b\x83\xda\x8e\x18\x04\x81\xd9\xb0\xa4\x9c\xc3\xb6\x2c\x18\x03\x83\xa9\xcc\xad\xd7\x82\xbf\xc9\xec\x47\xf7\x31\xb1\xf3\x24\xc1\xe3\xbc\x41\x29\x8b\xa0\x6c\x7b\x66\xb1\x1b\xa5\xe4\xd7\x30\xd0\x36\xf7\x0d\x88\x2c\x82\xfa\xf3\x4f\x3f\xcd\xe0\x9b\x79\x84\x6f\x14\x4f\xa5\x73\xc3\x95\x2d\x70\xc5\x1e\x95\x92\x37\x02\x5d\xe2\x25\x9d\x28\xca\xbb\x4d\x39\x61\x4b\xe9\x49\xec\xd7\xd8\x64\x31\x68\x5b\xb7\xd5\x40\xc7\x55\x64\xcf\x99\xd2\x4b\x66\x4b\xc2\x3c\xfe\x2b\x6a\x42\x8e\xd4\xf5\x6c\xc6\x79\xae\xc9\x07\xfb\xf9\xe5\x8b\x0b\x57\x27\x9b\xfb\xa2\xd6\x90\xe3\xb3\xb8\x7b\x74\x6a\xcd\xf3\xfe\x65\x51\xfa\xff\x1c\xb7\x6b\xec\x5d\xc3\xb0\xb2\xe6\x63\x0b\x1a\x88\x52\x1b\xce\x72\x4f\x33\x12\x92\xb1\x84\xe8\x32\x44\x42\x25\xc9\x18\xd6\x24\x05\xdb\x6c\x60\x0d\x10\xdc\xd5\x31\xbc\xc3\xe3\x17\x93\x84\xc4\xcf\xf7\xb6\xa2\x41\x6d\xec\x2e\x9e\x22\x30\xbf\xa1\xf7\x14\xef\x5c\x35\x04\x24\x45\x8b\x5d\x46\x6d\xda\x36\x7a\x56\x10\xf3\x7c\x6e\xa7\x74\x43\x9f\x51\x98\x35\x00\xf2\xe3\x90\xdc\xa3\xf4\xb3\xb8\xdb\x59\xa4\x73\x2d\x33\x9e\x05\x70\x3e\x50\x30\x58\x67\xc4\x36\xa3\x14\xc5\xe0\x28\x71\x82\xf0\x09\x4a\xbf\x64\x1c\xab\x3c\x5a\xc0\xd2\x33\x59\x8c\x7f\x5b\x3c\x78\x3e\x6c\xd6\x61\x03\x3a\x8d\xc9\xe1\x61\xb8\x9e\x7a\x44\x95\x3b\xdb\xb8\x5c\x8f\x3b\x7a\x66\x5f\xe1\x97\x34\x44\x3a\x06\xf6\x68\x9c\x52\x11\x68\x46\xec\xf0\x0d\x9a\x8e\x25\x2b\x22\x25\x61\x71\xd7\xb3\x3d\x58\x47\x6c\xd6\x20\x6e\x81\x9f\x81\x9e\x45\x9f\x9d\xfb\xb8\xce\x2c\x53\x38\x8c\xb1\x63\x1a\x1a\x47\x48\xed\x14\xe5\x4d\xc3\x77\x24\xfd\xd4\x68\x5a\xcf\xe1\xcd\xdb\xe9\x9d\xe1\xa9\xe3\xf5\x0d\xf9\xf1\x6b\x88\x59\x28\x44\xc7\x3d\x9f\xbd\x2e\xdd\xce\x22\x84\x31\x3c\x5a\xa7\x9f\x6d\x47\xcf\xc9\x4a\xd1\xe2\x37\x88\xf3\xcf\xfe\xff\x5f\xfe\x05\xb1\x50\xc1\x4b\x1c\x93\xc2\x5f\xd1\x37\xe2\x87\x7a\x0e\x67\x30\xad\xe7\x6f\x4e\xb1\xf1\x6d\xbb\x7a\x69\xbe\x32\xc4\xb8\xf3\x51\x12\x62\x8d\x96\x85\x1e\x7f\xa2\x1f\x9f\xc2\x8c\x95\xa5\x34\x50\xa1\xb9\x03\xa5\x2c\x9f\x58\x19\xe7\x0d\x79\xec\x98\x8c\x11\x78\xda\x0a\x46\xb9\x3a\xdb\x0b\xbe\x1e\xad\x09\xbc\xa5\x91\x95\xa1\xf1\xda\xa3\xe4\x8e\xed\x05\x64\x7f\xc2\xaf\x70\x96\x53\x27\x40\x7f\xe5\xc4\x39\xee\xa2\xeb\xc5\x8c\xd0\x73\xe1\xc4\xb9\xe7\x42\x2b\xa8\xa2\xcd\x6d\xdc\x0c\x0d\xc2\x56\xdb\xfb\x2b\x07\xc7\x94\x46\xbb\x72\x8b\x68\xd2\x80\x2a\x09\xcd\x81\x6e\x24\x92\x8d\xb7\x78\xd9\x0b\x10\xa7\xfa\x83\x49\xee\x79\x64\xb4\x6c\x80\xa6\x10\x73\x1b\xb4\x8b\xe6\x96\x59\x33\x43\xcf\xe8\xe6\x58\x91\x29\x67\x7f\xb6\x40\x38\xa4\x86\x7b\x13\x24\x07\x6d\x92\x28\x48\x75\xc0\x28\x09\x41\x89\xbd\xda\x7f\xdb\xc9\xb5\xd8\x77\xa7\x56\x2c\x48\xba\x74\x81\x63\x50\xf8\x3d\x71\xba\x26\xf6\x5f\x1b\xc3\x46\xa1\x7f\xba\xe5\xf2\xda\x52\x34\xcb\x2b\x57\x57\x2f\x7d\xab\x85\x8c\x1c\x7c\x28\x72\x3f\x88\x42\x14\x7b\x97\xd5\xe9\xf3\xc2\x89\x53\x30\xb6\x4b\xbf\xbf\x3b\xc8\xf9\x1c\xdd\x86\x0c\xa5\x76\x66\x4b\xd8\x47\xa9\xf3\xee\xd0\x17\x6e\xdc\xdf\xad\xb5\x46\xbe\xb0\x35\x0b\xad\xd4\x70\x02\xc5\xd5\xc4\xbf\xe2\x2c\x7f\x5a\x14\x23\x02\x7e\x5c\x95\xa3\x2f\x94\x9f\xa3\xc2\x1b\x43\xe2\x24\x81\x42\x65\xeb\x0d\x1e\x5c\x99\x27\x67\xe2\xeb\x3b\xda\x82\xe8\xd3\x10\xbf\x7f\x5a\x14\x72\xfd\xba\xbc\x2e\xe5\xba\xfc\x52\xf0\x22\xd7\xa0\x8d\xac\xe8\x10\xd7\x65\xd0\x73\xb4\x5b\x73\x26\xac\xa9\x21\xe6\x8d\x8d\x11\xee\x02\xd5\x04\x85\x6a\x93\x74\x86\x13\x04\x00\x08\xc1\x89\xd2\x6a\xda\x08\x53\x9b\x82\x1f\x0c\x06\xbb\x58\x9c\x82\x51\x35\x59\x9c\xbe\x82\x04\x49\x73\x06\x31\xc8\x58\x2a\xdb\x9b\x0a\x17\x7c\xfd\x79\x3d\x9f\x93\x9c\x4f\xc7\xf0\x48\xf1\xf7\xbb\x82\xba\x5b\x54\xf7\x0b\xeb\x4e\x71\xed\xf0\x6a\x6d\x50\x10\x02\x9b\x8e\xad\x8a\xc5\xf3\x43\xe5\x38\x59\xde\x83\x48\xc9\x7e\xce\xf2\x96\xd1\x3e\x40\x04\x1a\xb4\x42\x04\x00\xbd\xd4\x97\x4c\xb1\x95\xf6\x2e\xd0\x77\x4c\xe9\x91\x42\xbe\x78\x07\x67\xd0\x7c\xc7\xde\xef\x6b\xae\xee\x9a\xee\x2a\x7b\xfd\xea\xdb\xec\x97\xd8\x38\xf2\x03\xa2\x2e\xc3\xd8\x2f\xa2\x8a\x34\x14\x40\xfe\x24\xd0\x46\xfa\x80\xba\x98\x43\xe9\xbb\x65\xdf\x4a\x32\xd6\x21\xb1\x8b\xa4\x3e\x83\xcd\xc6\x7d\xfe\x8a\x97\x76\xd2\x88\x4f\xee\x7b\x42\xc6\xfb\x51\x78\x51\x72\x39\xdf\xc1\x83\xbf\xdf\xc5\xc3\x2e\xeb\xc7\x20\x12\x38\xe1\x91\x0d\x75\xf9\xf4\xb9\xf7\x42\x9f\x6c\x95\x1f\xf7\x3a\x59\x9d\x52\xb8\x2f\x71\x4a\x32\x57\x7b\x8f\x23\xd8\x0a\x4c\xd3\xd9\xdc\xf2\x30\xc8\xdf\x52\x0f\x48\x8a\x76\x20\xd8\x25\x4f\x3b\xed\xf5\xbe\x3c\x69\x30\xbb\x3a\x65\xc3\xf3\x58\x32\x3c\x5b\x09\xf3\x05\x39\x7e\x91\x44\x78\xa1\x84\xcd\x7c\x34\x2d\xcf\xca\x7a\xa5\x9f\xa2\xe5\xa9\x4f\xc1\xb7\x46\xa6\x4f\x24\x32\xbc\xc3\xb0\x1e\x47\x09\x59\x7b\x1b\x2e\x7b\xce\xb5\x66\x0b\x9e\xa6\xc3\x38\xc9\xda\xdc\x08\x72\xda\xbe\x2b\x48\xd2\x53\xed\xb1\xad\x66\xfa\xb2\xad\x8d\x71\xae\x22\x7b\x61\x6f\x7e\xd5\x4a\xf9\x9d\xdc\xea\x92\x69\x58\xb2\x9c\xc6\xf6\x65\x53\x6d\x0e\x2f\x07\x69\xef\xa8\x88\x32\xba\x0a\x19\x5d\xb1\x44\x57\xcf\x42\x71\xf7\x12\x33\xaf\xd5\x43\x12\x17\x39\x6b\xa1\xaa\xd9\x4e\xaa\xb7\x95\xad\x25\x20\xed\x94\xed\xde\x64\xed\xa1\x5c\xad\xa7\x50\xe4\x8a\xec\x1d\xb2\x85\xbf\xcd\xd6\xee\xc2\x40\x66\x41\x72\xd7\x25\x6f\x2e\x51\xcd\x96\xb8\x27\x99\xfd\xc2\x0a\x2d\x71\x0b\xdc\x81\x22\x11\x5d\xab\x62\xb8\x7f\x76\x2f\xf6\x9f\xd4\xaa\x48\xc6\x4e\xa2\xbe\x64\x66\x99\x1e\x1a\x18\x76\x25\x19\x43\x82\x3c\x87\x27\x3a\x49\x3f\x38\xb9\x8c\x20\x3e\x3c\xb9\x1c\x8d\x6e\x62\xa8\x1d\xb9\xe5\x92\xac\x39\x12\x25\x50\x88\x1b\x7b\xd9\xc1\x38\xaa\xad\xa4\xb1\x01\x04\x51\x6a\xc3\xca\x19\xcf\xe0\x7b\x0e\xfc\xb6\xa2\x3b\x61\xd4\x46\xf7\xc4\x56\x9c\x2c\x8e\x66\x92\x5c\xe8\x99\xb4\xb7\x23\xf4\x9d\x36\x7c\x35\x46\xe6\x9a\x4c\xa0\x10\xd7\xbc\x08\xf9\x69\x1b\xe6\x48\x96\x52\x9b\x53\x4b\xbb\x26\x01\xdd\xac\x60\x14\xa6\xf2\xe5\xc4\xbd\xa1\xd9\x87\xa7\x9e\xc5\x1c\x3e\xf2\x2c\xf7\x35\xd3\x2f\x15\x9f\x8b\xdb\x30\xe3\x18\x12\x7b\xc5\x93\x8c\xcb\x80\xc7\x19\x35\x9f\x4e\x26\x09\xfc\xbf\x40\x09\xab\x40\xea\x60\x36\xd6\xaa\x40\xeb\x52\xf3\x00\xed\xe8\x22\x2e\x54\xdc\xf5\xd0\xdd\x2b\x45\x93\xa3\xc3\xa5\x70\x09\x54\x2a\x36\x4e\x2e\x24\x6d\x64\x14\xbf\xa6\xf2\x7a\xe2\x01\x1b\xed\x41\x40\x6b\xa9\xae\xc7\x40\x31\x71\x70\x6a\x17\x3d\x3b\xb8\x93\xb5\x02\x2b\x57\xe9\xab\x40\x12\x26\x69\x1c\x1a\x7c\x60\x00\x16\xad\xce\x6d\xef\xc6\x21\x8d\x5f\x29\xb3\x1f\x79\x42\xa2\xcc\xf9\xed\xee\x88\x4f\xfd\x18\x97\xbe\xdf\x76\x1b\xf6\x65\xef\x71\x26\x32\xb7\xf6\x8c\xeb\xb8\x11\x1b\xa5\xf0\x5d\x52\xbe\x37\x2e\xec\xcc\xb9\xc1\x4c\x56\x77\xaf\x5f\x7d\x3b\xaa\xc7\x10\xf7\xff\x9c\x69\x8e\xe2\xe3\xfe\x3e\xf1\x56\x61\x14\xb0\x3d\x10\xd9\xdd\x0a\x02\xb7\x82\xc5\xed\x20\xef\x76\xfa\x7e\xb0\x9d\xc1\xf7\x86\x66\x14\xe8\xed\x8e\xff\xee\x4f\xe5\xef\xdd\xf7\x90\xd2\xff\xc9\x77\xbe\x2f\x52\xee\x4a\x05\xfa\xb6\x76\xbc\x6d\xfa\x75\xc5\xbb\x9b\x12\x02\x2b\x79\xfc\x3e\x4e\x99\xe6\x70\x82\x67\xf8\xf5\xab\x6f\xc7\xd6\xee\x06\x9f\x94\xf4\xcd\x78\x7e\x4b\xb4\x0b\x4e\xcf\xe0\x04\x07\xd0\x4f\xab\x2f\x9c\xad\xde\x94\x31\xe3\x17\x67\xa8\x9c\x9b\x5b\x9f\xfb\xbc\x44\x63\x73\x66\x0b\xdd\x6b\xe5\x62\x31\xd6\x54\x70\x07\xd7\x48\xa8\xea\xa2\xa0\x5b\x65\xa4\xe7\x78\x4e\x59\x48\x59\xa3\xea\xf6\xb6\xa4\x53\x4b\x14\x08\x27\xb5\xb7\xf2\xf6\x64\xec\x61\xa2\xad\xe0\xe2\x19\x19\xc0\x85\x34\xee\x92\x2e\x82\x44\x58\x56\x52\x2c\xd9\x0d\x07\xff\x04\xc2\x7e\x93\xc4\xce\x33\xb5\xe9\x28\x77\x4f\xcd\x5e\xc9\x41\xc9\xef\x51\x5b\x0b\xc5\x5d\x00\x9c\xf9\x8a\x25\x12\xfc\x66\xc9\xef\x9a\x30\x7b\x28\xa1\x8f\x6e\xd1\x71\x15\x14\xae\xcb\x1d\xb7\x69\x47\xf9\xe2\xe8\xbe\x48\xbf\x3e\x88\x43\x3a\x1d\x9d\x5c\x4a\x6d\xcf\x2d\xcb\x23\xac\xc3\x9f\x2c\x63\x1c\x2c\x1e\x17\xda\x8d\x13\xc5\x5b\x89\x5d\x6b\xfe\x5a\xfb\x17\x15\x40\x4f\xfd\xcb\x41\x81\xbd\x1d\x73\xea\x14\x36\x7b\x43\x4e\xdb\xce\x8e\x8b\x37\x91\x35\xb6\x1d\x73\xf2\x61\x18\x37\x4d\x5c\x39\x12\x97\x8c\x6e\xc7\x9c\xa2\xd8\x2a\x99\x79\x2e\x0d\x12\xbe\x2c\xed\xf5\x0b\xf4\xcd\xff\xec\xd3\x4f\xe3\x7c\xd0\x18\xd6\x2e\xe9\x61\x9d\x9b\x4a\x71\x43\x68\xe2\x80\xd2\xc2\x22\x47\xc7\x1e\x20\x63\xf8\xaa\xb2\xa7\x8f\x56\x11\x9f\x3f\x17\xa1\x86\x15\xb9\x1f\x0d\x8e\x1e\x89\x83\x31\x31\x5f\xff\xd1\x11\x13\xeb\x24\xfb\xfe\x90\x18\xf5\x79\x78\x4c\xec\x21\x21\xae\x33\xfb\x06\xc4\xb3\x17\x5f\xf6\x46\xb9\x2e\xf8\x3a\x0a\x7e\x5b\x89\x63\x23\x27\x48\xc7\xbb\x38\xac\x75\x64\xc4\xac\x23\x60\x16\x80\x26\x69\x54\x30\xa1\xa2\x64\x03\x02\x8e\x82\x2e\x2f\x7e\x71\x38\x28\xd7\x4a\x35\xa4\x63\x48\x22\x9e\x39\x85\xc7\x9f\xe4\x8f\xad\x1b\xd0\xcc\x11\xe6\xa6\x98\xa2\xae\x0e\x71\x73\x44\xc5\x9d\x80\xda\xa5\x3d\xf8\xee\xfc\x37\x41\x30\x5d\x75\x44\xc1\x76\x56\x11\x23\xbe\x55\xf2\xf1\xa8\x29\x44\x1e\x6c\x55\x22\x47\x42\x62\xbb\xda\xea\x27\x0a\x61\x93\xda\x6e\x05\x4d\x1e\x16\xc4\xde\xa9\xd4\x1a\x06\x9f\xd4\x45\x50\x80\x1d\x1f\xb7\xb6\xcf\x3e\x50\xee\x58\x09\x59\x6b\xc0\x89\xac\xfb\x20\xe7\x0e\xf0\x96\x8a\x1c\xa1\xe6\x1e\x53\xe8\x8c\x52\xb7\x36\x43\xe5\x0f\xec\x11\xcb\x3a\x22\x88\xdd\x53\xc9\x15\xa2\x2d\x03\x6d\xd4\x0d\x2b\x90\xc0\x49\xe2\x82\x79\xd4\xb4\xff\xda\xfe\xbe\xc0\xb6\x0f\x0a\x2a\xfe\xde\x32\x4b\xac\x64\x7a\x1d\xd8\xed\x7e\xfd\x1e\x32\xc5\x0e\x2e\x39\xb9\x8f\xd6\x64\xaa\x98\x62\x2b\x6e\xb8\xd2\x2e\xb8\x69\x2f\xbd\x38\x7f\xcb\x96\x32\xf9\xdc\xce\xd6\xed\x44\x4d\x05\xc9\xad\xf0\x20\xce\x72\x49\xed\x21\x3e\xe8\x3b\xde\x6f\x5f\xe6\x44\xc3\x2e\x99\x58\xfc\xbb\x7c\xb2\x8a\x7c\xfa\x3d\x12\xa9\x2b\x7c\x2f\xeb\x22\x2f\x1f\x9b\x26\xaa\x4d\xab\xfc\xe4\x7d\x42\x26\xa2\x97\x73\x44\x95\x57\x6c\xed\x4c\xc1\xda\xff\x1d\xbe\x85\x0f\xb6\xb5\x4d\x39\xcb\x78\x6d\xd2\xd9\xba\x87\xce\x20\x2f\x8a\x21\xb3\xaa\x5c\x96\xd4\x6d\xb0\x59\x55\x6d\x72\xf6\x85\x7b\xa1\x29\xa0\x3e\x2e\xd2\x2a\xe6\xf6\x40\xb8\x6e\xaf\x78\xc5\xed\x43\x68\xee\xf7\x37\x1a\x1d\x9e\x20\xf7\x1a\xc8\xa3\x73\x9f\x76\xf0\xa1\x5a\x69\x0b\xc3\x12\xbf\xfd\x49\xea\x47\xd0\x52\xdf\x24\x21\xaa\xfb\xcb\x10\xc2\x76\x85\xd1\x6f\x89\x85\xb3\xd0\xe3\x9c\xad\x78\xd1\x94\x83\x3b\x3e\x28\x74\xf8\xed\xcc\xb2\xe8\x8e\x44\xdf\x78\x9f\x42\x70\x68\x64\x4f\xf3\x7c\xb4\x07\x95\x71\xf4\x06\xd3\xe8\x26\x25\x4f\x6b\x10\x63\xe1\xb8\xd1\x3a\x22\x05\x9a\x50\x73\x90\x0a\x46\xa8\xd5\x76\x88\x96\x6e\xd3\xd5\xe3\x6f\x56\xee\xca\xd8\x56\x19\x45\xdf\x2a\x1c\x1e\x1d\xcc\xdd\xc9\xdf\x8e\xbd\xe7\x4c\x14\x54\xe7\xe2\xb9\xbb\x0f\x7e\xd2\x5e\xa8\x13\x55\xfe\x64\x8f\xcc\xaa\x4a\x87\x0f\xa2\x22\x41\x48\x23\x42\x35\x5b\x39\x39\xf9\xfd\xbf\xfd\xed\x0f\xbf\xfb\x97\x1f\xfe\xf9\xdf\x7f\xf8\x87\xdf\xfe\xe1\x9f\xfe\xee\xbf\xfe\xe3\x3f\x7f\xff\xbb\xbf\xff\xe1\x5f\x7f\xfb\x87\xdf\xfe\xe3\xc9\x24\x78\x89\xc4\x9d\x6e\x8e\x4b\xc3\xd4\xb3\xdb\x4a\xf9\x6f\x68\x29\xf4\x6d\xf9\x47\x67\x31\x79\x3e\x60\xe3\x4f\x7a\xf7\x61\x9b\x21\xe2\x95\x7d\xc0\x44\x87\xe6\x69\x9c\xdd\x41\xab\xa0\x6e\xeb\xd7\x76\x14\xc0\x09\x09\x59\x72\x39\xef\x4b\xc8\xec\x4a\x0a\xdb\xbd\x5f\x52\x34\x60\xab\x20\xc9\x69\x88\xaf\x0b\x6c\xed\x5b\x38\x14\xd4\xbd\x7d\x2a\x5c\xdb\xf6\xb1\xb0\x2e\x15\xe9\x48\xa4\xcc\x57\xdc\x6c\x36\xbe\xaf\xbb\xd6\x99\x7e\x66\x7b\x7c\x74\x06\xcd\xa7\xbf\xe6\x4a\x5a\xe7\x2b\x3a\xee\x7b\x8f\x58\x27\xe0\xd4\x8f\xec\x3e\x65\x0f\x3e\x67\x9d\x93\x24\x61\x16\xbf\xe4\x3d\x87\x6d\x87\xa5\x1c\xb0\x03\xe7\xad\x87\x3d\x7f\x4a\xe2\x1e\x8d\x57\x2c\x4d\x59\x91\xee\x20\x18\xb3\xf4\x71\x1c\x1e\x6b\x63\x3b\x21\x9c\x81\x43\x87\x0c\x39\x5b\x5a\xea\xf9\xba\x8c\x2c\x28\x1b\xeb\x4b\x16\xdc\xd0\xcb\x7d\xb1\x86\xb6\xae\xcd\x96\x82\x56\x30\xad\xe7\xee\x09\x3e\xca\x6a\x0f\x07\x03\x23\x5f\x71\xf3\xa1\xa6\xda\x31\xfa\xfb\xc9\x81\x44\x69\x3b\x61\x3b\x39\x81\x17\x65\x71\x67\x0b\xa7\x6d\x14\x86\x80\x50\x8e\x48\x2f\xd1\xbc\x81\x69\x08\xc0\x50\xf1\x9e\x96\xc0\x8a\xc2\x02\x90\x66\x19\x17\x46\xca\x95\x30\xa8\xfc\xf3\xda\x66\x01\xd0\xd5\x13\x25\xd7\x1a\x4e\x26\x6e\x46\xbb\xfc\x6e\xa1\xbb\x5f\x85\xef\x44\xed\x68\x0b\xdc\x43\xa2\xa1\xcc\xeb\x82\xaf\x7d\x85\xe2\x23\xe7\x06\xb9\x2e\x68\xab\x3e\xd3\x33\x56\xf1\xaf\xaf\x9e\x7f\x3b\x9a\xb3\x42\xf3\xc8\xde\x3b\x3d\xf3\x8f\x92\x7a\x2e\xb0\xa8\xf6\xbb\x5d\xfb\xac\x41\x82\x44\x4c\xc1\xa8\xf6\x13\x3e\xb9\x49\xc6\x40\x30\x83\x4d\xf8\x39\x55\x15\x6e\xbf\xb1\x18\x50\x6f\x2d\xb5\x71\xf7\x7a\x13\xd3\xc7\x3f\x3b\x79\x6c\xd2\xe9\xe2\xe9\xd5\xe5\x07\xbe\x94\x61\x87\xe1\x78\xa0\x40\x5d\xf8\xed\xee\x0f\xda\x77\x44\xe9\xe6\xa0\x56\x37\xf4\x3b\x3c\x7b\xe6\x9c\x9e\xdd\x17\xd7\x8e\xbd\xda\xd7\x75\x49\xef\xb2\x9e\x06\xc3\x1f\x71\x40\x79\x53\xf3\xcb\x7a\xaa\x67\x4a\x4c\xe9\x91\x92\x9d\x7b\x78\x59\xfb\xe5\x92\xce\x3e\x89\x5d\x42\xdc\x93\xca\xe5\x9f\xeb\x85\x5d\x6c\x7a\xd0\xb1\x70\x2c\x81\xa6\x7a\x37\xe2\xd1\x1d\xb7\x88\x11\xda\x6f\xff\x3d\x67\xd7\x3c\xda\xb0\x63\xdf\x26\xb1\x7b\x74\xf8\x6d\x92\x06\xf2\xc1\xeb\x11\xad\x37\x4d\xb3\x40\xe0\x70\x45\x22\xda\xeb\x9e\x37\x49\xf6\x43\x70\xb9\xf5\x3f\xbd\xa7\x49\x9a\x75\x1d\xfb\x34\x49\xf4\x24\x49\x7b\xcd\x17\x7c\xdd\x2c\xfb\x41\xcf\x92\xe0\x46\xf5\xdc\x0d\x0d\x31\x98\x9d\x3e\x51\xf2\xa8\xe9\xd1\x75\x7f\xe0\x01\xef\x96\x44\xbb\xfc\xa3\xde\x2d\x89\xe0\x84\x7a\xd1\x07\x3d\xa0\x09\x40\x2c\xd7\xc5\x51\x3b\xaf\x91\x3c\xf0\xbd\x8b\x28\x64\x4b\x44\xdd\xba\xb1\xd7\x7d\x03\x4d\x2f\x9c\x00\x7c\xae\x17\xfd\x91\xda\xdd\x2a\xc5\xae\x4b\x7a\x7b\x6a\x9d\x57\x7a\x91\x7d\xc1\x0c\xeb\xab\xa4\xdb\xf3\x60\xc8\xa3\xa3\xde\x99\x18\xb6\x38\xea\x40\x29\x94\x5d\xf0\x11\xa5\x50\xb6\xf4\x49\x4e\x7f\xcd\x67\xe1\x09\x56\x1d\xf6\xcb\xbf\x0b\xf1\x9c\x95\x77\x94\x44\x90\x96\x31\xdc\xf3\xe4\xb6\x42\xa5\xc6\xb9\x0d\x30\x7a\x8d\x17\x34\x2f\xb5\x40\x71\xe7\xee\xa0\xb4\x2a\xa4\x3a\xf0\xee\x7b\xfa\xa5\x42\x43\xc9\x55\x1c\x94\xb3\x96\x06\x3b\x50\x29\xe5\xe9\xdc\xe2\x41\x9a\x1f\x97\x10\x4f\x3c\x0e\x17\x63\x67\x0d\xd8\xf4\x21\x85\x22\xb8\xa2\x0f\x2f\x14\x89\x46\x1f\x78\x85\x00\x57\xf3\x3f\xfd\x0a\x41\x83\xdd\xae\x15\xd1\xab\x80\x5e\xd6\xd3\x42\xe8\x65\xa3\x7f\x7e\xdc\x13\x04\xc7\x58\x1f\x1f\xf2\xb4\x80\xaf\x4d\xd8\xff\xbc\xc0\x8e\x96\x08\xab\x73\xe5\x09\xe1\x8d\x01\x2a\x54\x38\x60\xd0\x0c\xa3\x0a\x84\xd6\x51\x88\xcb\x0e\x7a\xf4\x4a\xab\xe0\x60\xbb\xde\x60\xbb\xdc\xe0\x4f\xf8\x9d\x00\x6b\x00\x7d\xe8\x3b\x01\x3d\x54\xe9\x94\x7d\xc7\xbd\x13\xe0\xf5\xc2\x1f\xed\x45\x80\x1e\x94\x8f\x50\x55\xd0\xaf\xab\x26\x13\x38\x46\x0d\x71\xa5\x42\x86\x72\x5b\x1d\x4d\x26\xb0\xab\x91\x26\x13\xb8\x8f\xa0\xfb\xc1\x74\x01\xc6\x0f\x7e\xf4\x68\xf7\x5b\x66\x13\x80\x67\x67\x90\xbc\x13\xee\x46\xd3\xbb\xa4\x67\x1a\x9f\xb0\xdc\x05\xe2\x6b\x4a\x3d\x22\x1d\x49\xbe\xce\x77\x0e\x8e\x55\xca\x5d\x99\xbd\xfd\x5a\xb9\xfb\x41\xa1\x98\x87\x9d\x6e\xee\x56\xcd\x9d\x59\xb6\x96\x66\xde\x7a\x0f\xc1\xff\xcf\x6b\xb8\x62\x94\xa8\x6c\x84\xf5\x28\x6b\x5c\x9c\x97\xf4\xcf\xf5\x62\x5b\x57\x3f\xb1\xb8\xfe\x34\x0a\xfb\x58\x1b\xeb\x50\x72\xed\xa0\x82\x0e\x13\x59\xc0\x01\x5c\x1a\x6d\xc3\x7f\x07\x00\x00\xff\xff\x58\x27\xc5\xd5\x0e\x66\x00\x00")

func baronNamePbBaronGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_baronNamePbBaronGoTmpl,
		"baron/NAME.pb.baron.go.tmpl",
	)
}

func baronNamePbBaronGoTmpl() (*asset, error) {
	bytes, err := baronNamePbBaronGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "baron/NAME.pb.baron.go.tmpl", size: 26126, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xda, 0x2f, 0x7d, 0x2d, 0xd, 0x33, 0xd2, 0xc, 0x81, 0x7c, 0x6, 0x2f, 0x33, 0x6c, 0x8d, 0x95, 0x75, 0xfb, 0x5f, 0x2e, 0xd7, 0xac, 0x55, 0x40, 0x54, 0x6f, 0xa0, 0x87, 0xdc, 0x1a, 0x55, 0x7}}
	return a, nil
}

var _cmdNameMainGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x41\x6f\x9b\x30\x14\xc7\xcf\xf8\x53\xbc\x59\xda\x04\x52\x46\xab\xaa\xdd\xa1\x13\x87\x36\xe9\xb2\x49\xd3\x86\x12\xba\xeb\xe4\xc0\x83\x58\x03\x1b\xd9\x0e\x55\x14\xe5\xbb\x4f\xcf\xc0\xc6\xd4\x74\xe9\x25\x76\xe2\xe7\xdf\xff\xc5\xfc\x4c\x2b\xf2\x5f\xa2\x42\x68\x84\x54\x8c\xc9\xa6\xd5\xc6\x41\xc8\x02\x5e\xd6\xa2\xe2\x34\x36\x8e\x06\x6d\xe9\xd3\x3a\x23\x55\x65\x39\x63\xc1\xc5\x05\x64\x5b\x69\x61\x8d\xa6\x93\x39\xfa\x11\x0d\x0b\xf8\xe1\x10\x7f\xf1\x98\x54\xb8\x2d\xbc\x3f\x1e\xe1\xc2\xfa\x35\xce\x22\xc6\x3a\x61\x20\xd7\xaa\x94\x15\xf4\xbf\xc6\x73\xff\x8d\xb1\x72\xa7\x72\x90\x4a\xba\x30\x82\x03\x0b\x28\x3f\x5e\xfb\xbc\x1f\xc2\x84\xef\xfa\x4d\xf1\x02\x37\xbb\xea\xae\x28\xcc\x0c\x78\x41\xf3\x58\x14\x85\xe1\x33\xe0\xb7\x37\x97\x1f\x2e\x69\xe2\x4b\x40\xa8\x02\x1a\x74\x46\xe6\x16\x6a\x69\x1d\x2a\xa0\x4a\xb4\x96\x47\x2f\xd2\x3f\x67\x59\x3a\xc0\xb7\xce\xb5\x53\xf6\x8d\x67\x53\xc1\xeb\x71\xcb\x55\x3a\x1f\x70\x95\x69\xf3\x29\xee\xda\xe3\xaa\x55\x3a\x87\x90\xa0\xd1\xeb\xa9\xdf\xee\xb2\xf5\x40\x55\xc2\xd9\xbf\xd4\xeb\xab\xab\x2b\x9a\x50\xc1\x4b\xb8\x7b\xad\xeb\x67\xe7\x39\x9e\x25\x9f\x41\x29\x6a\x8b\x7f\x0e\xb1\xd1\x05\xf2\xa8\x7f\xda\x8f\x16\x01\x55\x27\x8d\x56\x0d\x2a\x07\x9d\x30\x52\x6c\x6a\xb4\x33\x90\x25\x58\x74\x31\x7c\xaa\x45\x65\x61\x2b\x3a\x84\xd6\x48\x6d\xa4\xdb\x83\xee\xd0\xc0\x83\xea\xa8\xde\xc6\x2c\x90\x25\xf8\x2c\xb8\x4d\x40\xdb\x78\x89\x0e\x55\x17\xf2\xc5\xc3\xfd\xe3\x92\x47\x1f\x87\xc5\x37\x09\x70\x4e\x1a\x04\xd3\x3e\x21\x01\xee\xcc\x0e\x39\x24\x09\x0c\x2e\xc6\x99\xfe\xaa\x9f\xd0\x84\x7e\x63\xc4\x82\xa3\xcf\xa0\xff\x7d\x2a\xe2\xe7\xdd\x62\xb1\xa2\x1c\x5f\x70\x3a\x86\x0e\x17\x12\x5f\x31\xe2\xfc\xb5\xf8\x17\x97\x7e\x5f\x65\x04\xf2\x4b\xcf\x40\xa3\x49\x90\x40\xd9\xb8\x78\xdd\x1a\xa9\x5c\x19\xf2\xdb\xb7\x96\xcf\xfc\x9e\xff\xb5\x4a\xbb\xcf\x74\x3a\x09\x98\x36\x7a\x02\x46\x16\x9e\x81\x8d\xa2\x9e\x87\x91\x5b\x67\x60\xa3\x9f\x13\xd8\x71\xb8\xde\xf4\x96\xe9\xaf\x37\x09\xd5\x16\xc2\xe1\x68\x28\x5a\xd2\xc8\x6d\x71\xdf\x0b\xb4\x41\x54\x5e\x9e\x27\x23\x1d\x99\xbc\xd9\x03\x19\x6c\x07\x91\x53\x61\x2c\x86\xe4\xe6\xf0\x1e\x59\xed\x54\xd8\x77\x10\xb1\x23\xfb\x1d\x00\x00\xff\xff\xa2\xaf\x67\x6e\xd8\x04\x00\x00")

func cmdNameMainGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameMainGoTmpl,
		"cmd/NAME/main.go.tmpl",
	)
}

func cmdNameMainGoTmpl() (*asset, error) {
	bytes, err := cmdNameMainGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME/main.go.tmpl", size: 1240, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xff, 0xf5, 0x2b, 0xbe, 0x15, 0xb6, 0xa, 0xf6, 0xe0, 0x6a, 0x83, 0x18, 0x55, 0xbb, 0xaf, 0xa, 0x9c, 0x20, 0x95, 0x68, 0x2e, 0x63, 0x5c, 0xbc, 0xfb, 0x86, 0x86, 0xb3, 0xe9, 0x78, 0x6e, 0x89}}
	return a, nil
}

var _cmdNameClientMainGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\x4d\x6f\xe3\x36\x10\x3d\x8b\xbf\x82\x25\xbc\x0b\xaa\x75\xe8\x45\xb0\x7b\x59\xc0\x87\xb5\x8b\xee\xe6\xd0\xc0\x48\x8c\xf6\x90\xe6\x40\x53\xb4\x4c\x84\x26\x15\x8a\x4a\x52\x08\xfa\xef\xc5\x50\x92\xe5\xcf\xd8\x75\xd2\xfa\x22\x82\x63\xbe\x37\x6f\xf8\x66\xa4\x8c\x8b\x07\x9e\x4a\xbc\xe4\xca\x20\xa4\x96\x99\x75\x1e\x53\x14\x11\x61\x8d\x97\x2f\x9e\xa0\x88\xcc\x35\x4f\xe1\xa9\x2d\x3c\xca\x52\xcd\xb1\x7c\xc4\x6c\x6c\xcd\x5c\xa5\x6c\xea\xb8\xc9\xc3\x31\xc2\xb5\x26\x98\x18\xee\x73\x82\xab\x0a\x45\x24\x55\x7e\x51\xcc\x98\xb0\xcb\x01\xec\x5e\x28\x1b\x9e\x2c\xb5\x01\x48\x9a\xa4\xaa\x10\x8a\xb2\x19\x26\x65\xc9\x26\xa3\xab\xc0\x3f\xe1\x7e\x81\x2f\xaa\xea\x14\xb2\xd4\x65\xa2\x25\xb3\x36\xd5\x92\xa5\x56\x73\x93\x32\xeb\xd2\x41\x08\x76\x44\x31\x42\x4f\xdc\x81\x3a\x08\x7c\x4b\x12\x87\x73\xef\x94\x49\x51\xb4\xf0\x3e\xdb\xd8\x80\x34\xd7\x37\x62\x84\xe6\x85\x11\x58\x19\xe5\x69\x8c\x4b\x14\x41\x55\xd8\x6d\x88\xfe\xc1\x1d\xfd\xd8\x62\xf6\xeb\xa4\x18\x4f\x12\x47\xfa\x98\x7c\xfd\xf2\xe9\xf3\x27\x58\xa4\x37\x93\x31\xa6\x3f\xa6\xd3\x49\x8c\xb5\xca\xbd\x34\x18\xfe\x23\xf3\x9c\xc4\xbb\x70\x6d\x46\x7d\x4c\x60\xb9\x0e\xf7\x25\xc0\x01\xd0\x09\x38\xad\x90\x7e\x7d\x31\x1d\xce\xe7\xcb\xcb\x4b\x58\x5c\x7f\x9b\xde\xee\xe2\x54\x8d\x5e\xf0\xc5\x9a\xde\x09\x77\xb9\xa4\x31\xd4\xf4\x59\xf9\x05\xee\x79\x89\xbf\x0e\x31\x0b\x37\xd0\x5e\x56\xcf\xcb\x13\xee\x6b\x30\xc0\x23\xee\xac\xc1\xdf\xa1\x2e\x63\xad\xa4\xf1\x28\xd2\x36\x65\x13\xa7\x8c\xd7\x86\x92\x3b\x08\xb1\xb2\x04\xc0\x5b\xe9\x9e\x94\x90\xec\x9a\x2f\x65\x55\xdd\x83\xd4\x4c\x1b\x48\x45\x58\x63\xfa\x58\x3a\x07\x99\x84\xd2\xff\xaa\xb8\xa6\x28\x5a\x5d\x73\xbf\x59\xb3\x3f\x95\x5f\x5c\x99\x5c\x8a\xc2\x49\x1a\x6f\x6c\x8f\xb4\x15\x0f\x61\x2f\x46\x11\xe8\x70\x0e\xff\x34\xc4\x46\x69\x10\x1f\xf2\xfa\x8d\x7b\xae\xa9\x74\x2e\x46\x51\x85\xa2\x44\xce\xa5\xc3\xc0\xce\xc6\xda\xd6\x65\x99\x81\x22\xc8\xba\xd6\xb3\x4a\x2b\x9b\xb1\x6b\xf9\xdc\x05\x28\x1c\x3b\x95\xa8\x2c\x1d\x37\xa9\xc4\x3d\x05\x50\xeb\xc5\xf8\x5d\xfa\x85\x4d\xf2\xa6\x9c\x07\xab\x05\x9b\xaa\x59\xa3\x08\x58\x84\x7f\x01\xac\xa6\xc9\xd9\x88\x8b\x87\xd4\xd9\xc2\x24\x20\x22\x82\x2e\x51\x06\x92\x2e\xcb\xef\x16\xce\xe1\x9e\x62\x37\xf2\xb1\x90\xb9\x9f\xfe\x9d\xc9\x15\x56\x64\x8b\x4e\xe4\x96\xf8\x8d\xc3\xf5\x01\x2a\xfc\x4b\x1f\x7f\x54\x20\x7d\x8f\xf6\x4e\xfc\x9c\x92\xbb\xe0\x0e\xd6\xe1\xdd\xe3\x03\xda\xb6\x59\x00\x76\xf8\xe1\xe9\x2f\x43\x42\x6a\xc0\x55\x35\x95\x0d\xd6\x7a\x1b\xb8\x93\x79\xa1\xfd\xf0\xc3\x2f\x35\xc1\xcf\xb6\xf0\xc0\xd0\x98\xb1\xea\xc6\xcd\xda\x80\x0b\x9d\x01\xf0\xd0\xb4\x3f\xa4\xce\xa4\xdb\xba\xbb\xba\x15\x42\x4f\xef\x6f\x05\x08\xdd\xdf\x1d\xeb\x85\x95\x55\x96\x01\xbd\xf5\xcb\x41\x5a\x08\x1c\xb4\x4c\x8d\xf1\x46\xdf\x34\x20\x6b\xe6\x09\xbe\x09\x5e\x01\xf6\xbd\x8d\xd2\x05\x68\x3b\x07\x8f\x39\x86\xae\xdd\xf4\x8e\x29\x3b\xbc\xdd\xcc\xce\x76\x66\x07\x7a\xd4\x3c\x1b\x54\xa7\xdb\xf3\x6c\x86\xd7\x3d\xfa\x9a\x49\x8f\x8c\xef\xf0\x6e\xdf\xb0\x6c\x78\x7d\xec\xb7\x2c\x84\x8e\x4e\x6f\x23\x56\x57\x15\xde\x4f\x63\x6b\x8c\x14\x9e\xb6\xef\xad\x7f\x37\x8d\x8d\xd8\x9a\xc5\x90\xc3\x5e\x8b\x75\x01\x6a\xc4\x7b\x4f\xe2\x83\xca\xff\xcf\x49\xdc\x29\x7c\x9f\x49\xdc\xe1\xfd\x07\x93\xf8\x1c\xf0\xf3\x26\x71\xbd\xaa\xea\xcf\x9b\xf0\x5f\x50\xbc\xe1\xdc\x8b\xf7\xfe\x85\x0f\xaa\x7f\x02\x00\x00\xff\xff\x06\x3c\xfd\x90\x6b\x0b\x00\x00")

func cmdNameClientMainGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameClientMainGoTmpl,
		"cmd/NAME-client/main.go.tmpl",
	)
}

func cmdNameClientMainGoTmpl() (*asset, error) {
	bytes, err := cmdNameClientMainGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME-client/main.go.tmpl", size: 2923, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc2, 0xcd, 0x51, 0x79, 0x9a, 0x4c, 0xcc, 0x37, 0xb0, 0xb7, 0x60, 0x7c, 0x1d, 0x9f, 0xa5, 0x53, 0x53, 0x2e, 0xf6, 0x2, 0xf2, 0x9c, 0x5c, 0x8c, 0x6d, 0x31, 0xc4, 0x35, 0xab, 0x44, 0x75, 0xee}}
	return a, nil
}

var _serverServerGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x56\x4d\x6f\xdb\x38\x10\x3d\x8b\xbf\x62\x2a\xf4\x20\x2f\x1c\xea\x1e\x34\x87\xd6\x69\xb7\x01\x9a\xd4\x88\x8d\xdd\xe3\x82\x96\xc6\x32\x51\x8a\x54\x49\xca\x6e\x57\xd0\x7f\x5f\x0c\x29\xc9\x76\xd2\xb8\xdb\x5e\x6c\x89\x33\x7c\x7c\xf3\xe6\x83\xca\x73\x58\x98\x12\xa1\x42\x8d\x56\x78\x2c\x61\xf3\x1d\x36\xc2\x1a\xcd\xe1\xf6\x33\x3c\x7c\x5e\xc3\xfb\xdb\xbb\x35\x67\x79\x0e\x8f\x68\x5b\xad\xa5\xae\xa2\x03\x1c\xa4\x52\x60\xf6\x68\x0f\x56\x7a\x04\xbf\x93\x0e\xb6\x52\x61\x70\xfe\x0b\xad\x93\x46\x5f\x43\xd7\xf1\xe1\xb9\xef\x4f\x0c\x70\x2b\x3c\x9e\x5a\xe9\xbd\xef\x19\x6b\x44\xf1\x45\x54\x08\x0e\xed\x1e\x2d\x63\xb2\x6e\x8c\xf5\x90\xb1\x24\x55\xa6\x4a\x59\x92\x6a\xf4\xc3\x5f\xbe\xf3\xbe\x39\x7d\xce\x9b\xc6\x9a\x2d\xad\xd8\x56\x7b\x59\x63\xca\x58\xd2\x75\x72\x0b\xf8\x15\xf8\xc2\xe8\xad\xac\xf8\xda\x0a\xed\x02\x68\x2a\x94\x4a\x21\xd5\xc2\xbb\x14\xfa\x9e\x25\x69\x25\xfd\xae\xdd\xf0\xc2\xd4\x39\xad\x5e\x49\x13\xfe\x79\x65\x52\x02\x42\x5d\x92\xdb\x4f\x11\x2b\xdb\x14\x23\xa2\x31\x95\x42\x5e\x19\x25\x74\xc5\x8d\xad\xf2\x60\x3c\xa2\xb1\x24\xcf\x61\x4d\xe2\xad\xd0\xee\x65\x81\x2c\x69\x36\x90\x76\x1d\x5f\xbe\xbb\x0b\xc1\x2f\x85\xdf\xc1\x55\xdf\x53\x5c\x5d\xc7\xcf\x17\x21\x77\x71\x5b\xca\x66\x8c\xed\x85\x25\xa9\xfe\x81\x21\x7e\xfe\xde\x5a\x63\x69\x41\xa3\x1f\x5e\x66\x8c\x85\xb4\x13\x75\x28\x8c\xf6\x42\x6a\x07\x7e\x87\x60\xf1\x6b\x2b\x2d\x96\xb0\x95\xa8\x4a\x07\x5b\x63\x61\xcc\xb9\x18\x33\xe2\xbf\x37\x38\xee\x76\xde\xb6\x85\x87\x8e\x25\x1f\xd7\xeb\xe5\xdb\xb2\xb4\xb4\x24\x75\xc5\x92\x5b\xdc\xb4\xd5\xd9\xca\x9f\x8f\xcb\xc5\xd9\xc2\xc3\xdb\xf5\xea\xf9\x1e\xd8\x18\xa3\x58\xcf\xd8\xb6\xd5\x05\x3c\xe0\xe1\xbd\x2e\x1b\x23\xb5\x77\x99\xdb\x17\xd0\x6c\x78\xd7\xf1\x41\x2a\xfe\x20\x6a\xec\xfb\x55\x60\x36\x23\xdb\xe4\x4c\xa4\xf2\x1c\xde\xb5\x4e\x6a\x74\x0e\x4a\x53\x0b\xa9\x79\x58\xfc\xdb\x8a\x66\x54\x1b\x0e\xd2\xef\xa0\x96\x65\xa9\xf0\x20\x2c\x3a\x0e\x2b\x8c\xe5\x27\x0b\xcc\x4f\x0d\x95\x61\x09\x51\xb8\x19\xad\x9c\x80\x06\x1c\x22\x37\x8b\xc9\x1c\x39\x1c\xcf\x1c\xd2\xd2\x75\x56\xe8\x0a\xe1\xb5\x84\xeb\x1b\x98\x82\xb8\x47\xbf\x33\xa5\xa3\x6c\xb2\x24\xe9\xba\xb5\xf9\x64\x0e\x68\xe1\xb5\x1c\xe2\x9b\x00\x6f\x28\xc4\x7b\xf1\x05\xbb\xee\x99\x31\x12\x38\x16\x29\x91\xc1\x49\x8d\xeb\x9b\x33\x75\xba\xff\x4d\xe6\xd9\x39\xd7\x00\x00\x17\x48\xce\x4f\x38\x0c\xd5\x1d\xf4\x76\xa8\xb0\xa0\x09\x73\x4c\xd1\x8f\xa5\xdf\x09\x5d\x2a\xb4\xee\x99\xf6\xc7\x68\xce\x33\x70\x2c\x90\xc9\x83\x82\xb7\xe8\x5b\xab\x61\x5a\xa3\x9a\xa2\x31\xd6\x6a\x70\x5e\x58\xef\x40\x80\xc6\x03\xd0\xe0\x18\x8a\x7b\x0e\xd5\xe3\x72\x31\xbd\x08\x5d\x82\x80\x32\x54\x65\x5c\x8b\x94\xfd\x0e\x09\xa9\x11\xce\x61\x49\x2d\x44\xbd\x40\xce\xca\x54\x15\xda\x58\xb9\x8f\xad\xce\x8a\x6d\x35\xb4\xca\x8c\xea\x91\x8a\xe7\xfa\xc8\xfd\x01\x0f\x63\xf1\xcc\x9e\xe4\xea\x69\xd9\x0f\x95\x75\x8f\xc5\x4e\x68\x59\x08\x75\xac\x2d\xb4\x36\xa0\xd6\xe2\x0b\x66\x64\x06\xa4\x36\x1f\x76\xdc\x69\x8f\xd6\xb6\x8d\x1f\x65\xe5\x2c\xa9\xcc\x44\x61\x32\x7f\x8c\xd6\x8c\xd0\x86\xad\xb1\x1b\x95\x74\x9e\x2e\x07\xce\x12\xb9\x85\x62\x5b\xf1\xb8\xde\xb1\x84\x80\x28\xd4\x2c\x04\x97\x24\xca\x54\x7c\x69\xa5\xf6\x4a\x67\xa9\x1f\x67\x62\x3a\x87\x34\x48\x48\x0f\xa2\x2c\x6d\x3a\x3f\xc2\x50\xfb\xd3\x71\x49\x52\x53\x0c\x94\x8a\x51\x16\xbc\x6f\xbf\x91\x2e\x49\x52\xf3\xc8\x2e\x4b\xf3\x00\x14\xa7\x7c\x9e\xce\xa3\xff\x40\xfd\x03\x31\x09\x16\x7e\xa7\x4b\xfc\x36\xbb\xb4\xb7\xa8\x4b\x25\x35\xbe\x0c\xb1\x88\x0e\x17\x41\xe8\x47\xaa\x0b\x20\xcb\xe8\x70\x11\xc4\x7d\xaf\x37\x46\xbd\x8c\xb1\x0a\xf6\x8b\x10\xde\x8a\xe2\x02\x8b\x35\x99\x67\x51\xe5\x50\x2c\x6f\xae\xa2\xeb\xa7\x90\xda\xb7\xba\x0c\x72\x67\x67\x49\x99\x43\x4d\x47\xf6\x94\x81\xf1\xc6\xe3\x34\xe4\x3f\xa2\x6a\xd0\x8e\x63\x82\x9a\x3c\xcf\x81\x0c\x30\x65\x3c\x96\xd8\x49\x65\xbc\x5c\x18\xb4\xf1\x49\x5d\x8c\x37\x09\x1d\xbf\x1b\xe6\x16\x8d\xbc\x70\xf8\x58\xa5\xc7\x3e\xff\x79\x4c\x23\xe0\x1c\x76\x14\x4c\x36\xfb\xbd\x9b\x3c\xcf\xe3\x70\xf8\x9d\x30\x69\x63\x3a\x3f\x8d\x72\xbc\x0c\x29\x00\xa5\xe7\xd4\xb3\x14\x2b\xdd\xd2\x31\x84\x2c\xf5\x45\xf3\x03\x67\xe2\x6b\x2d\xbc\xba\x01\x2d\x55\xec\xbb\x51\x00\xb4\x96\x5e\xe3\xdc\xa3\xe4\x51\xca\x9d\xdd\x9f\x88\x48\x48\xf1\xb6\x3c\xd7\x30\x0c\x1d\x8a\x75\xea\x3e\x1b\x7a\xaf\xd9\xf0\x47\xac\x88\x90\x7d\xe1\xd6\xcd\xdc\x1c\x9c\xdd\x87\xf2\x1a\x89\x38\x1e\xd5\x57\xfa\xd7\x05\x3f\x7e\x8c\xe5\x39\xd0\x17\xc2\x6f\x09\x4e\x1b\xcf\x05\x1f\x3f\x36\x28\xaa\xc2\xe8\x13\xc9\xe9\xfb\x6e\x61\xb4\xc6\xc2\x67\x4f\x3d\x7f\x49\xed\x24\x29\x94\x71\x48\x58\x04\x1c\x88\x16\xf0\xc7\x74\xc0\x30\x26\x0b\xbe\x20\xb7\xa0\x2f\x6d\x1a\x3f\xd5\x56\xe8\x3f\x48\x2d\x94\xfc\x17\x6d\x16\x29\x4e\x78\xb3\xe7\xa9\x24\x9a\x3f\x4a\x25\xf1\x0d\x4e\xc1\x48\x5e\x03\x58\xc8\xd2\xaf\x86\x74\x96\xbd\x90\x93\xc7\x56\xbf\x62\xe7\xd2\xe3\x37\x49\xaa\xbf\xb9\x8a\xb7\x47\xcf\xd8\x7f\x01\x00\x00\xff\xff\xc9\x41\xaa\xde\x58\x0c\x00\x00")

func serverServerGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_serverServerGoTmpl,
		"server/server.go.tmpl",
	)
}

func serverServerGoTmpl() (*asset, error) {
	bytes, err := serverServerGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/server.go.tmpl", size: 3160, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x17, 0xbb, 0x6d, 0x64, 0xdb, 0xf0, 0x12, 0x72, 0x31, 0xe2, 0xd6, 0x22, 0x3d, 0xcf, 0x43, 0xd2, 0x6a, 0x8a, 0xe, 0xc, 0x25, 0x3a, 0x59, 0x40, 0xa8, 0x2d, 0xf0, 0xe, 0x8b, 0x12, 0x97, 0xba}}
	return a, nil
}

var _serviceHooksGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8f\xc1\x6a\xb3\x40\x10\x80\xcf\x3b\x4f\x31\x2c\xfc\xa0\x10\x95\xff\x5a\xec\x31\xb4\x1e\x1a\x4a\x93\x17\x18\x36\xa3\x2e\xd1\x5d\x99\x1d\x23\x52\xfa\xee\x45\xd3\x4b\x2e\x03\x1f\x03\xdf\x37\x33\x91\xbb\x51\xc7\x98\x58\xee\xde\x31\x80\x1f\xa7\x28\x8a\x19\x18\xdb\x8e\x6a\xc1\xd8\x98\x1e\xb3\x4a\xbe\x0b\x34\x6c\x90\xd6\xe4\x68\x18\x2c\xe4\x00\xed\x1c\x1c\x36\x41\x59\x64\x9e\xf4\x9d\xc2\x75\x60\xc9\x58\xc4\xa1\xeb\x29\xd4\x05\xb2\x48\x94\x1c\xbf\xc1\x38\x7c\x79\xc5\x91\x6e\x9c\x6d\x2b\x8c\xa9\x3c\xef\xce\x03\xfe\xcf\xc1\x3c\xfc\xe5\x29\xaa\x6f\xd7\xcc\x1d\xf0\x2f\x53\x9e\x9b\xb7\xe6\x74\x79\xe2\xcb\xf1\xeb\x23\x07\xa3\x2c\xa3\x0f\xa4\x7c\xdc\x1a\x9b\xbd\x1d\xb5\xdc\xa1\xcd\xec\xbf\x64\x0f\x58\x17\x2e\x07\x30\x55\x85\x9f\x03\x39\xc6\xa5\x27\xe5\x3b\x0b\xa6\x7e\xd6\x6b\x5c\x02\xf6\xdb\xcd\x3e\x74\xb8\xc6\x19\x17\x0a\x8a\x3d\x0b\x03\x98\xfd\x89\xba\xc0\xe7\x0a\xfc\xc0\x6f\x00\x00\x00\xff\xff\xf7\xa1\x14\x17\x36\x01\x00\x00")

func serviceHooksGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_serviceHooksGoTmpl,
		"service/hooks.go.tmpl",
	)
}

func serviceHooksGoTmpl() (*asset, error) {
	bytes, err := serviceHooksGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service/hooks.go.tmpl", size: 310, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcb, 0x26, 0x4c, 0x34, 0xa0, 0x30, 0x2c, 0x6e, 0x1e, 0xf8, 0x5e, 0xb1, 0x8a, 0x54, 0x32, 0x94, 0xcf, 0x50, 0x90, 0xb1, 0x19, 0x4e, 0xfd, 0x6, 0xaa, 0xdd, 0xc9, 0x39, 0x20, 0x5e, 0x7, 0xeb}}
	return a, nil
}

var _serviceMiddlewaresGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x5d\x8b\xdb\x3a\x10\x7d\x5e\xff\x8a\x21\x2f\x37\x86\x5c\xf9\x17\xdc\x87\x7b\x2f\x0b\x2d\x74\x97\xc0\x16\xfa\x58\x26\xf6\xc4\x16\x95\x47\xea\x68\x9c\x6c\x08\xf9\xef\x45\xf2\xc7\x3a\x5b\x5a\xe8\x53\x22\x69\x74\xe6\x9c\x33\x47\x0e\x58\x7f\xc3\x96\x20\x92\x9c\x6c\x4d\x45\x61\xfb\xe0\x45\x61\x5b\x3c\x84\x03\x6c\xae\x57\xb3\xff\xef\x63\xde\xda\xa3\x76\xf0\xf7\xed\xb6\x29\xca\xa2\xa8\x2a\xf8\x22\x18\x1e\xb9\x09\xde\xb2\x46\xc0\xba\xa6\xa0\x11\xb4\x5b\xb0\xfe\x8a\x40\xac\x56\x08\x6a\xef\x1c\xd5\x6a\x3d\x83\x3f\x02\xcd\x97\x76\x10\x3d\x68\x87\x0a\x98\x00\x23\x69\x3a\xee\x6d\xd3\x38\x3a\xa3\x50\x84\x1a\x19\x0e\x04\x67\xc1\x10\xa8\x01\x14\x3f\x70\x03\x74\x22\xb9\xac\xea\x60\x4b\xa6\x35\xbb\xcc\x21\xc6\x04\xe5\x7c\xdb\x5a\x6e\x01\xb9\x01\xcb\x51\x65\xe8\x89\x15\x13\x83\x72\x97\x77\xbd\x76\x24\x71\x41\x8e\x94\x09\x9e\xc8\x5d\xe6\x2e\xd1\xf7\x94\xb0\xe8\x4d\x23\x37\xc0\x5e\xe7\xbb\x53\xd7\xb7\x73\xa1\xef\x83\x95\xdc\x77\xd0\x2e\x69\xaf\x51\x13\xed\xcc\xab\x34\x09\xed\xd9\x2b\x8d\x9a\x93\x53\x47\xcb\xe8\xd6\x4a\x66\x3e\x67\xeb\x5c\x52\x9e\x8a\xfc\xa0\x24\xbd\x8f\xba\x2a\x4c\x50\x5b\x6b\xc8\x00\x86\xe0\x2c\x35\x70\xb4\x12\xb5\x2c\x8e\x03\xd7\xf7\xa3\xd9\x5a\x86\x70\x30\xcb\xba\xbc\x5b\xc1\xb5\x28\x1e\xaa\x0a\xf6\x18\x23\xe0\x9a\xca\xc5\x0f\x70\x46\xd6\xa5\x83\xfa\xc9\xf9\x59\xb1\xc9\x37\x7d\x48\xb6\xa2\x73\x17\x08\x09\xc4\xf2\xca\x92\xc3\x05\x18\xfb\x49\xf1\x82\xa8\x3e\x69\xa3\xd7\xda\x0d\x0d\x35\x19\x25\x79\x99\xff\x58\x36\x89\xfe\xbf\xce\x3d\xbe\xa6\x48\x6d\x93\x97\x4f\x0b\xad\x1d\x6c\x5e\x14\x75\x88\x9b\x1d\x6c\xf6\x96\xdb\x4d\xb9\x12\x60\x19\x10\xe2\xa9\x36\x9f\xf0\x40\x8e\x9a\xa7\x3f\x97\xf3\xb9\xa3\x48\x77\x21\x6c\x49\xb3\xb2\x74\xa7\xa3\x95\xb8\xac\x0c\x73\xe6\xad\x8c\x03\x00\x94\x36\x67\x0d\xce\x1d\xf1\xdc\x6b\x46\xb6\x4b\xa2\x87\x38\x32\x38\x8b\x55\x82\x96\x98\xc4\xd6\xd0\x93\xa6\x9f\x16\x53\xc0\x52\x8e\xd6\x34\xb2\x85\x35\x72\xc6\x12\xca\xaf\x74\xcd\x67\xa4\x73\xf4\x02\x47\x21\x1a\x5b\xb6\x56\xbb\xe1\x60\x6a\xdf\x57\x4a\xd8\x3b\xcb\x5a\x1d\x50\x3c\x57\x5f\xe9\x15\xfb\xe0\xa8\x5a\xb5\xa8\xdc\xe8\xda\x6a\xcb\xb4\x3e\x43\x4e\xd5\xf1\xfd\x8c\x26\x9f\xa7\x51\x91\x88\x97\xff\xfd\xc0\x4a\xb2\x8d\x8a\x1a\x9b\x69\x55\xfe\x72\x6e\x1f\xfc\x39\x19\x91\x9c\xba\xdc\x07\x30\xed\x42\xb4\xdc\x3a\x7a\x37\x23\xcb\xe6\x71\x24\x34\xe7\x18\xfe\x81\xfb\x9c\x6c\x7f\xae\x49\x0d\x85\x74\x10\x06\xcb\xc5\xad\x78\x7b\x2b\x2f\xe3\x07\x6b\x7a\x29\xd7\xab\x99\x36\xcc\x33\xf6\x74\xbb\xa5\x15\x49\xf9\x9b\x33\xb8\xde\x43\xff\x08\x00\x00\xff\xff\x21\x7f\x7f\xa9\x56\x05\x00\x00")

func serviceMiddlewaresGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_serviceMiddlewaresGoTmpl,
		"service/middlewares.go.tmpl",
	)
}

func serviceMiddlewaresGoTmpl() (*asset, error) {
	bytes, err := serviceMiddlewaresGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service/middlewares.go.tmpl", size: 1366, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf6, 0xcd, 0xad, 0x54, 0x2f, 0xb, 0xba, 0x25, 0x8c, 0xe1, 0x4e, 0xad, 0x15, 0x25, 0x1, 0xd5, 0xaa, 0xdf, 0x61, 0x67, 0x97, 0x14, 0xa9, 0x35, 0xe3, 0x62, 0xcf, 0x4, 0xaf, 0xad, 0x1f, 0x5c}}
	return a, nil
}

var _serviceServiceGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xdd\x6e\x13\x31\x10\x85\xaf\x3d\x4f\x71\x14\xad\xd0\x6e\x95\xba\xf7\x48\xdc\xc0\x05\x42\x82\xaa\x82\xf2\x00\xce\x66\xda\x58\x24\xb6\xb1\x27\x49\xab\x91\x9f\x89\x87\xe0\xc5\x90\xf3\x53\x16\x51\x29\x57\xbb\x33\xfe\xce\xf1\xf1\x4c\x72\xe3\x0f\xf7\xc8\x28\x9c\x77\x7e\x64\x22\xbf\x49\x31\x0b\x7a\x32\xb3\x31\x06\xe1\x27\x99\x11\x99\xb4\xc0\x4c\xd5\xde\xbd\xff\x74\x38\xbe\x73\xb2\xc2\x75\xad\x33\x1a\x88\x6e\x6e\x70\xcb\xfb\x6f\x47\x03\x64\x96\x6d\x0e\x05\x0e\xc1\xfd\xfe\xb5\xe3\x39\x8a\x38\xe1\x35\x97\x02\xbf\x49\x6b\xde\x70\x10\x27\x3e\x06\xc4\x07\x9c\x54\x96\x1e\xb6\x61\x9c\xd8\xf4\x03\xd2\xc2\xaa\x7e\x8c\xb7\x6e\xc3\xb0\x67\xae\x55\xb5\xb6\x8a\x33\x94\xcc\xf1\x36\xbc\x51\xbd\x8f\x9f\xe3\x9e\xf3\x6b\xa8\x1f\x59\x2b\x55\x22\x79\x4e\x8c\x4b\x28\x8a\xe4\xed\x28\xcd\x3d\x2d\xec\xf7\xf0\x12\x9a\x97\xaa\xaf\x06\x69\xd6\xaa\x7b\x2f\x2b\x74\xc2\x78\xfb\x0e\x16\xb5\x92\x51\xcd\x2e\x3c\x32\x3a\xdf\x7a\x9d\xf0\x8b\xfa\x0b\xcb\x2a\x2e\x4b\x83\xcc\xe1\xe5\x7d\xc1\xd5\xdf\x60\x53\xf4\x9f\x6c\x03\x54\x3b\x7f\xea\xf5\xa3\x3c\xe1\xb4\x23\xfb\xe1\xf8\x9d\xc3\x07\x5c\x4d\x47\xd7\x79\xfb\x95\x7f\x6e\xb9\xc8\xfd\x73\x3a\xdb\x0d\xe8\xff\x87\x4a\x8a\xa1\xf0\x84\x9a\x83\x73\x8e\x79\x50\x32\xc6\xec\x5c\x46\xe6\x92\x70\x59\xd7\xf0\xf3\x62\x9a\x64\x8e\xe0\xd7\x64\xcc\x61\x24\x1c\x96\xb5\x92\xea\x35\x8e\x7f\x7f\x02\x00\x00\xff\xff\x60\xdc\xa8\xa2\x81\x02\x00\x00")

func serviceServiceGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_serviceServiceGoTmpl,
		"service/service.go.tmpl",
	)
}

func serviceServiceGoTmpl() (*asset, error) {
	bytes, err := serviceServiceGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service/service.go.tmpl", size: 641, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x76, 0x28, 0xb2, 0x87, 0xa6, 0x30, 0x32, 0xbe, 0x7a, 0x63, 0x9c, 0xc5, 0x78, 0x32, 0x2d, 0x1, 0xf, 0xd7, 0xec, 0x85, 0xce, 0xbf, 0x43, 0x8, 0x87, 0x9c, 0x43, 0xc0, 0x17, 0xd0, 0x31, 0x1d}}
	return a, nil
}

var _serviceService_methodsGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\xb1\x4e\x03\x31\x0c\x86\xe7\xdc\x53\xfc\xc3\x09\xdd\x55\x47\x1e\x00\x89\x89\x81\x05\x18\xa0\x2f\x70\xa4\x86\x46\x02\x27\x38\xbe\xb6\xc8\xca\xbb\xa3\xf4\x3a\x20\x16\x26\xdb\xbf\xbf\x6f\xf8\xcd\x70\x8c\xba\x47\xaf\xb8\xb9\x85\xaf\xb5\x73\x66\x32\xf3\x3b\xa1\x8f\xe7\xe8\x91\x74\x9f\x76\xa5\x7d\xdc\xdb\xc2\x01\x43\xc1\xc6\x6c\x9b\x1e\xd2\x91\x04\xbd\xfa\x17\x92\x43\x0c\xf4\x34\x7f\x52\xad\x97\x63\x84\x99\x5f\x93\x21\xe8\x09\x21\xb1\xd2\x49\xfd\xdd\x3a\x27\x44\xc6\x26\xbf\x7a\xb3\xfb\xd4\x30\xf8\x67\xfa\x5a\xa8\xe8\xf6\x3b\xd3\x45\x1c\x31\xfc\x45\x4a\x4e\x5c\xe8\x17\x33\x81\x44\x92\x8c\xd6\x39\xe7\x0e\xb3\x40\xa8\x64\xfc\x67\x35\x58\x48\x17\x61\x5c\x35\x61\x02\xc7\x8f\xce\xb9\x73\x7b\xe2\x5d\xad\x9d\xd9\x35\xd6\xed\x27\x00\x00\xff\xff\xcb\x00\x84\xc4\x23\x01\x00\x00")

func serviceService_methodsGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_serviceService_methodsGoTmpl,
		"service/service_methods.go.tmpl",
	)
}

func serviceService_methodsGoTmpl() (*asset, error) {
	bytes, err := serviceService_methodsGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service/service_methods.go.tmpl", size: 291, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdc, 0xf6, 0x45, 0xde, 0x10, 0x2e, 0x4f, 0x2f, 0xf0, 0xf, 0x4, 0x74, 0x6b, 0x36, 0xd4, 0x4b, 0x2e, 0xcf, 0xbf, 0x1f, 0x38, 0x37, 0x9f, 0x25, 0x32, 0x4, 0xef, 0x94, 0xc0, 0x26, 0x22, 0x4b}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"baron/NAME.pb.baron.go.tmpl":     baronNamePbBaronGoTmpl,
	"cmd/NAME/main.go.tmpl":           cmdNameMainGoTmpl,
	"cmd/NAME-client/main.go.tmpl":    cmdNameClientMainGoTmpl,
	"server/server.go.tmpl":           serverServerGoTmpl,
	"service/hooks.go.tmpl":           serviceHooksGoTmpl,
	"service/middlewares.go.tmpl":     serviceMiddlewaresGoTmpl,
	"service/service.go.tmpl":         serviceServiceGoTmpl,
	"service/service_methods.go.tmpl": serviceService_methodsGoTmpl,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"baron": &bintree{nil, map[string]*bintree{
		"NAME.pb.baron.go.tmpl": &bintree{baronNamePbBaronGoTmpl, map[string]*bintree{}},
	}},
	"cmd": &bintree{nil, map[string]*bintree{
		"NAME": &bintree{nil, map[string]*bintree{
			"main.go.tmpl": &bintree{cmdNameMainGoTmpl, map[string]*bintree{}},
		}},
		"NAME-client": &bintree{nil, map[string]*bintree{
			"main.go.tmpl": &bintree{cmdNameClientMainGoTmpl, map[string]*bintree{}},
		}},
	}},
	"server": &bintree{nil, map[string]*bintree{
		"server.go.tmpl": &bintree{serverServerGoTmpl, map[string]*bintree{}},
	}},
	"service": &bintree{nil, map[string]*bintree{
		"hooks.go.tmpl":           &bintree{serviceHooksGoTmpl, map[string]*bintree{}},
		"middlewares.go.tmpl":     &bintree{serviceMiddlewaresGoTmpl, map[string]*bintree{}},
		"service.go.tmpl":         &bintree{serviceServiceGoTmpl, map[string]*bintree{}},
		"service_methods.go.tmpl": &bintree{serviceService_methodsGoTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
