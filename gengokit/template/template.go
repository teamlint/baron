// Code generated by go-bindata. DO NOT EDIT.
// sources:
// NAME-service/baron/NAME_baron.pb.gotemplate (25.895kB)
// NAME-service/cmd/NAME/main.gotemplate (1.386kB)
// NAME-service/cmd/NAME-client/main.gotemplate (2.923kB)
// NAME-service/server/server.gotemplate (3.16kB)
// NAME-service/service/hooks.gotemplate (62B)
// NAME-service/service/middlewares.gotemplate (71B)
// NAME-service/service/service.gotemplate (53B)

package template

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _baronName_baronPbGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\xef\x8e\xdb\x38\x92\xff\x6c\x3f\x45\x8d\x30\x93\x58\x39\xb7\x9c\x3b\xe0\x0e\x7b\x1d\xf4\x01\x49\x27\x33\x93\xdd\x74\x27\x9b\x74\x66\x80\x0b\x82\x2c\x6d\xd1\x36\xb7\x65\x51\x11\xa5\x76\xf7\xfa\xfa\xdd\x0f\x55\x45\x52\x94\x2d\xd9\xee\xcc\xec\x61\x71\xd8\x01\xee\xd2\x96\xc8\x62\x91\x2c\x56\xfd\xea\x0f\xb5\x93\x09\x9c\xeb\x54\xc2\x42\xe6\xb2\x14\x95\x4c\x61\x7a\x07\x53\x51\xea\x3c\x81\x97\x6f\xe1\xf2\xed\x15\xbc\x7a\xf9\xfa\x2a\x19\x4e\x26\xf0\x5e\x96\x75\x9e\xab\x7c\xc1\x0d\x60\xad\xb2\x0c\xf4\x8d\x2c\xd7\xa5\xaa\x24\x54\x4b\x65\x60\xae\x32\x49\x8d\x7f\x91\xa5\x51\x3a\x3f\x85\xcd\x26\xb1\x7f\xdf\xdf\x07\x2f\xe0\xa5\xa8\x64\xf8\x16\x7f\xdf\xdf\x0f\x87\x85\x98\x5d\x8b\x85\xc4\x37\xef\xf8\xcf\x4b\xb1\xa2\x37\x93\x09\x5c\xb9\x31\x60\xa6\xf3\x4a\xa8\xdc\xc0\x4a\x56\x4b\x9d\x1a\xa8\x34\xac\xc4\xb5\x04\x95\xa7\xea\x46\xa5\xb5\xc8\x40\xe6\x69\xa1\x55\x5e\x19\x98\x97\x7a\x05\x46\x96\x37\x6a\x26\xcd\x18\x29\x95\xf2\x6b\x2d\x4d\x05\x22\x4f\xa1\x94\xa6\xd0\xb9\x91\x50\xdd\x15\x92\x28\x61\x53\x9c\x91\x36\xb2\xa1\x32\x06\x61\x60\x2d\xb3\x0c\xff\x95\xf9\x4c\xa7\xb2\x34\x48\x00\xe9\xa5\xd2\xfe\x9e\xeb\xd2\x76\x24\x6a\x63\x7a\x20\x70\xa5\xe6\xa0\xeb\x12\x4c\x5d\x14\xba\xc4\x95\xae\x4a\x91\x1b\xfc\x1b\x87\x53\x22\x53\x7f\x13\x95\xd2\x39\x52\x9b\xeb\x72\x25\x2a\x93\x0c\x87\x6a\x45\x2d\x46\xc3\x41\x34\xbd\xab\xa4\x89\x86\x83\x08\xe7\x2e\x6f\x2b\xfc\x93\xd8\x50\xf9\x62\xf2\x57\xa3\x73\x7c\x30\x5f\xd1\x73\xa5\xf9\xff\x4f\x94\xae\x2b\x95\xe1\x8f\x5c\x56\x93\x65\x55\x15\xee\xef\xba\xa4\xc7\xa6\x2a\x67\x3a\xbf\xb1\x7f\xaa\x7c\x61\xa2\xe1\x70\x10\x2d\x54\xb5\xac\xa7\xc9\x4c\xaf\x26\x0b\x7d\x72\xad\xaa\x09\xfe\x9f\x5b\x8b\x68\xbb\x45\x26\xf2\xc5\xa4\x28\x75\xa5\xa7\xf5\x9c\x98\x29\xa6\x07\x1a\xd1\x1f\x3b\x6d\x4a\x95\x65\x62\xb2\xaa\x6f\xb7\xde\x14\xd7\x8b\x89\x2c\x4b\x5d\xe2\x0a\x6c\x36\x6a\x0e\xf2\x2b\x24\xe7\x3a\x9f\xab\x45\x72\xe5\x57\x32\x12\x59\x16\x41\x94\x8b\xca\x44\x70\x7f\xdf\xa6\x81\x4f\x4f\x94\xa6\x7f\x93\x85\x26\x42\x32\x4f\xb1\xd9\x41\x8a\x8b\xb2\x98\x39\x8a\x5a\x2f\x32\x99\xf0\x7c\x12\x5d\x2e\x26\xf4\xb2\xf7\xcd\x64\x25\x2b\x91\x8a\x4a\x7c\xe3\x80\xf8\x57\x23\x2b\x3d\x3b\xe3\x1b\x38\x66\xfc\x48\xb8\xe7\x0f\xe8\x6e\x45\xe4\x01\x4b\x8c\x7f\x3d\x60\x00\xea\xd8\xf0\x17\x0f\x87\xc3\x1b\x51\xa2\x84\x7f\x81\x33\x98\xaf\xaa\xe4\x43\x51\xaa\xbc\xe2\xdf\x24\xf4\xc9\xb9\x5e\x15\xa2\x94\xfc\xc8\x4a\x6c\xf2\xbc\xd2\x8a\x9f\xb4\xa6\x98\x5c\xca\xf5\x07\x3c\xbf\x25\xbf\xe4\x13\x90\x5c\xea\xe2\x3c\xd3\xa6\x79\x9a\x9c\xeb\xe2\x8e\x7f\xb0\x60\x25\xbf\x96\xa2\x40\x7e\x26\x4f\x8e\xfa\x0f\x5e\x79\xfd\x72\x5c\x07\xfc\x6f\x42\x7a\xec\x75\x0e\x82\x95\x4c\x39\x06\x55\x3d\x36\x50\x1b\x39\xaf\x33\x52\x16\xf3\x3a\x9f\xa1\x22\x30\x50\x2d\x45\x05\xb9\x44\x5d\xa1\x41\x17\xa4\xa1\x41\x63\xdf\x42\x96\x27\xee\x30\x22\xc1\xa9\x30\xca\x24\xf0\xa3\x2e\x41\xde\x8a\x55\x91\xc9\x31\xdc\xe9\x1a\x56\x6a\xb1\xac\xa0\x10\x06\x15\x55\xc0\x70\xa5\x41\xf8\x81\x78\x9c\xa2\xd4\x69\x3d\x93\x06\xc9\x89\x9c\xd6\x34\xf9\x59\xe4\x69\x86\x3c\xae\x55\xb5\x04\x29\x66\x4b\xab\x6f\x61\xe4\x46\x8f\x61\xad\x4a\x99\x42\x5d\x30\x51\x53\xc8\x99\x9a\xab\x19\x14\xa2\x5a\x26\x30\x7a\x4d\xfc\x29\x83\xf4\xa7\x62\x9a\xdd\x81\x80\x95\x32\x15\xeb\x6a\x48\xa5\x51\x8b\x1c\xbb\xaa\xfc\x46\x5f\xa3\xd2\x95\xf0\x81\x35\xb5\xd7\xed\xc4\xa2\x44\x3a\xcd\x0c\x4c\x55\xd6\xb3\x0a\x49\xb8\x95\x4c\xe2\xe1\x64\xe2\x57\x77\x96\x29\x99\x57\xed\xd5\xad\x34\xcc\x74\x96\x49\xea\xe7\xcc\x44\x76\x87\xc6\x84\xc9\xc9\x34\x30\x1a\x2a\xc7\x09\x21\x41\xa3\xf2\x45\xc6\x0a\x9d\xd7\x4a\xe1\x0a\xaf\x24\xad\x64\xc0\xaf\xca\x2b\x59\xce\xc5\x4c\xf6\xed\x04\x12\xf3\x83\x75\x9b\xaa\x1a\x07\x83\xf6\x79\x44\x91\x3e\xb7\xf3\x99\xe9\xd5\x54\xe5\xb4\x4e\x2b\xcb\x62\xb0\xb1\x63\x6b\xd0\xaa\xba\xcc\x41\x55\x38\x63\x64\x70\x26\xb2\x4c\x96\x68\xb7\x84\x63\x36\x19\xd2\x74\x76\x16\x74\x33\x1c\x7c\xcc\xfd\xfc\x64\xba\xd9\x24\xae\x07\x1b\x62\x7b\xb6\x36\x9b\x52\xe4\x0b\x09\xdf\x2b\x38\x3d\x03\xdf\xe6\x82\xb7\x8c\x55\xdc\xf7\xca\xf6\x71\xa3\x00\x80\x9f\x6a\xe2\x1e\x0e\x9d\x2a\x60\x1b\xef\x39\x3a\x3c\x04\x0a\x30\x8c\x82\x49\xc4\x10\x0c\x3a\x9a\x55\xb7\x60\x6d\x25\xaa\x31\xfc\x77\x8c\x02\xf3\x64\xb3\xf9\x49\x63\x1b\xf8\x5e\x25\xef\x19\x08\x5c\xdd\x15\x6e\x82\x31\x8c\xb6\x5a\x30\x3c\x08\x9a\x8c\x59\x65\xc4\xb8\x5a\x0e\x3d\xd0\x33\x64\x54\x26\x1d\x33\x47\x66\x70\xf0\x78\x38\x40\xc5\x5a\x96\xf0\xdd\x19\xe4\x2a\x43\x0a\x03\xbb\x5f\xb9\xca\x88\xc8\x70\x70\x3f\x74\xcf\x1c\xf5\xe4\x20\x4f\xf1\x18\x09\x0c\xef\xfd\x72\xe2\x62\x5e\xe0\x31\x0b\x57\x94\x0e\xf2\xf7\x95\xa4\x15\xbd\xc7\xc6\x27\x10\xae\xf2\xf7\x95\xec\x5b\x68\xa4\xd5\x35\x33\x83\x8b\x1e\x74\x0b\xc5\x24\xde\xdd\x6e\x5e\x33\x9a\x1c\x92\xed\xde\x25\x07\xcf\xfc\x89\xda\xe0\xb6\x78\xa0\x16\x3c\xe6\x65\x6f\xb6\x63\x50\xca\xaf\x38\x11\x4b\x61\x67\xdd\x76\x76\x7b\x38\x18\xdc\xf8\xbd\x33\xc9\x96\x00\x11\x2b\xd8\x66\x77\xd7\x76\xb7\x0d\xf7\xcd\x3d\xbd\xe1\xed\x18\xdc\x0f\x79\x91\x79\x4f\xc2\xbd\x41\x73\xf3\x3c\xcb\x5e\xdd\xce\x64\x51\xc1\xba\x14\x85\x61\x15\xeb\x57\x6a\xae\x64\x96\x22\x70\xb4\x67\xb3\x39\xac\xb4\x8d\xa4\x9b\x3a\xd0\x59\x72\xa1\xd2\x34\x93\x6b\x51\x32\x16\xff\x68\x1c\x3a\x47\x28\x5a\x14\xd9\x1d\xaa\x18\x54\x9b\x15\x12\x5f\xf9\xd6\x64\x17\xe4\x8d\x2c\xef\xfc\xb6\xe1\x79\x41\x0d\x62\x9c\xd6\x98\x4c\xe0\x6d\x81\x56\x03\x35\xe7\x38\x50\x5c\x33\x91\xc3\x54\x92\xad\x91\x29\x76\x9b\xde\x41\x8e\xcb\x5e\x69\x7c\x2e\x6f\x67\x59\x9d\xca\x94\xb1\xf8\x54\x22\x0b\x38\xe7\x42\xa6\xc9\xce\x6a\x8c\x1a\x9e\xc6\x10\x7d\xa8\x44\x55\x9b\x68\x0c\xd1\x3b\x95\x2f\xa2\xd8\x9f\xfb\x27\xc1\xc1\xef\xeb\x0f\x1d\xab\x32\x6e\xb8\x49\x92\x84\x61\x2f\x09\x8f\xca\xed\xe3\xd3\x33\x58\x89\xe2\x13\xbf\xfa\xcc\xcb\xbf\xb9\xc7\x5d\xdf\x3e\x30\x5d\x9a\x6f\x30\x88\x02\x31\x8a\x4e\x61\x73\x3f\xb6\x5d\x2d\x28\xbb\x1f\x0e\x07\xb8\x1b\x5f\x90\x15\x12\x57\x22\xe9\xd9\xda\xb0\xc4\x7d\x19\x83\xbe\xc6\xd7\x8e\xb1\x4f\xf2\xf6\xf3\x33\xf8\x4e\x5f\xb3\x04\x16\x22\x57\xb3\x51\x83\x99\xe6\xa3\xe8\x95\x23\xe1\x77\xf0\xf1\x0f\xe6\x31\xa4\x5a\x1a\xc8\x75\x05\xf2\x56\x99\xea\x19\x18\x29\xc3\x8d\xf7\xb2\x43\xc0\x18\x99\x8a\x63\x2b\xcf\xa9\xcc\x64\x25\x47\x8e\x03\x7a\xd7\x4c\x40\xe5\xb3\x86\x7d\xbf\x7c\xc7\x2f\x94\x9a\x13\x89\xb3\x33\x68\x2d\x19\x4f\x6f\xd0\xa9\x4a\xe1\x2c\xe0\x7c\xd4\xd9\x04\x79\x27\xe6\x5b\x4b\xce\xc7\xee\x8d\x98\xca\x4c\xa6\x8d\x34\xb0\x23\xbb\x90\x95\x93\x5d\x94\x77\xbf\x7a\x24\xc2\xeb\xa5\xcc\xfd\x5b\x1d\x88\xab\x25\xc6\x52\x37\xe6\x53\x66\x0f\x42\xcd\x8d\x81\xbd\x63\xc1\x2e\xb6\x9a\x21\xa8\x29\xd5\x8c\x60\x56\x20\xa5\xeb\xa5\x9a\x2d\xa9\xab\x91\x79\x17\x0b\xd6\x92\xdb\xde\x0e\xc7\xe8\xd2\xda\xf1\xdd\x59\x91\x72\x65\x01\x1e\xef\x6a\xe1\x0e\xc5\x3c\xec\x9b\xd7\x37\xeb\xa6\x1d\xa6\xc6\x76\x9e\xb4\xe2\xa5\x9c\x49\x75\xc3\x88\x8f\xa6\xa8\xe7\xad\x79\x27\xf0\x41\x4a\x4f\x26\xa0\x42\x2f\x1c\x10\xf5\xe7\x1e\x19\x45\x89\x4c\x65\x25\x54\x46\xa0\xd1\x1d\x27\x72\xa9\x2d\xd8\x15\x99\xaa\xee\x92\x7d\x2a\xa4\x35\xf7\x50\x93\x3c\x78\x45\xff\xa9\x67\xfe\xff\xe8\x99\x56\xb7\x71\x37\xc8\xeb\x53\x3b\xc7\x3b\xfb\xc7\xba\x9e\x3f\xbd\x7f\x77\xce\x08\xeb\xc1\xbe\x27\xc2\xb8\xa0\xfb\x4a\x5c\x4b\xd3\x80\x81\xc6\x9e\x8b\x1b\xa1\x32\x31\xcd\x24\xbb\x0d\x8b\xf7\xef\xce\xa1\xc7\x19\x48\x1a\x80\xd8\x50\x1e\x35\xa4\x02\xf7\x44\x17\xec\xda\x26\x49\xd2\x8a\x6b\x24\xdc\x89\xa1\x45\xdc\x37\x10\x6e\x97\x09\x1a\x1a\xdc\xf0\x4f\x9f\xfb\x29\xe1\xf6\x76\xbd\x7d\x21\xe7\xba\x94\x23\xe4\xf6\xc2\x46\x67\xae\xb4\x45\x9f\xf1\x98\x00\x78\x7b\x9c\x33\x04\x4e\x32\x4f\x47\xad\xc7\x7e\x3e\x49\x92\xc4\xc3\xc1\x64\x02\x9b\x0d\x5c\xe9\x37\x7a\x2d\x4b\x68\xcd\x80\x22\x25\x16\x1a\x3e\x42\x8e\x98\x8f\x0d\xba\x49\x07\xa5\x77\xb3\x71\x34\xbd\xc8\x9d\x42\x7b\x5a\x3e\xe8\x31\x42\x19\x6c\x4e\x59\x87\x94\xa2\x8a\x18\xbc\xa4\x78\x25\xce\x3f\x68\x61\xd1\x31\x35\x78\x95\x77\x36\xb0\xbe\x0e\xb6\x68\xad\x44\x92\x24\xf8\x10\xd7\xae\xc3\xe6\x36\x13\xde\x76\x9d\x3d\x38\xef\xde\x6f\x0f\xf4\xd9\xca\x05\x74\xfe\x0e\xee\xea\xce\x22\x03\x6c\xad\xb2\x8d\x87\x04\x80\xde\xba\x59\x36\x50\x81\x9a\x2a\xe0\xb1\xd2\xcd\x74\x8f\x9f\xe9\x91\x6e\xaf\x81\x27\xcd\x50\x31\x84\x5e\xce\x3e\xff\x17\xdd\xa3\xdf\xd7\x01\xfe\x82\x44\x8b\x96\x0b\xb5\xb3\x92\x7c\xec\x50\x9a\x42\xa7\xea\x81\x9e\x70\xf1\x8d\x4e\xb0\x5d\x61\x16\xf9\xc3\xcb\x3b\x99\xc0\xbe\xd3\x01\x0a\xd5\x61\x3b\xde\x9a\x70\x07\xdb\xe2\x47\xdc\x1f\x8a\x13\xcd\x74\x7e\x23\x4b\x54\xa6\x74\x0a\x58\x85\xee\x8a\x99\xf3\x76\x29\x80\x56\x1b\x59\x9e\xa4\x7a\x25\x54\xbe\xaf\x71\x02\xef\x4a\xb5\x12\xa5\xca\xee\x5c\x78\x2b\x8c\x85\xb1\x90\xec\x9b\xc7\xe8\xcb\xae\x70\xe0\x5c\xde\xcb\xaf\x5b\x6e\xf7\xb6\xb7\xed\x03\x1f\xe4\x68\xdb\x3e\xc7\x38\xda\x7e\x27\xbf\xee\xd9\x26\x56\x3c\x47\x6d\xd3\x5e\x1d\xd5\xb9\x4f\xdc\xc3\x35\xe9\xdb\xa8\xc3\x5b\xe0\x12\x46\xba\xb1\x8c\x5d\xcd\x8a\xec\xee\xa8\x7d\xda\x3b\x91\xae\x8d\xea\x8a\x84\xec\xdb\x29\x53\x70\x4c\xe4\xe8\x60\x52\x2b\x00\xd5\xb5\x5b\x3f\xcb\xac\x90\xa5\x19\xf2\x04\x3a\x0d\x69\xb7\x02\x5a\xa5\xe0\x12\x22\xc9\xc5\xcb\x78\xbb\x01\xf2\x8b\x6a\xf4\x7a\x0c\x37\x0d\xe2\x5b\x79\xa8\x7a\xd3\x0a\xc1\x50\x4e\x50\xc2\xb5\xbc\xa3\xed\x4e\x11\x14\x4e\x75\xb5\xc4\x35\x76\xa3\xd8\x6c\x1a\x8c\xae\x63\xeb\x7e\x60\xd3\x2c\x83\x0c\xf7\xcb\x52\x11\xd6\xe9\xa2\x70\xeb\xb9\xc8\x75\xae\x66\x22\xfb\x59\x8a\x54\x96\x7f\x92\x77\xce\x37\xc1\x81\x8c\xb6\x41\xe0\xca\xba\x7a\x8e\xc4\x6c\x26\x5d\xec\x43\xaa\x6a\x29\x4b\x3b\x32\xbe\xc7\xa5\x38\xf3\x73\xfd\x55\x55\xcb\x5f\x44\x56\x4b\xd6\x86\x38\xd7\x4f\x4f\x3f\xc7\x07\x1b\xf6\x70\x37\xba\x8e\x1b\x0a\x16\xf5\xdb\xed\x9b\x55\xb7\x64\xa3\x1e\x80\x2b\x39\xd2\xfc\x60\x5c\x79\x29\xd7\x41\x6f\x1e\x9e\xb2\x0e\x36\x74\x04\x53\x31\xbb\xe6\x04\xb3\x3d\x33\x1c\xa2\xc7\xb9\xe6\x92\x7c\xb3\x04\x5e\x93\x7a\xb5\xc1\x7e\x2b\xae\x6a\xaa\xd0\x67\x73\x5b\x60\x63\xd9\x95\x86\x54\x89\x8c\x03\xde\x99\xa8\x64\x09\xb3\x4c\x1b\x39\xe6\x46\x0d\x4d\x16\xd0\x16\x77\x23\x7c\xcd\xe6\x33\xe1\x27\xe7\x3a\xcf\xf7\x80\x53\x6e\xe4\xc0\xe9\xa8\x07\x64\x84\x47\x0e\x11\xc2\x76\xac\x75\x10\x3c\x2d\xae\x17\x74\xfc\x6c\xc8\xb5\x9d\xea\x1e\xec\x7a\x35\xdd\x71\xd9\xc1\x8d\x28\xbb\x54\x8f\x77\x61\x76\x9d\xfc\xc1\xa6\x1b\x50\x06\x5e\xcf\x0e\xb2\xb4\xab\x46\xe2\x89\x0b\xe5\x3c\x4f\x3b\x89\xfb\xfb\xa4\x2b\x02\x1c\x8d\x77\x3c\xd4\x7d\xc8\xb2\x81\x9e\x3d\x56\x2b\x80\x9e\x07\xb4\x17\xbb\xc1\x03\xdd\x86\xa6\x7e\x0d\x46\xe4\x57\x12\x19\x8b\x53\xc3\xbc\xac\x55\x71\xee\x00\x79\xdf\xe5\x20\x54\x87\x13\x4b\x6a\x67\x4d\x4f\x01\x60\xdf\x36\x8d\x83\x74\xed\xbd\x53\xb6\x78\x02\x70\x0d\xc0\x9e\xa8\xdf\x0e\x5f\xf6\xd8\x45\x87\x5f\xf6\xdb\xc5\xfd\x96\xee\x58\xf8\x62\x6d\x50\x8f\x5d\x64\xa5\xb0\x1f\xbf\xf4\xdb\x45\x06\x23\xc8\xcc\x91\x86\x11\x9b\x7a\x10\x83\xe6\xfa\x41\xa6\xb1\xc8\xee\xba\x6c\x63\xb8\x6d\xbf\x1d\xce\xf4\xa3\x4e\x87\x66\xf6\xa2\xce\x23\xf1\xe4\x41\x2c\xb3\x17\x75\xb6\x76\x6d\xdf\x3c\xba\xc1\x4c\x57\xb2\x67\x3f\xea\x7c\x40\x7a\x67\x3f\xea\xb4\x5c\x90\x91\x35\x57\x3a\x04\x32\xbc\xe6\x5d\x96\x20\x58\x72\x9e\xf2\x1e\x2a\xa3\x6b\x79\x67\xe0\xd3\x67\x17\xfe\x3b\x40\xef\xa8\xf4\xd8\x2a\x85\x27\x87\x40\x14\xd9\x86\x42\xa8\xb2\x19\x7c\x38\x70\xc1\xc0\xeb\x06\x5a\x11\x7b\x1b\x1b\x23\xbb\x71\x81\xc0\x59\x75\x9b\x30\xf0\xb8\x8e\x13\x1b\xf4\x8c\x9f\x81\x0b\x08\x0e\x98\xb0\x8f\x8a\xd0\x4f\x06\x32\x3e\x08\x86\x4a\x14\x69\x72\xd3\x10\xb5\x3d\x59\xa5\x70\xd6\xa0\xc0\x3f\x6a\x95\x8f\x9e\xac\xd2\x71\xf3\xe8\x1d\xf6\x61\xaa\x49\x92\xd8\x18\x61\xe3\x1f\x22\xaa\xb1\x91\x35\xde\xc9\x63\xf1\xcd\xcf\x57\x57\xef\xbe\x25\x6e\x46\x49\x7b\x5e\xe5\x9c\xc4\x0b\xce\x20\x12\x45\x91\xa9\x19\x15\x6d\x51\xc9\xd3\x33\x98\x2d\x45\x69\x64\x75\x56\x57\xf3\x93\x3f\x44\x3e\xdc\x86\xa3\xda\xd0\x41\x03\x8c\x60\x69\x9f\xd0\x99\x3d\x1c\x86\x43\x62\x3a\x87\xa2\x94\xa9\x9c\xab\x5c\xa6\x54\x61\x61\x82\xd8\x5b\x30\xcc\xc1\xe0\x5b\xbb\x64\xa6\x1d\x7c\x0b\x4b\x3f\x1c\x96\x51\x73\x48\x88\x3e\xc1\xfe\x56\x74\xaa\x23\x20\xd7\x4f\x9d\xf6\xbf\xeb\xb5\x8d\xc8\xf1\x18\x88\x6b\x4d\x2b\x20\xd7\xdd\xe9\x15\xaa\x05\x56\x37\xe5\x48\x06\x3f\xfa\xbb\x3c\x9f\x57\xb2\x1c\x6d\xbf\xa9\xce\x9b\xad\x1d\x05\xdb\x1c\x13\xa1\xdd\x59\x1e\x15\x0e\xb4\x51\x22\x0a\xfd\xad\x28\xd4\x5f\xdf\x22\x9c\x7a\xaf\x6b\xe4\x21\x1e\x06\x88\xc2\x66\x33\xd0\x36\xf4\x2c\xb3\x6f\x3a\x55\x79\xaa\xf2\x05\xa1\x42\xee\x96\xbc\xe0\x47\x36\xd6\xbd\x72\xfd\x28\x68\x6d\x9b\x27\xbf\xc8\x72\x0a\xff\x03\x57\xfa\x63\x51\xc8\xf2\xfe\x3e\x8a\x93\x77\xa2\x5a\xb6\xda\xe0\x83\x2b\xb9\x2a\x32\x2a\xc6\x8c\x62\x27\x05\xa3\x9e\x0a\xab\x11\x47\xcf\xc3\x68\xa3\xe5\xa8\x23\xe4\x68\x71\x1d\x4e\x2f\x18\x92\xb2\x2d\x6d\xfc\x67\x11\x22\x36\xfc\x89\x93\x66\x2d\xf0\xd7\x19\x78\x1c\x90\x8e\x08\x42\x8f\xc1\x9f\x56\x69\xac\x5c\x81\x49\x20\x27\x9c\x9d\xe3\x50\x24\xc9\x8f\xcb\xb3\xb9\x11\x7f\xc5\xf7\xe5\x18\xbd\x96\x54\xce\x45\x9d\x55\x68\xed\x58\x40\x90\x18\x85\x25\xf5\x1c\xb6\x75\xc1\x18\x04\x4c\x75\x4a\x5e\x0b\xfe\x66\xd8\x8f\xee\x63\x44\xe3\x44\xde\xe3\xbc\x41\x2d\x8b\xa4\xe8\x79\x42\xdc\x8d\x62\xf6\x6b\x04\x18\xca\x7d\x03\x32\x8b\xa4\xfe\xfd\xe9\xd3\x04\x5e\xcf\x03\x7e\x83\x78\x2a\x9f\x1b\x59\x52\x81\x2b\xb6\x28\x4a\x7d\xa3\xd0\x25\x5e\xf2\x89\xe2\xbc\xdb\x54\x32\xb7\x9c\x9e\xc4\x76\x0d\x26\x0b\x49\x53\xdd\x56\x43\x1d\x67\x91\x5c\x88\xd2\x2c\x05\x95\x84\x39\xfe\x57\xfc\x08\x25\xd2\xd4\xb3\x99\x94\xa9\x61\x1f\xec\x8f\x1f\xde\x5e\xda\x3a\xd9\xd4\x15\xb5\xfa\x1c\x1f\xf1\xee\xd8\xa9\x8d\x4c\xfb\xa7\xc5\xe9\xff\x73\xdc\xae\xb1\x73\x0d\xfd\xcc\x9a\x97\x2d\x6a\xa0\x72\x53\x49\x91\xba\x35\x63\x25\x19\x6a\x88\x2e\x20\xe2\x2b\x49\xc6\xb0\x66\x2d\xd8\x16\x03\x02\x20\xb8\xab\x63\xf8\x82\xc7\x2f\x5c\x12\x56\x3f\xbf\x52\x45\x43\xb9\xa1\x5d\x3c\x45\x62\x6e\x43\xef\x39\xde\xb9\x6a\x16\x90\x0d\x2d\x36\x19\xb5\xd7\xb6\xb1\xb3\x8a\x85\xe7\x05\x0d\x69\xbb\xbe\xe2\x30\xab\x27\xe4\xfa\xe1\x72\x8f\xe2\x67\x61\xb3\xb3\xc0\xe6\x92\x30\x9e\x79\x72\x2e\x50\x30\x58\x27\x2c\x36\xa3\x18\xd5\xe0\x28\xb2\x8a\xf0\x04\xb5\x5f\x34\x0e\x4d\x1e\x4f\x60\xe9\x84\x2c\xe4\xbf\xad\x1e\x9c\x1c\x36\xf3\xa0\x80\x4e\x03\x39\x1c\x0d\xdb\xd2\x8c\xb8\x72\x67\x9b\x97\xeb\x71\x47\xcb\xe4\x27\x7c\x13\xfb\x48\xc7\x80\x8e\xc6\x29\x17\x81\x26\x2c\x0e\xaf\x11\x3a\xe6\x22\x0b\x8c\x04\xf1\x6e\x66\x7b\xb8\x0e\xc4\xac\x61\x9c\x88\x9f\x81\x99\x05\xaf\xad\xfb\xb8\x4e\x48\x28\x2c\xc7\xd8\x30\xf6\x0f\x47\xb8\xda\x31\xea\x9b\x46\xee\x58\xfb\x95\xa3\x69\x3d\x87\x4f\x9f\xa7\x77\x95\x8c\xad\xac\x6f\xd8\x8f\x5f\x43\x28\x42\x3e\x3a\xee\xe4\xec\x63\x6e\x77\x16\x29\x8c\xe1\xd1\x3a\x7e\xb6\x1d\x3d\x67\x94\x62\xd4\xdf\x90\xe7\x3f\xfc\xeb\x7f\xfe\x07\x8b\x50\x26\x73\xec\x13\xc3\x7f\xf1\x3b\x96\x87\x7a\x0e\x67\x30\xad\xe7\x9f\x4e\xf1\xe1\xe7\x76\xf5\xd2\x7c\x55\xb1\xe0\xce\x47\x91\x8f\x35\x92\x08\x3d\xfe\xc1\x3c\x3e\x85\x99\xc8\x73\x5d\x41\x81\x70\x07\x72\x9d\x9f\x90\x8e\x73\x40\x1e\x1b\x46\x63\x24\x1e\xb7\x82\x51\xb6\xce\xf6\x52\xae\x47\x6b\x26\x4f\x6b\x44\x3a\x34\x9c\x7b\x90\xdc\xa1\x56\xc0\xf8\x13\xfe\x82\xa3\x9c\x5a\x05\xfa\x17\xab\xce\x71\x17\x6d\x2b\x51\x29\x33\x57\x56\x9d\x3b\x29\x24\x45\x15\x6c\x6e\xe3\x66\x18\x50\x54\x6d\xef\xae\x1c\x1c\x53\x1a\x6d\xcb\x2d\x82\x41\x3d\xab\xac\x34\x07\xa6\xd1\x48\x14\x6f\x71\xba\x17\x20\x4c\xf5\x7b\x48\xee\x64\x64\xb4\x6c\x88\xc6\x10\x4a\x1b\xb4\x8b\xe6\x96\x49\x33\x42\x4f\xef\xe6\x58\x31\x94\xa3\x9f\x2d\x12\x96\xa9\xe1\xde\x04\xc9\x41\x4c\x72\x0c\x24\xe1\xa8\x88\x0f\x4a\xec\xb5\xfe\xdb\x4e\x2e\x71\xdf\x9d\x5a\x21\x92\x7c\xe9\x02\xfb\xa0\xf2\x3b\xb1\xb6\x26\xf4\x5f\x1b\x60\x53\xa2\x7f\xba\xe5\xf2\x52\x29\x1a\xc9\xca\xd5\xd5\x3b\xf7\x94\x28\xa3\x04\x1f\x8a\xdc\x0f\x82\x10\xc5\xde\x69\x75\xfa\xbc\xf0\xc4\x1a\x18\x6a\xd2\xef\xef\x0e\x52\x39\x47\xb7\x21\x41\xad\x9d\x50\x09\xfb\x28\xb6\xde\x1d\xfa\xc2\x8d\xfb\xbb\x35\xd7\xc0\x17\x26\x58\x48\x5a\xc3\x2a\x14\x5b\x13\xff\x5e\x8a\xf4\x79\x96\x8d\x98\xf8\x71\x55\x8e\xae\x50\x7e\x8e\x06\x6f\x0c\x91\xd5\x04\x25\x1a\x5b\x07\x78\x70\x66\x6e\x39\x23\x57\xdf\xd1\x56\x44\x4f\x7d\xfc\xfe\x79\x96\xe9\xf5\xc7\xfc\x3a\xd7\xeb\xfc\x47\x25\xb3\xd4\x80\xa9\x74\xc1\x87\xb8\xce\xbd\x9d\xe3\xdd\x9a\x0b\x45\x50\x43\xcd\x1b\x8c\xe1\xef\x02\xd5\x4c\x85\x6b\x93\x4c\x82\x03\x78\x02\x48\xc1\xaa\xd2\x62\xda\x28\x53\x4a\xc1\x0f\x06\x83\x5d\x2e\x4e\xa1\x2a\x6b\x46\x9c\xae\x82\x04\x97\xe6\x0c\x42\x92\xa1\x56\xa6\x9b\x0a\x97\x72\xfd\xa2\x9e\xcf\x59\xcf\xc7\x63\x78\x54\xca\xaf\xbb\x8a\xba\x5b\x55\xf7\x2b\xeb\x4e\x75\x6d\xf9\x6a\x6d\x90\x57\x02\x9b\x8e\xad\x0a\xd5\xf3\x43\xf5\x38\x23\xef\x41\x60\x64\x5f\x88\xb4\x05\xda\x07\xc8\x40\xc3\x96\x8f\x00\xa0\x97\xfa\x4e\x94\x62\x65\x9c\x0b\xf4\x8b\x28\xcd\xa8\x44\xb9\xf8\x02\x67\xd0\xbc\xc7\xd6\x5f\x6b\x59\xde\x35\xcd\xcb\xe4\xe3\xfb\x37\xc9\x9f\xf1\xe1\xc8\x75\x08\x9a\x0c\x43\xbf\x88\x2b\xd2\x50\x05\xb9\x93\xc0\x1b\xe9\x02\xea\x6a\x0e\xb9\x6b\x96\xbc\xd1\x0c\xd6\x21\xa2\x49\x72\x9b\xc1\x66\x63\x5f\xff\x24\x73\x1a\x34\x90\x93\xfb\x9e\x90\xf1\x7e\x16\xde\xe6\x52\xcf\x77\xf8\x90\x5f\x77\xf9\xa0\x69\xfd\x16\x46\xbc\x24\x3c\xa2\x50\x97\x4b\x9f\x3b\x2f\xf4\x64\xab\xfc\xb8\xd7\xc9\xea\xd4\xc2\x7d\x89\x53\xd6\xb9\xc6\x79\x1c\x1e\x2b\x08\xc3\x67\x73\xcb\xc3\x60\x7f\xab\x7c\x40\x52\xb4\x83\xc1\x2e\x7d\xda\x89\xd7\xfb\xf2\xa4\x1e\x76\x75\xea\x86\x8b\x50\x33\xbc\x5a\xa9\xea\x25\x3b\x7e\x81\x46\x78\x5b\x2a\xca\x7c\x34\x4f\x5e\xe5\xf5\xca\x3c\x47\xe4\x69\x4e\xc1\x3d\x0d\xa0\x4f\xa0\x32\x9c\xc3\xb0\x1e\x07\x09\x59\xba\x0d\x97\x5c\x48\x63\xc4\x42\xc6\xf1\x30\x4c\xb2\x36\x37\x82\xac\xb5\xef\x0a\x92\xf4\x54\x7b\x6c\x9b\x99\xbe\x6c\x6b\x03\xce\xcb\x00\x2f\xec\xcd\xaf\x92\x96\xdf\xc9\xad\x2e\x85\x81\xa5\x48\xb9\x6f\x5f\x36\x95\x72\x78\x29\x68\xba\xa3\xa2\xf2\xe0\x2a\x64\x70\xc5\x12\x5d\x3d\xa2\x62\xef\x25\x26\xce\xaa\xfb\x24\x2e\x4a\xd6\xa2\x2c\x66\x3b\xa9\xde\x56\xb6\x96\x89\xb4\x53\xb6\x7b\x93\xb5\x87\x72\xb5\x6e\x85\x02\x57\x64\x6f\x97\x2d\xfe\x29\x5b\xbb\x4b\x03\x85\x05\x97\xbb\xce\x65\x73\x89\x6a\xb6\xc4\x3d\x49\xe8\x8d\xc8\x8c\xc6\x2d\xb0\x07\x8a\x55\x74\x5d\x66\xc3\xfd\xa3\x3b\xb5\x7f\x52\x97\x59\x34\xb6\x1a\xf5\x9d\xa8\x96\xf1\xa1\x8e\x7e\x57\xa2\x31\x44\x28\x73\x78\xa2\xa3\xf8\x9b\x93\xcb\x48\xe2\xdb\x93\xcb\x41\xef\x26\x86\xda\x91\x5b\xce\x19\xcd\xb1\x2a\x81\x4c\xdd\xd0\x65\x87\xca\xae\xda\x4a\x57\x14\x40\x50\xb9\xa9\x44\x3e\x93\x09\xfc\x2a\x41\xde\x16\x7c\x27\x8c\x9f\xf1\x3d\xb1\x95\x64\xc4\xd1\x0c\x92\x2a\x33\xd3\x74\x3b\xc2\xdc\x99\x4a\xae\xc6\x28\x5c\x93\x09\x64\xea\x5a\x66\x3e\x3f\x4d\x61\x8e\x68\xa9\x4d\x75\x4a\x6b\xd7\x24\xa0\x9b\x19\x8c\xfc\x50\xae\x9c\xb8\x37\x34\xfb\xf0\xd4\xb3\x9a\xc3\x77\x4e\xe4\x7e\x16\xe6\x5d\x29\xe7\xea\xd6\x8f\x38\x86\x88\xae\x78\x32\xb8\xf4\x7c\x9c\xf1\xe3\xd3\xc9\x24\x82\x7f\xf1\x2b\x41\x06\xa4\xf6\xb0\xb1\x2e\x33\x44\x97\x46\x7a\x6a\x47\x17\x71\xa1\xe1\xae\x87\xf6\x5e\x29\x42\x8e\x0e\x97\xc2\x26\x50\xb9\xd8\x38\xba\xd4\xbc\x91\x41\xfc\x9a\xcb\xeb\x59\x06\x28\xda\x83\x84\xd6\xba\xbc\x1e\x03\xc7\xc4\x61\xea\xbc\x0e\x95\xc3\x9d\xae\x4b\x20\xbd\xca\x6f\x15\x2e\x61\x14\x87\xa1\xc1\x07\x06\x60\x11\x75\x76\xfb\x37\xf4\x96\x33\xfb\x81\x2f\xa4\xf2\x54\xde\xee\xf6\x78\xea\xfa\xd8\xf4\xfd\xb6\xdb\xb0\x2f\x7b\x8f\x23\x31\xdc\xda\xd3\xaf\xe3\x46\x6c\x90\xc2\xb7\x49\xf9\xde\xb8\xb0\x85\x73\x83\x99\x2e\xee\x3e\xbe\x7f\x33\xaa\xc7\x10\xb6\x7f\x21\x8c\x44\xf5\x71\x7f\x1f\x39\x54\x18\x04\x6c\x0f\x44\x76\xb7\x82\xc0\xad\x60\x71\x3b\xc8\xbb\x9d\xbe\x1f\x6c\x67\xf0\x1d\xd0\x0c\x02\xbd\xdd\xf1\xdf\xfd\xa9\xfc\xbd\xfb\xee\x53\xfa\xbf\xfb\xce\xf7\x45\xca\x6d\xa9\x40\xdf\xd6\x8e\xb7\xa1\x5f\x57\xbc\xbb\x29\x21\x20\xcd\xe3\xf6\x71\x2a\x8c\x84\x27\x78\x86\x3f\xbe\x7f\x33\x26\xdc\x0d\x2e\x29\xe9\x1e\xe3\xf9\xcd\x11\x17\x9c\x9e\xc1\x13\xec\xc0\x3f\xc9\x5e\x58\xac\xde\x94\x31\xe3\x1b\x0b\x54\xce\xab\x5b\x97\xfb\xfc\x80\x60\x73\x46\x85\xee\x75\x69\x63\x31\x04\x15\xec\xc1\xad\x34\x14\x75\x96\xf1\xad\x32\xb6\x73\x32\xe5\x2c\xa4\xae\xd1\x74\x3b\x2c\x69\xcd\x12\x07\xc2\xd9\xec\xad\x1c\x9e\x0c\x3d\x4c\xc4\x0a\x36\x9e\x91\x00\x5c\xea\xca\x5e\xd2\x45\x92\x48\x8b\x34\xc5\x52\xdc\x48\x70\x9f\x40\xd8\x0f\x49\x68\x9c\x29\xa5\xa3\xec\x3d\x35\xba\x92\x83\x9a\xdf\xb1\xb6\x56\xa5\xb4\x01\x70\xe1\x2a\x96\x58\xf1\x57\x4b\x79\xd7\x84\xd9\x7d\x09\x7d\x70\x8b\x4e\x96\xde\xe0\xda\xdc\x71\x7b\xed\x38\x5f\x1c\xdc\x17\xe9\xb7\x07\x61\x48\xa7\xa3\x91\x4d\xa9\xed\xb9\x65\x79\x04\x3a\xfc\xdd\x32\xc6\x1e\xf1\xd8\xd0\x6e\x98\x28\xde\x4a\xec\x12\xfc\x25\xfc\x8b\x06\xa0\xa7\xfe\xe5\xa0\xc2\xde\x8e\x39\x75\x2a\x9b\xbd\x21\xa7\x6d\x67\xc7\xc6\x9b\x18\x8d\x6d\xc7\x9c\x5c\x18\xc6\x0e\x13\x56\x8e\x84\x25\xa3\xdb\x31\xa7\x20\xb6\xca\x30\xcf\xa6\x41\xfc\x9b\x25\x5d\xbf\x40\xdf\xfc\xdf\x9e\x3e\x0d\xf3\x41\x63\x58\xdb\xa4\x07\x39\x37\x45\x29\x2b\x66\x13\x3b\xe4\x44\x8b\x1d\x1d\x3a\x40\x55\x25\x57\x05\x9d\x3e\x9e\x45\x78\xfe\x6c\x84\x1a\x56\xec\x7e\x34\x3c\x3a\x26\x0e\xc6\xc4\x5c\xfd\x47\x47\x4c\xac\x73\xd9\xf7\x87\xc4\xb8\xcd\xc3\x63\x62\x0f\x09\x71\x9d\xd1\x37\x20\x5e\xbd\xfd\xb1\x37\xca\x75\x29\xd7\x41\xf0\x9b\x34\x0e\x45\x4e\x70\x1d\xef\xc2\xb0\xd6\x91\x11\xb3\x8e\x80\x99\x27\x1a\xc5\x41\xc1\x44\x19\x24\x1b\x90\x70\x10\x74\x79\xfb\xa7\xc3\x41\xb9\x56\xaa\x21\x1e\x43\x14\xc8\xcc\x29\x3c\xfe\x21\x7d\x4c\x6e\x40\x33\x86\x1f\x9b\x63\x8a\xa6\x38\x24\xcd\xc1\x2a\xee\x04\xd4\x3e\xd0\xc1\xb7\xe7\xbf\x09\x82\x99\xa2\x23\x0a\xb6\x33\x8b\x90\xf1\xad\x92\x8f\x47\x4d\x21\xf2\x60\xab\x12\x39\x50\x12\xdb\xd5\x56\x47\x84\xb0\x7d\x9d\xe5\x31\x41\xec\x23\x80\xce\xde\xf0\x49\x53\x36\xe4\x7d\x52\x1b\x41\x01\x71\x7c\xdc\x9a\x3e\xfb\xc0\xb9\xe3\x52\xe9\xda\x00\x0e\x44\xee\x83\x9e\x5b\xc2\x5b\x26\x72\x84\x96\x7b\xcc\xa1\x33\x4e\xdd\x52\x86\xca\x1d\xd8\x23\xa6\x75\x44\x10\xbb\xa7\x92\xcb\x47\x5b\x06\xa6\x2a\x6f\x44\x86\x0b\x1c\x45\x36\x98\xc7\x8f\xf6\x5f\xdb\xdf\x17\xd8\x76\x41\xc1\x52\x7e\x25\x61\x09\x8d\x4c\xaf\x03\xbb\xdd\xae\xdf\x43\xe6\xd8\xc1\x07\xc9\xee\x23\x41\xa6\x42\x94\x62\x25\x2b\x59\x1a\x1b\xdc\xa4\x4b\x2f\xd6\xdf\xa2\x52\x26\x97\xdb\xd9\xba\x9d\x68\xb8\x20\xb9\x15\x1e\xc4\x51\x3e\xf0\x73\x1f\x1f\x74\x0d\xef\xb7\x2f\x73\x22\xb0\x8b\x26\xc4\x7f\x97\x4f\x56\xb0\x4f\xbf\x47\x23\x75\x85\xef\x75\x9d\xa5\xf9\xe3\xaa\x89\x6a\xf3\x2c\x7f\xf8\x1a\x31\x44\x74\x7a\x8e\x57\xe5\xbd\x58\x5b\x28\x58\xbb\xbf\xfd\x3b\xff\x82\x9e\xb6\x57\x8e\x04\xaf\xbd\x74\x54\xf7\xd0\x19\xe4\x45\x35\x54\xad\x0a\x9b\x25\xb5\x1b\x5c\xad\x8a\xf6\x72\xf6\x85\x7b\xa1\x29\xa0\x3e\x2e\xd2\xaa\xe6\x74\x20\x6c\xb3\xf7\xb2\x90\xf4\x21\x34\xfb\xfb\xb5\x41\x87\xc7\xeb\xbd\x86\xf2\xe8\xdc\xa5\x1d\x5c\xa8\x56\x53\x61\x58\xe4\xb6\x3f\x8a\x5d\x0f\x9e\xea\xa7\xc8\x47\x75\xff\xec\x43\xd8\xb6\x30\xfa\x33\x8b\x70\xe2\x5b\x9c\x8b\x95\xcc\x9a\x72\x70\x2b\x07\x99\xf1\xbf\x2d\x2c\x0b\xee\x48\xf4\xf5\x77\x29\x04\xcb\x46\xf2\x3c\x4d\x47\x7b\x58\x19\x07\xdf\x60\x1a\xdd\xc4\xec\x69\x0d\x42\x2e\xac\x34\x92\x23\x92\x21\x84\x9a\x83\x2e\x61\x84\x56\x6d\x67\xd1\xe2\xed\x75\x75\xfc\x57\x2b\x7b\x65\x6c\xab\x8c\xa2\x6f\x16\x96\x8f\x0e\xe1\xee\x94\x6f\x2b\xde\x73\xa1\x32\xae\x73\x71\xd2\xdd\x47\x3f\x6a\x4f\xd4\xaa\x2a\x77\xb2\x47\xd5\xaa\x88\x87\x0f\x5a\x45\xa6\x10\x07\x0b\xd5\x16\x87\x07\xed\x43\xef\xaa\x38\xfa\x4d\xa5\xd9\xd6\xaf\x6d\xf7\xd8\x9e\x1e\x9d\x4b\x3d\xef\xcb\x54\xec\x1e\x21\x6a\xde\x7f\x84\x1a\xb2\x85\x57\x71\xdc\xc5\x15\xcc\x35\x62\x1c\x4a\x0b\x37\x6f\x8b\x8b\x7d\xb6\x2d\x2f\xe4\x6b\xb0\xf1\xc0\xc5\xf8\x49\x56\x9b\x8d\x6b\x6b\xef\x3b\xc6\xcf\xa8\xc5\x77\x67\xd0\xbc\xfa\x6f\x59\x6a\xf2\x4a\x82\x73\xb0\x57\xf6\x3a\x09\xc7\xae\x67\xb7\xf8\x3d\x58\x00\x3b\x07\x89\xfc\x28\x6e\xca\x7b\xa4\x70\x47\x8a\x2c\xb1\x03\x82\x18\x1c\xe4\x50\x22\x7f\xcf\xc5\x3d\x9a\xaf\x50\xcd\x88\x2c\xde\x61\x30\x14\xe9\xe3\x24\x3c\x34\x53\x34\x20\x9c\x81\x65\x87\x11\x0e\xd5\x5c\x3a\xb9\xce\x03\x68\x41\x41\xb0\x68\x21\x2b\xfe\xa4\x5d\x68\xba\x08\xf3\x6f\x59\xae\x12\xa6\xf5\xdc\x7e\x9b\x8e\xd3\xbd\xc3\xc1\xa0\xd2\xef\x65\xf5\xad\x18\xe6\x18\xc3\x76\x72\x20\x83\xd8\xce\x64\x4e\x9e\xc0\xdb\x3c\xbb\xa3\x8a\x62\x0a\x4f\x30\x11\x4e\x9e\x98\x25\xda\x7d\x98\xfa\xc8\x04\x57\xb5\x19\x0d\x22\xcb\x88\x80\xae\x96\x61\xc5\xa0\x5e\xa9\x0a\xad\x62\x5a\x53\x78\x1c\x7d\x20\x95\x4b\x63\xe0\xc9\xc4\x8e\x48\xd3\xef\x36\x40\xfb\x6d\xdb\x4e\x38\x8b\xb7\xc0\x7e\x61\xd3\xd7\x3f\x5d\xca\xb5\x2b\xdd\x7b\x64\xfd\x03\xdb\x04\x41\xdc\x2b\x33\x13\x85\xfc\xf9\xea\xe2\xcd\x68\x2e\x32\x23\x03\x20\x74\x7a\xe6\xbe\xd6\xe9\xa4\x80\x58\xed\xf7\x47\xf6\xc1\x24\xa6\xc4\x42\x21\xb8\x28\x12\x7e\xb8\x89\xc6\xc0\x34\x3d\x58\x7a\xc1\xe5\x76\xdb\x1f\x1f\xf4\xac\xb7\xa6\xda\xf8\x41\xbd\x19\xdb\xe3\xbf\xc7\x78\x6c\x36\xe6\xf2\xf9\xd5\x87\x6f\xfc\x84\x04\x75\xc3\xfe\xc0\x11\x2c\xff\xdb\x5e\xac\xa3\x0f\x6c\xf2\x95\x3a\x53\xde\xf0\x6f\xff\x3d\x30\xeb\x0d\xec\x7e\x8a\xec\xd8\x3b\x6f\x5d\xb7\xd7\x3e\xd4\x53\x8f\x88\x91\x07\xd4\x37\xb5\xfc\x50\x4f\xcd\xac\x54\x53\xfe\x7a\xc7\xce\x05\xb5\xa4\xfd\x49\x8f\xce\x36\x11\x4d\x21\x6c\xc9\x75\xe4\x17\x66\x41\x93\x8d\x0f\x22\x6e\x2b\x12\x88\x61\xbb\x19\x0f\x2e\x7f\x05\x82\xd0\xfe\x28\xde\x85\xb8\x96\xc1\x86\x1d\xfb\xd1\x0e\xda\xa3\xc3\x1f\xed\x68\x28\x1f\xbc\x37\xd0\xfa\xd8\x67\xe2\x17\xd8\xdf\x1d\x08\xf6\xba\xe7\x63\x1d\xfb\x29\xd8\xa4\xf3\x3f\xde\x37\x3b\x9a\x79\x1d\xfb\xcd\x8e\xe0\x5b\x1d\xed\x39\x5f\xca\x75\x33\xed\x07\x7d\xaf\x03\x37\xaa\xe7\xd2\xa4\x0f\x4e\xec\xb4\x09\xb2\x2a\x4d\x8b\xae\xc2\xfa\x07\x7c\xd0\x23\xd8\xe5\xdf\xf4\x41\x8f\x80\x8e\x2f\xa4\x7c\xd0\x97\x25\x01\x58\xe4\xba\x24\x6a\xe7\x33\x1d\x0f\xfc\x10\x44\x10\xcb\xe4\x45\xdd\xba\xca\xd6\x7d\x35\xcb\x2c\xac\x02\xbc\x30\x8b\xfe\x10\xe6\x6e\xf9\x5e\xd7\xed\xb5\x3d\x45\xc0\x2b\xb3\x48\x5e\x8a\x4a\xf4\x95\x98\xed\xf9\x92\xc6\xa3\xa3\x3e\xc0\x30\x6c\x49\xd4\x81\x1a\x21\x9a\xf0\x11\x35\x42\x54\x13\xa4\xa7\x7f\x95\x33\xff\x6d\x52\xe3\xf7\xcb\x7d\x30\xe1\x42\xe4\x77\x1c\x5d\xd7\x24\x18\xf6\xbb\xdd\x54\xba\x51\xe3\xd8\x15\x08\xfe\x4c\x2d\x18\x99\x1b\x85\xea\xce\x5e\xce\x68\x95\x0e\x75\xf0\xdd\xf7\x4d\x94\x02\x81\x92\x4d\xc5\xe7\xb3\x96\x05\x3b\x50\x42\xe4\xd6\xb9\x25\x83\x3c\x3e\x4e\x21\x1c\x78\xec\x6f\x8c\xce\x1a\xb2\xf1\x43\x2a\x28\x70\x46\xdf\x5e\x41\x11\xf4\x3e\x70\x3d\x1f\x67\xf3\x7f\x7d\x3d\xbf\xe1\x6e\x17\x45\xf4\x1a\xa0\x77\xf5\x34\x53\x66\xd9\xd8\x9f\xdf\x76\x37\xff\x18\xf4\xf1\x2d\x77\xee\x5d\xd2\x7e\xff\xbd\xfb\x1d\x2b\xe1\x67\x67\xf3\xf6\xfe\xf2\x3d\x67\xf0\x0f\x00\x9a\x61\x90\x9a\x6f\x1d\x85\x30\x1f\xdf\x63\x57\x5a\x99\xf8\xed\x44\xfc\x76\x1e\xfe\x1f\xf8\x02\x3d\x01\xa0\x6f\xbd\x40\xdf\xb3\x2a\x9d\xba\xef\xb8\x0b\xf4\xce\x2e\xfc\xdd\xae\xca\xf7\xb0\x7c\x84\xa9\x82\x7e\x5b\x35\x99\xc0\x31\x66\x48\x96\xa5\x4f\xdd\x6d\x9b\xa3\xc9\x04\x76\x2d\xd2\x64\x02\xf7\x01\x75\xd7\x99\x6f\x86\xb8\xce\x8f\x1e\xed\xbe\x4b\x28\x33\x76\x76\x06\xd1\x17\x65\xaf\xfa\x7c\x89\x7a\x86\x71\x99\xbc\x5d\x22\xae\xd8\xd2\x31\xd2\x91\xfd\xea\xfc\x00\xc0\xb1\x46\xb9\x2b\xe5\xb5\xdf\x2a\x77\x7f\x69\x27\x94\x61\x6b\x9b\xbb\x4d\x73\x67\xfa\xa9\x65\x99\xb7\x3e\x14\xe0\xfe\x77\x27\x6c\x95\x46\x50\x4f\x21\x7a\x8c\x35\x4e\xce\x69\xfa\x0b\xb3\xd8\xb6\xd5\x27\xc4\xeb\xef\x63\xb0\x8f\xc5\x58\x87\xb2\x4e\x07\x0d\xb4\x1f\x88\x08\x7b\x72\x71\xb0\x0d\xff\x1b\x00\x00\xff\xff\x24\xbc\x33\xf4\x27\x65\x00\x00")

func baronName_baronPbGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_baronName_baronPbGotemplate,
		"baron/NAME_baron.pb.gotemplate",
	)
}

func baronName_baronPbGotemplate() (*asset, error) {
	bytes, err := baronName_baronPbGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "baron/NAME_baron.pb.gotemplate", size: 25895, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdd, 0x58, 0xca, 0x84, 0x79, 0x22, 0x41, 0x55, 0xdb, 0xec, 0x6c, 0x8a, 0x89, 0x5d, 0xa, 0x93, 0xfa, 0xaf, 0xb9, 0xa1, 0xac, 0xa8, 0xe9, 0xde, 0x2e, 0x45, 0xa7, 0xe7, 0x1d, 0x74, 0x49, 0x5f}}
	return a, nil
}

var _cmdNameMainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x51\x6b\xdb\x3e\x14\xc5\x9f\xa3\x4f\x71\xff\x82\xff\xb0\x21\xb3\x4b\x69\xf7\x90\xe1\x87\x36\xee\xba\xc2\x68\x43\xe2\xf6\x75\x28\xf1\xb5\x23\x66\x4b\x46\x52\x5c\x42\xf0\x77\x1f\x57\x76\x3a\x8f\xb6\x4b\x5f\x22\x29\xf7\xe8\x77\x6e\x94\x23\xc5\x31\xcc\x75\x8e\x50\xa2\x42\x23\x1c\xe6\xb0\xde\xc3\x5a\x18\xad\x22\x48\x1f\xe0\xfe\x21\x83\x9b\xf4\x2e\x8b\x58\x1c\xc3\x12\xcd\x4e\x29\xa9\xca\x5e\x00\xcf\xb2\xaa\x40\xb7\x68\x9e\x8d\x74\x08\x6e\x2b\x2d\x14\xb2\x42\x2f\x7e\x42\x63\xa5\x56\x33\x38\x1c\xa2\x61\xde\x75\xa3\x02\xa4\xc2\xe1\xb8\x4a\xeb\xae\x63\xac\x11\x9b\x5f\xa2\x44\xa8\x85\x54\x8c\xc9\xba\xd1\xc6\x41\xc0\x26\xbc\xa8\x44\xc9\x69\xac\x1d\x0d\xda\xd2\xa7\x75\x46\xaa\xd2\x72\xc6\x26\x71\x0c\x19\xb5\xb0\x42\xd3\xca\x0d\xfa\x11\x0d\x9b\xf0\xc3\x21\xba\xf3\x98\x85\x70\x5b\xf8\xdc\x75\x10\x5b\x5f\xe3\x2c\x64\xac\x15\x06\x36\x5a\x15\xb2\x84\xfe\xdb\x68\xee\x57\x8c\x15\x3b\xb5\x01\xa9\xa4\x0b\x42\x38\xb0\x09\xf9\x47\x2b\xef\xf7\x24\x4c\xf0\xa9\xdf\x14\xa5\xb8\xde\x95\x57\x79\x6e\xa6\xc0\x73\x9a\x47\x22\xcf\x0d\x9f\x02\x9f\x5d\x9e\x7d\x39\xa3\x89\x97\x80\x50\x39\xd4\xe8\x8c\xdc\x58\xa8\xa4\x75\xa8\x80\x94\x68\x2d\x0f\xdf\xa5\x7f\xcf\xb2\xc5\x00\xdf\x3a\xd7\x8c\xd9\x97\x9e\x4d\x82\x8f\xe3\x6e\x97\x8b\xf9\x80\x2b\x4d\xb3\x19\xe3\x2e\x3c\xae\x5c\x2e\xe6\x10\x10\x34\xfc\x38\xf5\xfe\x2a\x5b\x0d\x54\x25\x9c\xfd\x43\xbd\x38\x3f\x3f\xa7\x09\x09\xde\xc3\x5d\x6b\x5d\xbd\x3a\xcf\xe3\x59\xf2\x29\x14\xa2\xb2\xf8\x72\x88\xb5\xce\x91\x87\xfd\xbf\xfd\x68\x11\x50\xb5\xd2\x68\x55\xa3\x72\xd0\x0a\x23\xc5\xba\x42\x3b\x05\x59\x80\x45\x17\xc1\xb7\x4a\x94\x16\xb6\xa2\x45\x68\x8c\xd4\x46\xba\xbd\x4f\x2c\xdc\xa8\x96\xf4\x36\x62\x13\x59\x80\xf7\x82\x59\x02\xda\x46\xb7\xe8\x50\xb5\x01\x4f\x6f\xae\x1f\x6f\x79\xf8\x75\x28\xfe\x97\x00\xe7\x14\x83\xc9\xb8\x4f\x48\x80\x3b\xb3\x43\x0e\x49\x02\x43\x16\xa3\x4c\xff\xd0\xcf\x68\x02\xbf\x31\x64\x93\xce\x7b\xd0\xef\x7e\xcb\xe2\xe7\x55\x9a\x2e\xc9\xc7\x0b\xde\xb6\xa1\xc3\x85\xc4\x2b\x8e\x38\x7f\x2d\xfe\xc6\x2d\x1e\x96\x19\x81\x7c\xe9\x15\xe8\x98\x24\x48\xa0\xa8\x5d\xb4\x6a\x8c\x54\xae\x08\xf8\xec\x7f\xcb\xa7\x7e\xcf\xbf\x5a\xa5\xdd\x27\x3a\x1d\x19\x8c\x1b\x7d\x03\x46\x29\x3c\x01\x3b\x06\xf5\x34\x8c\xb2\x75\x02\x76\xcc\xe7\x08\xd6\x0d\xd7\x9b\x5e\x99\xfe\x7a\x53\xa0\x9a\x5c\x38\x3c\x26\x14\x2d\xc5\xc8\x6d\x71\xdf\x07\x68\x8d\xa8\x5e\x9e\x3b\x4a\xf2\x7a\x0f\x94\x60\x3b\x04\x79\x21\x8c\xc5\x80\xb2\x39\xbc\x23\xcb\x9d\x0a\xfa\x0e\x42\xd6\xb1\xdf\x01\x00\x00\xff\xff\x05\xfd\x64\x8c\x6a\x05\x00\x00")

func cmdNameMainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameMainGotemplate,
		"cmd/NAME/main.gotemplate",
	)
}

func cmdNameMainGotemplate() (*asset, error) {
	bytes, err := cmdNameMainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME/main.gotemplate", size: 1386, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x87, 0x9b, 0x2b, 0x92, 0xd3, 0x4e, 0x8, 0xe0, 0x54, 0x2e, 0x84, 0xaa, 0x9f, 0x14, 0xec, 0xf7, 0x44, 0xd9, 0x2b, 0x14, 0x74, 0x0, 0x73, 0x4f, 0x1f, 0x2f, 0xe0, 0xef, 0xc5, 0x15, 0xed, 0x22}}
	return a, nil
}

var _cmdNameClientMainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\x4d\x6f\xe3\x36\x10\x3d\x8b\xbf\x82\x25\xbc\x0b\xaa\x75\xe8\x45\xb0\x7b\x59\xc0\x87\xb5\x8b\xee\xe6\xd0\xc0\x48\x8c\xf6\x90\xe6\x40\x53\xb4\x4c\x84\x26\x15\x8a\x4a\x52\x08\xfa\xef\xc5\x50\x92\xe5\xcf\xd8\x75\xd2\xfa\x22\x82\x63\xbe\x37\x6f\xf8\x66\xa4\x8c\x8b\x07\x9e\x4a\xbc\xe4\xca\x20\xa4\x96\x99\x75\x1e\x53\x14\x11\x61\x8d\x97\x2f\x9e\xa0\x88\xcc\x35\x4f\xe1\xa9\x2d\x3c\xca\x52\xcd\xb1\x7c\xc4\x6c\x6c\xcd\x5c\xa5\x6c\xea\xb8\xc9\xc3\x31\xc2\xb5\x26\x98\x18\xee\x73\x82\xab\x0a\x45\x24\x55\x7e\x51\xcc\x98\xb0\xcb\x01\xec\x5e\x28\x1b\x9e\x2c\xb5\x01\x48\x9a\xa4\xaa\x10\x8a\xb2\x19\x26\x65\xc9\x26\xa3\xab\xc0\x3f\xe1\x7e\x81\x2f\xaa\xea\x14\xb2\xd4\x65\xa2\x25\xb3\x36\xd5\x92\xa5\x56\x73\x93\x32\xeb\xd2\x41\x08\x76\x44\x31\x42\x4f\xdc\x81\x3a\x08\x7c\x4b\x12\x87\x73\xef\x94\x49\x51\xb4\xf0\x3e\xdb\xd8\x80\x34\xd7\x37\x62\x84\xe6\x85\x11\x58\x19\xe5\x69\x8c\x4b\x14\x41\x55\xd8\x6d\x88\xfe\xc1\x1d\xfd\xd8\x62\xf6\xeb\xa4\x18\x4f\x12\x47\xfa\x98\x7c\xfd\xf2\xe9\xf3\x27\x58\xa4\x37\x93\x31\xa6\x3f\xa6\xd3\x49\x8c\xb5\xca\xbd\x34\x18\xfe\x23\xf3\x9c\xc4\xbb\x70\x6d\x46\x7d\x4c\x60\xb9\x0e\xf7\x25\xc0\x01\xd0\x09\x38\xad\x90\x7e\x7d\x31\x1d\xce\xe7\xcb\xcb\x4b\x58\x5c\x7f\x9b\xde\xee\xe2\x54\x8d\x5e\xf0\xc5\x9a\xde\x09\x77\xb9\xa4\x31\xd4\xf4\x59\xf9\x05\xee\x79\x89\xbf\x0e\x31\x0b\x37\xd0\x5e\x56\xcf\xcb\x13\xee\x6b\x30\xc0\x23\xee\xac\xc1\xdf\xa1\x2e\x63\xad\xa4\xf1\x28\xd2\x36\x65\x13\xa7\x8c\xd7\x86\x92\x3b\x08\xb1\xb2\x04\xc0\x5b\xe9\x9e\x94\x90\xec\x9a\x2f\x65\x55\xdd\x83\xd4\x4c\x1b\x48\x45\x58\x63\xfa\x58\x3a\x07\x99\x84\xd2\xff\xaa\xb8\xa6\x28\x5a\x5d\x73\xbf\x59\xb3\x3f\x95\x5f\x5c\x99\x5c\x8a\xc2\x49\x1a\x6f\x6c\x8f\xb4\x15\x0f\x61\x2f\x46\x11\xe8\x70\x0e\xff\x34\xc4\x46\x69\x10\x1f\xf2\xfa\x8d\x7b\xae\xa9\x74\x2e\x46\x51\x85\xa2\x44\xce\xa5\xc3\xc0\xce\xc6\xda\xd6\x65\x99\x81\x22\xc8\xba\xd6\xb3\x4a\x2b\x9b\xb1\x6b\xf9\xdc\x05\x28\x1c\x3b\x95\xa8\x2c\x1d\x37\xa9\xc4\x3d\x05\x50\xeb\xc5\xf8\x5d\xfa\x85\x4d\xf2\xa6\x9c\x07\xab\x05\x9b\xaa\x59\xa3\x08\x58\x84\x7f\x01\xac\xa6\xc9\xd9\x88\x8b\x87\xd4\xd9\xc2\x24\x20\x22\x82\x2e\x51\x06\x92\x2e\xcb\xef\x16\xce\xe1\x9e\x62\x37\xf2\xb1\x90\xb9\x9f\xfe\x9d\xc9\x15\x56\x64\x8b\x4e\xe4\x96\xf8\x8d\xc3\xf5\x01\x2a\xfc\x4b\x1f\x7f\x54\x20\x7d\x8f\xf6\x4e\xfc\x9c\x92\xbb\xe0\x0e\xd6\xe1\xdd\xe3\x03\xda\xb6\x59\x00\x76\xf8\xe1\xe9\x2f\x43\x42\x6a\xc0\x55\x35\x95\x0d\xd6\x7a\x1b\xb8\x93\x79\xa1\xfd\xf0\xc3\x2f\x35\xc1\xcf\xb6\xf0\xc0\xd0\x98\xb1\xea\xc6\xcd\xda\x80\x0b\x9d\x01\xf0\xd0\xb4\x3f\xa4\xce\xa4\xdb\xba\xbb\xba\x15\x42\x4f\xef\x6f\x05\x08\xdd\xdf\x1d\xeb\x85\x95\x55\x96\x01\xbd\xf5\xcb\x41\x5a\x08\x1c\xb4\x4c\x8d\xf1\x46\xdf\x34\x20\x6b\xe6\x09\xbe\x09\x5e\x01\xf6\xbd\x8d\xd2\x05\x68\x3b\x07\x8f\x39\x86\xae\xdd\xf4\x8e\x29\x3b\xbc\xdd\xcc\xce\x76\x66\x07\x7a\xd4\x3c\x1b\x54\xa7\xdb\xf3\x6c\x86\xd7\x3d\xfa\x9a\x49\x8f\x8c\xef\xf0\x6e\xdf\xb0\x6c\x78\x7d\xec\xb7\x2c\x84\x8e\x4e\x6f\x23\x56\x57\x15\xde\x4f\x63\x6b\x8c\x14\x9e\xb6\xef\xad\x7f\x37\x8d\x8d\xd8\x9a\xc5\x90\xc3\x5e\x8b\x75\x01\x6a\xc4\x7b\x4f\xe2\x83\xca\xff\xcf\x49\xdc\x29\x7c\x9f\x49\xdc\xe1\xfd\x07\x93\xf8\x1c\xf0\xf3\x26\x71\xbd\xaa\xea\xcf\x9b\xf0\x5f\x50\xbc\xe1\xdc\x8b\xf7\xfe\x85\x0f\xaa\x7f\x02\x00\x00\xff\xff\x06\x3c\xfd\x90\x6b\x0b\x00\x00")

func cmdNameClientMainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameClientMainGotemplate,
		"cmd/NAME-client/main.gotemplate",
	)
}

func cmdNameClientMainGotemplate() (*asset, error) {
	bytes, err := cmdNameClientMainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME-client/main.gotemplate", size: 2923, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc2, 0xcd, 0x51, 0x79, 0x9a, 0x4c, 0xcc, 0x37, 0xb0, 0xb7, 0x60, 0x7c, 0x1d, 0x9f, 0xa5, 0x53, 0x53, 0x2e, 0xf6, 0x2, 0xf2, 0x9c, 0x5c, 0x8c, 0x6d, 0x31, 0xc4, 0x35, 0xab, 0x44, 0x75, 0xee}}
	return a, nil
}

var _serverServerGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x56\x4d\x6f\xdb\x38\x10\x3d\x8b\xbf\x62\x2a\xf4\x20\x2f\x1c\xea\x1e\x34\x87\xd6\x69\xb7\x01\x9a\xd4\x88\x8d\xdd\xe3\x82\x96\xc6\x32\x51\x8a\x54\x49\xca\x6e\x57\xd0\x7f\x5f\x0c\x29\xc9\x76\xd2\xb8\xdb\x5e\x6c\x89\x33\x7c\x7c\xf3\xe6\x83\xca\x73\x58\x98\x12\xa1\x42\x8d\x56\x78\x2c\x61\xf3\x1d\x36\xc2\x1a\xcd\xe1\xf6\x33\x3c\x7c\x5e\xc3\xfb\xdb\xbb\x35\x67\x79\x0e\x8f\x68\x5b\xad\xa5\xae\xa2\x03\x1c\xa4\x52\x60\xf6\x68\x0f\x56\x7a\x04\xbf\x93\x0e\xb6\x52\x61\x70\xfe\x0b\xad\x93\x46\x5f\x43\xd7\xf1\xe1\xb9\xef\x4f\x0c\x70\x2b\x3c\x9e\x5a\xe9\xbd\xef\x19\x6b\x44\xf1\x45\x54\x08\x0e\xed\x1e\x2d\x63\xb2\x6e\x8c\xf5\x90\xb1\x24\x55\xa6\x4a\x59\x92\x6a\xf4\xc3\x5f\xbe\xf3\xbe\x39\x7d\xce\x9b\xc6\x9a\x2d\xad\xd8\x56\x7b\x59\x63\xca\x58\xd2\x75\x72\x0b\xf8\x15\xf8\xc2\xe8\xad\xac\xf8\xda\x0a\xed\x02\x68\x2a\x94\x4a\x21\xd5\xc2\xbb\x14\xfa\x9e\x25\x69\x25\xfd\xae\xdd\xf0\xc2\xd4\x39\xad\x5e\x49\x13\xfe\x79\x65\x52\x02\x42\x5d\x92\xdb\x4f\x11\x2b\xdb\x14\x23\xa2\x31\x95\x42\x5e\x19\x25\x74\xc5\x8d\xad\xf2\x60\x3c\xa2\xb1\x24\xcf\x61\x4d\xe2\xad\xd0\xee\x65\x81\x2c\x69\x36\x90\x76\x1d\x5f\xbe\xbb\x0b\xc1\x2f\x85\xdf\xc1\x55\xdf\x53\x5c\x5d\xc7\xcf\x17\x21\x77\x71\x5b\xca\x66\x8c\xed\x85\x25\xa9\xfe\x81\x21\x7e\xfe\xde\x5a\x63\x69\x41\xa3\x1f\x5e\x66\x8c\x85\xb4\x13\x75\x28\x8c\xf6\x42\x6a\x07\x7e\x87\x60\xf1\x6b\x2b\x2d\x96\xb0\x95\xa8\x4a\x07\x5b\x63\x61\xcc\xb9\x18\x33\xe2\xbf\x37\x38\xee\x76\xde\xb6\x85\x87\x8e\x25\x1f\xd7\xeb\xe5\xdb\xb2\xb4\xb4\x24\x75\xc5\x92\x5b\xdc\xb4\xd5\xd9\xca\x9f\x8f\xcb\xc5\xd9\xc2\xc3\xdb\xf5\xea\xf9\x1e\xd8\x18\xa3\x58\xcf\xd8\xb6\xd5\x05\x3c\xe0\xe1\xbd\x2e\x1b\x23\xb5\x77\x99\xdb\x17\xd0\x6c\x78\xd7\xf1\x41\x2a\xfe\x20\x6a\xec\xfb\x55\x60\x36\x23\xdb\xe4\x4c\xa4\xf2\x1c\xde\xb5\x4e\x6a\x74\x0e\x4a\x53\x0b\xa9\x79\x58\xfc\xdb\x8a\x66\x54\x1b\x0e\xd2\xef\xa0\x96\x65\xa9\xf0\x20\x2c\x3a\x0e\x2b\x8c\xe5\x27\x0b\xcc\x4f\x0d\x95\x61\x09\x51\xb8\x19\xad\x9c\x80\x06\x1c\x22\x37\x8b\xc9\x1c\x39\x1c\xcf\x1c\xd2\xd2\x75\x56\xe8\x0a\xe1\xb5\x84\xeb\x1b\x98\x82\xb8\x47\xbf\x33\xa5\xa3\x6c\xb2\x24\xe9\xba\xb5\xf9\x64\x0e\x68\xe1\xb5\x1c\xe2\x9b\x00\x6f\x28\xc4\x7b\xf1\x05\xbb\xee\x99\x31\x12\x38\x16\x29\x91\xc1\x49\x8d\xeb\x9b\x33\x75\xba\xff\x4d\xe6\xd9\x39\xd7\x00\x00\x17\x48\xce\x4f\x38\x0c\xd5\x1d\xf4\x76\xa8\xb0\xa0\x09\x73\x4c\xd1\x8f\xa5\xdf\x09\x5d\x2a\xb4\xee\x99\xf6\xc7\x68\xce\x33\x70\x2c\x90\xc9\x83\x82\xb7\xe8\x5b\xab\x61\x5a\xa3\x9a\xa2\x31\xd6\x6a\x70\x5e\x58\xef\x40\x80\xc6\x03\xd0\xe0\x18\x8a\x7b\x0e\xd5\xe3\x72\x31\xbd\x08\x5d\x82\x80\x32\x54\x65\x5c\x8b\x94\xfd\x0e\x09\xa9\x11\xce\x61\x49\x2d\x44\xbd\x40\xce\xca\x54\x15\xda\x58\xb9\x8f\xad\xce\x8a\x6d\x35\xb4\xca\x8c\xea\x91\x8a\xe7\xfa\xc8\xfd\x01\x0f\x63\xf1\xcc\x9e\xe4\xea\x69\xd9\x0f\x95\x75\x8f\xc5\x4e\x68\x59\x08\x75\xac\x2d\xb4\x36\xa0\xd6\xe2\x0b\x66\x64\x06\xa4\x36\x1f\x76\xdc\x69\x8f\xd6\xb6\x8d\x1f\x65\xe5\x2c\xa9\xcc\x44\x61\x32\x7f\x8c\xd6\x8c\xd0\x86\xad\xb1\x1b\x95\x74\x9e\x2e\x07\xce\x12\xb9\x85\x62\x5b\xf1\xb8\xde\xb1\x84\x80\x28\xd4\x2c\x04\x97\x24\xca\x54\x7c\x69\xa5\xf6\x4a\x67\xa9\x1f\x67\x62\x3a\x87\x34\x48\x48\x0f\xa2\x2c\x6d\x3a\x3f\xc2\x50\xfb\xd3\x71\x49\x52\x53\x0c\x94\x8a\x51\x16\xbc\x6f\xbf\x91\x2e\x49\x52\xf3\xc8\x2e\x4b\xf3\x00\x14\xa7\x7c\x9e\xce\xa3\xff\x40\xfd\x03\x31\x09\x16\x7e\xa7\x4b\xfc\x36\xbb\xb4\xb7\xa8\x4b\x25\x35\xbe\x0c\xb1\x88\x0e\x17\x41\xe8\x47\xaa\x0b\x20\xcb\xe8\x70\x11\xc4\x7d\xaf\x37\x46\xbd\x8c\xb1\x0a\xf6\x8b\x10\xde\x8a\xe2\x02\x8b\x35\x99\x67\x51\xe5\x50\x2c\x6f\xae\xa2\xeb\xa7\x90\xda\xb7\xba\x0c\x72\x67\x67\x49\x99\x43\x4d\x47\xf6\x94\x81\xf1\xc6\xe3\x34\xe4\x3f\xa2\x6a\xd0\x8e\x63\x82\x9a\x3c\xcf\x81\x0c\x30\x65\x3c\x96\xd8\x49\x65\xbc\x5c\x18\xb4\xf1\x49\x5d\x8c\x37\x09\x1d\xbf\x1b\xe6\x16\x8d\xbc\x70\xf8\x58\xa5\xc7\x3e\xff\x79\x4c\x23\xe0\x1c\x76\x14\x4c\x36\xfb\xbd\x9b\x3c\xcf\xe3\x70\xf8\x9d\x30\x69\x63\x3a\x3f\x8d\x72\xbc\x0c\x29\x00\xa5\xe7\xd4\xb3\x14\x2b\xdd\xd2\x31\x84\x2c\xf5\x45\xf3\x03\x67\xe2\x6b\x2d\xbc\xba\x01\x2d\x55\xec\xbb\x51\x00\xb4\x96\x5e\xe3\xdc\xa3\xe4\x51\xca\x9d\xdd\x9f\x88\x48\x48\xf1\xb6\x3c\xd7\x30\x0c\x1d\x8a\x75\xea\x3e\x1b\x7a\xaf\xd9\xf0\x47\xac\x88\x90\x7d\xe1\xd6\xcd\xdc\x1c\x9c\xdd\x87\xf2\x1a\x89\x38\x1e\xd5\x57\xfa\xd7\x05\x3f\x7e\x8c\xe5\x39\xd0\x17\xc2\x6f\x09\x4e\x1b\xcf\x05\x1f\x3f\x36\x28\xaa\xc2\xe8\x13\xc9\xe9\xfb\x6e\x61\xb4\xc6\xc2\x67\x4f\x3d\x7f\x49\xed\x24\x29\x94\x71\x48\x58\x04\x1c\x88\x16\xf0\xc7\x74\xc0\x30\x26\x0b\xbe\x20\xb7\xa0\x2f\x6d\x1a\x3f\xd5\x56\xe8\x3f\x48\x2d\x94\xfc\x17\x6d\x16\x29\x4e\x78\xb3\xe7\xa9\x24\x9a\x3f\x4a\x25\xf1\x0d\x4e\xc1\x48\x5e\x03\x58\xc8\xd2\xaf\x86\x74\x96\xbd\x90\x93\xc7\x56\xbf\x62\xe7\xd2\xe3\x37\x49\xaa\xbf\xb9\x8a\xb7\x47\xcf\xd8\x7f\x01\x00\x00\xff\xff\xc9\x41\xaa\xde\x58\x0c\x00\x00")

func serverServerGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_serverServerGotemplate,
		"server/server.gotemplate",
	)
}

func serverServerGotemplate() (*asset, error) {
	bytes, err := serverServerGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/server.gotemplate", size: 3160, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x17, 0xbb, 0x6d, 0x64, 0xdb, 0xf0, 0x12, 0x72, 0x31, 0xe2, 0xd6, 0x22, 0x3d, 0xcf, 0x43, 0xd2, 0x6a, 0x8a, 0xe, 0xc, 0x25, 0x3a, 0x59, 0x40, 0xa8, 0x2d, 0xf0, 0xe, 0x8b, 0x12, 0x97, 0xba}}
	return a, nil
}

var _serviceHooksGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x50\xbe\xd5\x88\x7c\x53\x7b\x23\xec\xee\xeb\x5d\x93\xac\x80\x18\xe7\x2d\x3b\x9b\x1a\x9a\xf1\xbe\x42\xcf\xdc\x4a\x85\x6b\xe0\x79\x6b\x0e\x7c\x8b\x51\x0e\xba\xec\x2c\x90\xa4\x63\x4c\x7f\x00\x00\x00\xff\xff\xe8\xb0\x07\xec\x3e\x00\x00\x00")

func serviceHooksGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_serviceHooksGotemplate,
		"service/hooks.gotemplate",
	)
}

func serviceHooksGotemplate() (*asset, error) {
	bytes, err := serviceHooksGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service/hooks.gotemplate", size: 62, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xac, 0x1f, 0xe5, 0x64, 0xee, 0xef, 0x70, 0x78, 0x57, 0x74, 0xa7, 0xc9, 0x31, 0xc3, 0xd8, 0x85, 0xb7, 0xc3, 0xb5, 0xdc, 0xe2, 0x3f, 0x3b, 0x91, 0xaf, 0x20, 0x61, 0xd7, 0xa9, 0xfa, 0xc1, 0xb9}}
	return a, nil
}

var _serviceMiddlewaresGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0d\x80\x20\x10\x05\xd0\xde\x29\xae\xa6\xf0\x0f\xe3\x04\x08\x5f\x42\x04\xce\x1c\x44\x0b\xc2\xee\xbe\x39\xe1\xe4\x20\xe5\xf4\xa6\x0d\x89\x2d\xe9\x9d\x07\x3a\xed\xcd\x81\x18\xac\x4f\xf1\x83\x1d\x35\xc7\x58\xf8\x79\x63\xdf\x93\xca\xa5\x26\x41\x23\xc5\x61\xad\xed\x0f\x00\x00\xff\xff\x78\x96\x32\xf7\x47\x00\x00\x00")

func serviceMiddlewaresGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_serviceMiddlewaresGotemplate,
		"service/middlewares.gotemplate",
	)
}

func serviceMiddlewaresGotemplate() (*asset, error) {
	bytes, err := serviceMiddlewaresGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service/middlewares.gotemplate", size: 71, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf0, 0x65, 0xf6, 0xa7, 0xb2, 0xf, 0xed, 0xb5, 0x20, 0x48, 0xf3, 0xc3, 0xea, 0x42, 0x43, 0xf8, 0x89, 0xdf, 0x98, 0x2c, 0x20, 0xb4, 0x8c, 0x62, 0xdb, 0xe3, 0x6d, 0xf9, 0x92, 0x9c, 0xa6, 0xef}}
	return a, nil
}

var _serviceServiceGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\xd6\xd7\x52\x08\x4e\x4d\x55\x48\x4f\xcd\x4b\xcf\xcf\xce\x2c\xd1\x2f\x4e\x2d\x2a\xcb\x4c\x4e\xd5\x2f\x49\xcd\x2d\xc8\x49\x2c\x49\x2d\xd6\x4b\xcf\x57\x48\xcb\x2f\x52\x48\xce\x4f\x49\x55\xd0\xd2\xaf\xad\xe5\x02\x04\x00\x00\xff\xff\x83\x0c\x7f\x72\x35\x00\x00\x00")

func serviceServiceGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_serviceServiceGotemplate,
		"service/service.gotemplate",
	)
}

func serviceServiceGotemplate() (*asset, error) {
	bytes, err := serviceServiceGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service/service.gotemplate", size: 53, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x42, 0x66, 0x3f, 0xe7, 0xfb, 0x13, 0xd6, 0x89, 0x21, 0xa4, 0x89, 0x63, 0xaf, 0x76, 0x8b, 0xd3, 0x99, 0xab, 0x96, 0x1d, 0x35, 0xfa, 0x50, 0xf9, 0x59, 0x84, 0xf5, 0xa3, 0x13, 0xf5, 0xb7, 0x5f}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"baron/NAME_baron.pb.gotemplate":  baronName_baronPbGotemplate,
	"cmd/NAME/main.gotemplate":        cmdNameMainGotemplate,
	"cmd/NAME-client/main.gotemplate": cmdNameClientMainGotemplate,
	"server/server.gotemplate":        serverServerGotemplate,
	"service/hooks.gotemplate":        serviceHooksGotemplate,
	"service/middlewares.gotemplate":  serviceMiddlewaresGotemplate,
	"service/service.gotemplate":      serviceServiceGotemplate,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"baron": &bintree{nil, map[string]*bintree{
		"NAME_baron.pb.gotemplate": &bintree{baronName_baronPbGotemplate, map[string]*bintree{}},
	}},
	"cmd": &bintree{nil, map[string]*bintree{
		"NAME": &bintree{nil, map[string]*bintree{
			"main.gotemplate": &bintree{cmdNameMainGotemplate, map[string]*bintree{}},
		}},
		"NAME-client": &bintree{nil, map[string]*bintree{
			"main.gotemplate": &bintree{cmdNameClientMainGotemplate, map[string]*bintree{}},
		}},
	}},
	"server": &bintree{nil, map[string]*bintree{
		"server.gotemplate": &bintree{serverServerGotemplate, map[string]*bintree{}},
	}},
	"service": &bintree{nil, map[string]*bintree{
		"hooks.gotemplate":       &bintree{serviceHooksGotemplate, map[string]*bintree{}},
		"middlewares.gotemplate": &bintree{serviceMiddlewaresGotemplate, map[string]*bintree{}},
		"service.gotemplate":     &bintree{serviceServiceGotemplate, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
