// Code generated by go-bindata. DO NOT EDIT.
// sources:
// NAME-service/baron/NAME.pb.baron.gotemplate (21.579kB)
// NAME-service/cmd/NAME/main.gotemplate (1.06kB)
// NAME-service/cmd/NAME-client/main.gotemplate (1.961kB)
// NAME-service/server/server.gotemplate (2.399kB)
// NAME-service/service/hooks.gotemplate (62B)
// NAME-service/service/middlewares.gotemplate (71B)
// NAME-service/service/service.gotemplate (53B)

package template

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _baronNamePbBaronGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7c\x6f\x8f\xdb\x38\x92\xf7\x6b\xfb\x53\xd4\x08\x33\x13\x29\x8f\x22\xe7\x39\xe0\x0e\x7b\x1d\xf4\x01\x49\x4f\x66\x92\xdd\xfc\xdb\x4e\x67\x06\xb8\x20\xc8\xd2\x16\x6d\xf3\x5a\x12\x15\x92\x6a\xb7\xd7\xd7\xdf\xfd\x50\x2c\x52\xa2\x6c\xc9\xed\x9e\x99\x57\x87\x6b\x60\x26\x36\x45\x16\x8b\x55\xc5\x62\xd5\xaf\x28\xcf\x66\x70\x21\x73\x0e\x2b\x5e\x71\xc5\x0c\xcf\x61\xbe\x85\x39\x53\xb2\xca\xe0\xa7\xf7\xf0\xee\xfd\x15\xbc\xfc\xe9\xf5\x55\x36\x9d\xcd\xe0\x92\xab\xa6\xaa\x44\xb5\xa2\x0e\xb0\x11\x45\x01\xf2\x86\xab\x8d\x12\x86\x83\x59\x0b\x0d\x4b\x51\x70\xdb\xf9\x57\xae\xb4\x90\xd5\x19\xec\x76\x99\xfb\x7c\x77\x17\x3c\x80\x9f\x98\xe1\xe1\x53\xfc\x7e\x77\x37\x9d\xd6\x6c\x71\xcd\x56\x1c\x9f\x7c\xa0\x8f\xef\x58\x69\x9f\xcc\x66\x70\xe5\xe7\x80\x85\xac\x0c\x13\x95\x86\x92\x9b\xb5\xcc\x35\x18\x09\x25\xbb\xe6\x20\xaa\x5c\xdc\x88\xbc\x61\x05\xf0\x2a\xaf\xa5\xa8\x8c\x86\xa5\x92\x25\x68\xae\x6e\xc4\x82\xeb\x14\x29\x29\xfe\xad\xe1\xda\x00\xab\x72\x50\x5c\xd7\xb2\xd2\x1c\xcc\xb6\xe6\x96\x12\x76\xc5\x15\x49\xcd\x3b\x2a\x29\x30\x0d\x1b\x5e\x14\xf8\x2f\xaf\x16\x32\xe7\x4a\x23\x01\xa4\x97\x73\xf7\x7d\x29\x95\x1b\x68\xa9\xa5\xb6\x81\xa1\xa4\x96\x20\x1b\x05\xba\xa9\x6b\xa9\x50\xd2\x46\xb1\x4a\xe3\x67\x9c\x4e\xb0\x42\xfc\x93\x19\x21\x2b\xa4\xb6\x94\xaa\x64\x46\x67\xd3\xe9\x54\x94\xb6\x4b\x3c\x9d\x44\xf3\xad\xe1\x3a\x9a\x4e\x22\x5c\x3c\xbf\x35\xf8\xd1\xf2\x21\xaa\xd5\xec\xbf\xb4\xac\xb0\x61\x59\xda\x76\x21\xe9\xff\x33\x21\x1b\x23\x0a\xfc\x52\x71\x33\x5b\x1b\x53\xfb\xcf\x8d\xb2\xcd\xda\xa8\x85\xac\x6e\xdc\x47\x51\xad\x74\x34\x9d\x4e\xa2\x95\x30\xeb\x66\x9e\x2d\x64\x39\x5b\xc9\x27\xd7\xc2\xcc\xf0\x3f\x2f\x8c\x68\xbf\xc7\x4a\xce\x6a\x25\x8d\x9c\x37\x4b\xcb\x4a\x3d\x3f\xda\xc5\x7e\x38\xe8\xa1\x44\x51\xb0\x59\xd9\xdc\xee\x3d\xa9\xaf\x57\x33\xae\x94\x54\x8e\x35\x29\x57\x05\xcf\x56\xb2\x60\xd5\x2a\x93\x6a\x35\x5b\xa9\x7a\x11\x8d\x3e\x99\x95\xdc\xb0\x9c\x19\x86\xa3\xb1\xa1\x93\xfc\xc8\x32\xdb\x0e\x9e\x32\xca\xed\x01\xa3\x48\xcc\xc9\x74\x3a\xbd\x61\x0a\x75\xf7\x15\xce\x61\x59\x9a\xec\x63\xad\x44\x65\xe8\xbb\x55\x67\x76\x21\xcb\x9a\x29\x4e\x4d\x4e\x17\xd9\x73\x23\x05\xb5\xf4\x26\xce\xde\xf1\xcd\x47\x34\x4d\x45\x0f\x49\xb7\xd9\x3b\x59\x5f\x14\x52\x77\xad\xd9\x85\xac\xb7\xf4\x85\xc4\x96\xfd\xa6\x58\x8d\xfc\xcc\x1e\x9f\xf4\x07\x2f\xdb\xad\x73\xda\x00\xfc\x9b\xd9\x2d\xfa\xba\x02\x46\xfb\x47\xa5\x20\xcc\x23\x0d\x8d\xe6\xcb\xa6\xb0\xfb\x60\xd9\x54\x0b\xb4\x71\x0d\x66\xcd\x0c\x54\x1c\xb7\x81\x04\x59\x5b\xe7\x03\x12\xc7\xd6\x5c\x3d\xf1\x66\x86\x04\xe7\x4c\x0b\x9d\xc1\xcf\x52\x01\xbf\x65\x65\x5d\xf0\x14\xb6\xb2\x81\x52\xac\xd6\x06\x6a\xa6\x71\x0f\x06\x0c\x1b\x09\xac\x9d\x88\xe6\xa9\x95\xcc\x9b\x05\xd7\x48\x8e\x55\x56\xa6\xd9\x2b\x56\xe5\x05\xf2\xb8\x11\x66\x0d\x9c\x2d\xd6\xce\x95\x40\xec\x67\x4f\x60\x23\x14\xcf\xa1\xa9\x89\xa8\xae\xf9\x42\x2c\xc5\x02\x6a\x66\xd6\x19\xc4\xaf\x2d\x7f\x42\x23\xfd\x39\x9b\x17\x5b\x60\x50\x0a\x6d\xc8\x0d\x41\xce\xb5\x58\x55\x38\x54\x54\x37\xf2\x1a\xfd\x09\x87\x8f\xe4\x84\x5a\xb7\x65\x59\xe4\x48\xa7\x5b\x81\x36\xaa\x59\x18\x24\xe1\x25\x99\x25\xd3\xd9\xac\x95\xee\xa2\x10\xbc\x32\x7d\xe9\x1a\x09\x0b\x59\x14\xdc\x8e\xf3\x1e\xb0\xd8\xa2\x9f\x24\x72\x3c\x0f\xfc\xa1\xa8\x70\x41\x48\x50\x8b\x6a\x55\x90\xaf\x22\x59\x09\x94\x70\xc9\xad\x24\x03\x7e\x45\x65\xb8\x5a\xb2\x05\x1f\xd3\x04\x12\x6b\x27\x1b\xf6\xc2\x0d\x4e\x06\xfd\x5d\x82\x26\x7d\xe1\xd6\xb3\x90\xe5\x5c\x54\x56\x4e\xa5\x63\x31\x50\x6c\xea\x7c\xb5\x69\x54\x05\xc2\xe0\x8a\x91\xc1\x05\x2b\x0a\xae\xd0\x25\x33\xcf\x6c\x36\xb5\xcb\x39\x10\xe8\x6e\xba\xdb\x29\x56\xad\x38\x7c\x2f\xe0\xec\x1c\x32\xdf\xff\x2d\x29\xe3\xee\x6e\x3a\xd9\xed\xbe\x17\x19\x9d\x38\x7e\x3c\x00\xb4\x8b\xc8\x7c\xe3\x74\xb7\x7b\x82\xad\x77\x77\x53\x3a\x9a\xda\xd9\x4e\x98\x04\xad\x13\xe2\x80\xc3\x04\x82\x79\xe3\x85\xb9\x05\xe7\xe2\xb3\x0b\xfa\x37\x45\x6b\x78\xbc\xdb\xfd\x22\xb1\x0f\x7c\x2f\xb2\x4b\x3a\xc0\xae\xb6\x35\x77\xe3\x12\x88\xf7\x7a\xd0\xb1\x16\x74\x49\xc9\x1f\x24\xb0\x9b\x4e\x26\xfe\xd8\xb3\x8d\xc8\x2a\xcf\x06\x56\x8f\xdc\xe0\xec\xc9\x74\x32\x11\x4b\xdb\xf5\xbb\x73\xa8\x44\x61\x69\x4c\x9c\x3e\x2a\x51\x58\x32\xd3\xc9\xe4\x6e\xda\xb6\xfa\x19\xb2\x7b\x19\x4b\x52\x24\x31\x9d\xdc\x4d\x77\x3b\x92\x2a\xca\xf4\x2d\xee\xa4\x50\xb0\x76\xaf\x7e\x6f\xb8\x15\x2c\xa9\x2b\x94\xf5\xf7\x86\x0f\x89\x9b\xe4\x8d\xc4\x86\xd6\xa7\x51\xf6\xc1\x40\x7a\x4c\x6e\x36\x39\x54\x7c\x6f\xd9\x48\x78\x58\x5d\x3e\xbe\x68\xf7\xcd\x0e\xf5\xd3\x46\x1a\x41\x33\x89\x3f\xd0\x0b\x52\xff\x86\xcb\x71\x34\x0e\xa4\x77\xa0\x78\x3b\xe8\xa6\xd5\xa3\xce\xf6\xac\xc9\xb2\x43\xbd\x06\x54\x38\xa4\x44\x52\x63\xfb\xe4\xc6\xa9\x87\x9a\xad\xdc\x49\x4b\xa1\xb6\xf0\x8c\x79\x5e\x14\x2f\x6f\x17\xbc\x36\xb0\x51\xac\xd6\xe4\x57\x5b\xd1\x2d\x05\x2f\x72\x0c\x84\xdc\x86\xec\x76\xa8\x55\xac\x75\x48\x03\xc1\x46\xf6\x56\xe4\x79\xc1\x37\x4c\x51\x6c\xf9\x49\xfb\x68\x13\x43\xab\xba\x2e\xb6\xe8\x57\xd0\x57\x1a\x24\x5e\xb6\xbd\xed\x61\xc0\x6f\xb8\xda\xb6\x7a\xc4\x7d\x84\x6e\x43\x7b\x57\x31\x9b\xc1\xfb\x1a\x8f\x0a\x74\x97\x69\xe0\xad\x16\xac\x82\x39\xb7\x07\x0c\xcf\x71\xd8\x7c\x0b\x15\xea\xc0\x48\x6c\xe7\xb7\x8b\xa2\xc9\x79\x4e\xb1\xe5\x9c\x23\x0b\xb8\xe6\x9a\xe7\xd9\x81\x34\xe2\x8e\xa7\x14\xa2\x8f\x86\x99\x46\x47\x29\x44\x1f\x44\xb5\x8a\x92\xa9\xf7\x07\x8f\x03\x87\x30\x36\x1e\x06\xa4\x92\x76\xdc\x64\x59\x46\x51\x9c\xb5\x25\x51\xb9\xe6\xb3\x73\x28\x59\xfd\x99\x1e\x7d\x21\xf1\xef\xee\x50\xfd\xe8\xc7\xee\xf3\x57\x93\x49\x14\x58\x54\x74\x06\xbb\xbb\xd4\x0d\x25\xf5\x4f\xee\xa6\xd3\x09\x6a\xe3\x2b\xb2\x62\x6d\xd7\x92\x6c\xd9\xda\x91\xf7\xf8\x9a\x82\xbc\xc6\xc7\x9e\xb1\xcf\xfc\xf6\xcb\x33\xf8\x4e\x5e\x93\x29\xd6\xac\x12\x8b\xb8\x0b\x94\x96\x71\xf4\xd2\x93\x68\x35\xf8\xe8\x07\xfd\x08\x72\xc9\x35\x54\xd2\x00\xbf\x15\xda\x3c\x03\xcd\x79\xa8\xf8\xd6\x76\x74\xb6\x92\x11\x32\x95\x24\xce\x37\xe5\xbc\xe0\x86\xc7\x9e\x03\xfb\xac\x5b\x80\xa8\x16\x1d\xfb\xad\xf8\x4e\x17\x94\x58\x5a\x12\xe7\xe7\xd0\x13\x99\xdb\x69\x83\x1e\x16\xce\x03\xce\xe3\xc1\x2e\x89\xdf\x7a\x3d\x91\xd3\xb6\x7b\xc3\xe6\xbc\xe0\x79\x67\x0d\x94\x98\xad\xb8\xf1\xb6\x8b\xf6\xde\x4a\xcf\x9a\xf0\x66\xcd\xab\xf6\xa9\x0c\xcc\xd5\x11\x23\xab\x4b\x69\x97\xb9\x8d\xd0\x50\x67\xa0\x6c\x8f\x51\xca\x28\x16\x18\xc9\x28\xb1\xb0\xb1\x55\x60\xa5\x9b\xb5\x58\xac\xed\x50\xcd\xab\x21\x16\xdc\xf1\xed\x46\xfb\xe0\x45\x2a\x77\x78\x1f\xae\xca\xfa\x5a\x32\xe0\xf4\xd0\x2d\x0f\x78\xea\xe9\xd8\xba\x7e\xb7\x6f\x3a\x60\x2a\x75\xeb\xb4\x12\x57\x7c\xc1\xc5\x0d\x85\x79\x76\x89\x72\xd9\x5b\x77\x06\x1f\x39\x6f\xc9\x04\x54\xec\x03\x1f\x7d\xb6\xfb\x1e\x19\x45\x8b\xcc\xb9\x61\xa2\xb0\x91\xa2\xdf\x4e\x36\x45\x74\x11\x2e\x2b\x84\xd9\x66\xc7\x5c\x48\x6f\xed\xa1\x27\x79\xb0\x44\xff\xcf\xcf\xfc\xef\xf1\x33\xbd\x61\xe9\x70\xec\x37\xee\x76\x4e\x4c\x23\x7f\xb9\xfc\x70\x41\x91\xd4\x83\xf3\x48\x0c\xd7\x82\xe1\x25\xbb\xe6\xba\x3b\xe3\xbb\x63\x9a\xdd\x30\x51\xb0\x79\xc1\x29\x05\x58\x5d\x7e\xb8\x80\xdd\x6e\x30\x9a\x73\xbb\xa4\x4f\x39\xee\x48\x05\xa9\x86\xac\x29\x4d\xcd\xb2\xac\x07\x18\x64\x34\x88\x22\x86\x64\x6c\x22\xd4\x82\x0e\x3a\x6a\xd4\xe3\xe7\x2f\xe3\x94\x50\x6b\x43\x4f\x5f\xf0\xa5\x54\x3c\x46\x6e\xdf\x3a\x0c\xe3\x4a\xba\x18\x33\x49\x51\x19\x7b\xf3\x9c\x63\x3c\xc4\xab\x3c\xee\x35\xb7\xeb\xc9\xb2\x2c\x99\xfa\xa0\xee\x47\x9c\x91\xe6\xd9\x4d\x27\xb3\x19\xec\x76\x70\x25\xdf\xc8\x0d\x57\xd0\x5b\x16\x1c\x46\xda\x83\x46\xb9\xdb\xf9\xe1\xad\x25\x9d\x41\x7f\x59\x2d\x80\x11\xa3\x69\x75\x9b\x67\xc0\xf8\x70\xe7\x4f\x7e\xb2\xb0\x1a\xae\x3f\xe8\xe1\x22\x60\xdb\xe1\x65\x35\xd8\xc1\x65\x36\xd8\xa3\x27\x89\x2c\xcb\xb0\x11\x65\x37\x70\x94\x76\x02\xd9\x4f\x83\xdb\x00\x7c\x58\xdf\x6d\x38\x4f\x87\x57\x40\xe7\x41\xa9\xe7\x81\xf8\x00\xf6\xe4\xe7\x50\x8b\x83\xec\xd3\x91\xb1\x07\x46\x30\xbb\x91\xdd\x42\x4e\x5f\xc3\xbd\xac\xd2\x61\xa3\xe1\x71\x37\x55\x02\x61\x8e\x72\x2c\x91\xc5\xe4\xe6\xcf\xcd\x64\xbf\x22\xd1\xba\x97\xfe\x1c\x48\x92\x36\x14\xda\x49\x98\x10\x1d\x66\x43\x07\xa9\xd0\xdd\xb4\xcb\x66\xeb\x93\x13\xd9\x7e\x66\xe4\x24\x4c\xc6\x7c\xbf\x78\x67\x33\x38\x66\xf7\x20\xd0\xd1\xf5\x21\xca\x8c\x06\xb8\x1e\x3f\xa3\x7e\x2c\x9a\xb3\x90\xd5\x0d\x57\xe8\x26\xad\x7d\x93\x73\x3c\x34\x33\x9f\xad\x5a\x98\xab\xd1\x5c\x3d\xc9\x65\xc9\x44\x75\xac\x73\x06\x1f\x94\x28\x99\x12\xc5\xd6\x83\x50\x21\x62\x45\x46\x72\x6c\x1d\xf1\xd7\x43\xe3\xc0\xb5\x5c\xf2\x6f\x7b\x69\xf3\x7e\xb6\xec\xf4\xee\xd2\x64\x37\xe6\x94\x34\xb9\xd5\xe4\xb7\x23\x6a\x22\x97\x72\x92\x9a\x8e\x7a\x9f\x41\x3d\xd1\x08\xdf\x65\x4c\x51\xf7\xab\xc0\x57\x2c\x64\x77\xe6\x0d\x75\xab\x8b\xed\x49\x7a\x3a\xba\x90\x21\x45\x0d\x21\x19\xc7\x34\xa5\x6b\x42\x34\x4e\x06\x84\xa6\x21\x88\x34\xa4\xad\x57\xbc\xa8\xb9\xd2\x53\x5a\xc0\xe0\x11\x39\xec\x80\xca\x1c\x7c\x41\x20\x7b\xfb\x53\xb2\xdf\x01\xf9\x45\x37\x7a\x9d\xc2\x4d\x17\xa2\x95\x6d\x6c\x79\xd3\x03\x4f\x6c\x51\x8a\xc3\x35\xdf\x5a\x75\xe7\x18\xc5\xcd\xa5\x59\xa3\x8c\xfd\x2c\xae\x9c\x03\xf1\x75\xe2\xf2\x05\xec\x5a\x14\x50\xa0\xbe\x1c\x15\xe6\xb2\x24\x0b\x8a\x5e\xb0\x4a\x56\x62\xc1\x8a\x57\x9c\xe5\x5c\xfd\x8d\x6f\x7d\x32\x81\x13\x69\xe9\xa0\x5a\xe3\x72\x33\x4f\x62\xb1\xe0\x1e\xac\xe0\xc2\xac\xb9\x72\x33\xe3\x73\x14\xc5\x79\xbb\xd6\xdf\x84\x59\xff\xca\x8a\x86\x93\x37\xc4\xb5\x7e\x7e\xfa\x25\xb9\xb7\xe3\x08\x77\xf1\x75\xd2\x51\x70\x61\xba\x53\xdf\xc2\xdc\x3e\x34\x62\x24\x3c\xf8\xc1\x11\xe3\x3b\xbe\x09\x46\xd3\xf4\xb6\x36\xe0\xb0\x1e\x98\xb3\xc5\x35\x55\x38\xdd\x9e\x21\x20\x1d\xd7\x5a\x71\x9b\x4c\x65\xf0\xda\xba\x57\x07\xc9\x3b\x73\x15\x73\x81\x49\x96\x57\x81\x43\x9c\x8d\x84\x5c\xb0\x82\x60\xe9\x82\x19\xae\x60\x51\x48\xcd\x53\xea\xd4\xd1\x24\x03\xed\x71\x17\xe3\x63\x3a\x3e\x33\x6a\xb9\x90\x55\x75\x24\xec\xa4\x4e\x3e\xec\x8c\x47\xe2\xce\x70\xcb\x61\x84\x70\x00\x97\x06\xad\xf5\xf5\xca\x6e\x3f\x07\x9b\xf6\x6b\xad\x93\xc3\x34\x64\x0c\x5b\x9d\x4c\x6e\x98\x1a\xf2\x3e\x6d\xda\x71\x98\x98\xe3\x28\x07\x3d\x1e\x1b\x78\x7e\x18\x3c\x3a\xf1\xd1\xd8\x09\x4a\x31\x75\x9f\x31\x9f\x71\x6b\xba\xbb\xcb\x86\x20\xdd\x28\xec\x2a\xf6\x1b\x47\x3c\x60\x17\x69\x8e\x47\xa3\x41\xb0\x69\x57\x74\xd4\xb1\x51\x4a\x8b\x7f\xb2\x17\x92\x4e\x26\x93\xa4\x95\x50\x9c\x74\x18\xac\xf7\x79\xc1\xa7\xd6\x0d\xfa\x4d\xd6\x66\x2e\xbb\xfb\x02\x75\x78\xe2\x48\x1d\x88\xfb\x0c\x00\x8e\xe9\x31\xed\xe6\x9d\xdc\x79\x87\x8c\xbb\x04\xe5\x01\x6e\xd7\xfd\xf1\x10\xe7\xc8\xd9\xe9\x63\x9c\xe3\x67\xe7\xf1\xd3\xf0\xd4\x10\xc7\x9d\x53\x23\x67\x27\x39\x8e\xe3\x31\xce\xf8\xd9\x49\x01\x0b\x32\x73\xe2\xe1\x89\x5d\xdb\x40\x07\x8f\xf4\x07\x1d\x9f\x75\xb1\x1d\x3a\x3f\x43\xb5\xfd\xf1\x90\x67\x3c\x32\xf5\x11\xcf\xd1\xc8\xf4\xc4\x98\xf3\xde\x78\xe7\x68\x64\xda\xd3\xda\xb1\x75\x0c\x07\x3c\x43\x05\x9d\xe3\x91\xe9\x03\x0a\x38\xc7\x23\x53\xc7\x85\x3d\x88\xf5\x95\x0c\x83\x1d\x92\xf9\xd0\x69\x11\x88\x9c\x96\x7c\x84\x4a\x7c\xcd\xb7\x1a\x3e\x7f\xf1\x98\xde\x3d\xf4\x68\x8d\xf7\x94\xc0\xca\x1c\x1e\xdf\x17\x68\xd9\xc3\xa3\x66\x42\x75\x93\x4f\x27\x1e\xe1\xbb\xee\xc2\x2f\xcb\xde\xce\x01\x5f\x37\x1e\xdd\x5b\x98\xdb\x8c\x82\x93\xeb\x24\x73\x48\x66\xf2\x0c\x3c\xca\x37\x21\xc2\x2d\x26\x62\xbf\x52\xb0\x93\x74\xb5\x2c\x8a\xea\xa8\x6b\x18\xd9\x3d\x2e\x73\x38\xef\x22\xc5\xbf\x4a\x51\xc5\x8f\xcb\x3c\xed\x9a\x3e\xe0\x18\xa2\x9a\x65\x99\x03\xfe\xba\x1c\x12\x23\x9f\x87\xc1\x65\xaf\xae\xae\x3e\xfc\x1e\xb8\xcc\xd6\xdd\x49\xbc\x95\xb5\x2b\x38\x87\x88\xd5\x75\x21\x16\xf6\x4a\x91\xbd\x91\xf3\x0c\x16\x6b\xa6\x34\x37\xe7\x8d\x59\x3e\xf9\x4b\xd4\xa2\x6c\x38\xab\xc3\x15\xba\xa8\x09\xd6\xae\xc5\x6e\xd6\xfb\xd1\x37\x24\x26\x2b\xa8\x15\xcf\xf9\x52\x54\x3c\xb7\x97\x24\x74\x00\xb9\x05\xd3\xdc\x8b\xb9\xf5\x6f\xbd\xf4\x31\xb7\xf0\xf6\x86\x0f\x74\xc4\x12\x32\x4b\xdf\xe6\x04\xbd\xf8\x64\x00\x87\x1b\xa7\x6e\x15\x3f\xf4\xd8\x01\x71\x34\x07\x06\xbd\xba\x87\xc3\x0d\x0f\x7a\x89\xfe\x80\xfc\x8c\x8a\x79\xf0\x65\x7c\xc8\xf3\xa5\xe1\x2a\xde\x7f\x62\x2e\x3a\xd5\xc6\x81\x9a\x13\x4b\xe8\x70\x95\x27\xa1\x80\x0e\x42\xb2\xe0\x5e\x69\x81\xfb\xe6\x16\x43\xac\x4b\xd9\x20\x0f\xc9\x34\x08\x25\x5c\x6d\x02\x0f\x85\x11\x31\xb7\x5d\xe7\xa2\xca\x45\xb5\xb2\x21\x23\x0d\xcb\x5e\x50\x93\x8b\x17\x4b\x3f\xce\x42\xd0\xae\x7b\xf6\x2b\x57\x73\xf8\x6f\xb8\x92\x9f\xea\x9a\xab\xbb\xbb\x28\xc9\x3e\x30\xb3\xee\xf5\xc1\x86\x2b\x5e\xd6\x85\xbd\x2a\x18\x25\xde\x0a\xe2\x91\x4b\x52\x14\x26\xf6\x40\x46\xc7\xd1\x00\xd2\xe8\x82\x3b\x5c\x5e\x30\xa5\xad\x9d\xec\xc5\x81\xa4\x44\xec\xf8\x0b\x95\xc0\xfa\x11\xe0\x10\xde\x38\xb1\xce\x21\x40\x1c\x83\x8f\xce\x5b\x94\xfe\x1e\x49\x60\x27\x54\x6b\x23\x04\xd2\xda\x8f\xaf\x9a\xf9\x19\x7f\xc3\xe7\x2a\xc5\x94\x26\xe7\x4b\xd6\x14\x06\x8f\x39\x32\x10\x24\x66\xd1\x48\xb9\x84\x7d\x5f\x90\x02\x83\xb9\xcc\x6d\x4a\x83\xdf\x29\x27\xc0\xdc\x32\xb2\xf3\x44\x6d\x3a\x7a\x83\xee\x15\x49\xd9\xf6\xcc\x72\x17\x27\x94\xf4\x30\xd0\xb6\x92\x0d\xc8\x2c\x92\xfa\xd7\xa7\x4f\x33\x78\xbd\x0c\xf8\x0d\x60\x54\xda\x37\x5c\xd9\xeb\x97\xd8\xa3\x56\xf2\x46\x60\xbe\xbc\xa6\x1d\x45\x55\xb4\x39\x27\x6e\xa9\xd8\x88\xfd\xba\x60\x2c\x24\x6d\xaf\x5e\x75\xd4\x71\x15\xd9\x5b\xa6\xf4\x9a\xd9\x5b\x5d\x9e\xff\x92\x9a\xd0\x22\x75\xb3\x58\x70\x9e\x6b\x4a\xd0\xfe\xfa\xf1\xfd\x3b\x77\x8b\x33\xf7\x57\x2e\xdb\x8a\x9d\xe5\xdd\xb3\xd3\x68\x9e\x8f\x2f\x8b\x8a\xf9\x17\xa8\xae\xd4\xe7\x8d\xed\xca\xba\x87\x3d\x6a\x20\x2a\x6d\x38\xcb\xbd\xcc\xc8\x49\x86\x1e\x62\x28\x02\x69\xaf\x89\xa4\xb0\x21\x2f\xd8\x37\x03\x1b\x79\xa0\x56\x53\xf8\x8a\xdb\x2f\x14\x09\xb9\x9f\xdf\xec\xfd\x04\xb5\xb3\x5a\x3c\x43\x62\x5e\xa1\x77\x04\x86\x96\x9d\x00\xe9\x84\xc5\x2e\x71\x5f\xb6\xdd\x01\x2b\xc8\x78\x5e\xd8\x29\xdd\xd0\x97\x84\xc1\xb6\x84\xfc\x38\x14\x77\x9c\x3c\x0b\xbb\x9d\x07\x87\xad\x35\xc6\xf3\x96\x9c\x47\x11\x26\x9b\x8c\xcc\x26\x4e\xd0\x0d\xc6\x91\x73\x84\x4f\xd0\xfb\x45\x69\x78\xe4\xd1\x02\xd6\xde\xc8\x42\xfe\xfb\xee\xc1\xdb\x61\xb7\x0e\x8b\xf6\x74\xb1\x86\xa7\xe1\x7a\xea\xd8\x5d\xcb\xd9\xe3\xe5\x3a\x1d\xe8\x99\xfd\x82\x4f\x92\x16\x06\x99\xd8\xad\x71\x46\xf7\x38\x33\x32\x87\xd7\x18\x33\x56\xac\x08\x0e\x09\xcb\xbb\x5e\x1c\xe1\x3a\x30\xb3\x8e\x71\x4b\xfc\x1c\xf4\x22\x78\x1c\x27\x4e\x70\xd6\x28\x1c\xc7\xd8\x31\x69\x1b\x63\x94\x76\x82\xfe\xa6\xb3\x3b\xf2\x7e\x2a\x9e\x37\x4b\xf8\xfc\x65\xbe\x35\x3c\x71\xb6\xbe\x9b\xda\x20\x6d\x03\xa1\x09\xb5\xd0\xb9\xb7\xb3\x4f\x95\xd3\x2c\x52\x48\xe1\xc7\x4d\xf2\x6c\x1f\x5a\xa7\x28\x45\x8b\x7f\x22\xcf\x7f\xf9\xff\xff\xfe\x6f\x64\x42\x05\xaf\x70\x4c\x02\xff\x41\xcf\xc8\x1e\x9a\x25\x9c\xc3\xbc\x59\x7e\x3e\xc3\xc6\x2f\xfd\x7b\x65\xcb\xd2\x90\xe1\x2e\xe3\xa8\x05\x22\xad\x09\x3d\xfa\x41\x3f\x3a\x83\x05\xab\x2a\x69\xa0\xc6\x70\x07\x2a\x59\x3d\xb1\x3e\xce\x47\xf0\xd8\x31\x4a\x91\x78\xd2\x43\xaa\xdc\x55\xd9\x77\x7c\x13\x6f\x88\xbc\x95\x91\xf5\xa1\xe1\xda\xbb\x9a\xce\xc4\xf6\x02\x0a\x3c\xe1\x1f\x38\xcb\x99\x73\xa0\xff\x70\xee\x1c\xb5\xe8\x7a\x31\x23\xf4\x52\x38\x77\xee\xad\xd0\x3a\xaa\x40\xb9\x5d\x7e\xa1\x41\xd8\xbb\xe0\xfe\x42\xfc\x29\x77\x8e\xdd\xe5\x89\x60\xd2\x96\x55\x72\x9a\x13\xdd\x79\x24\x8b\xc4\x78\xdf\x0b\x10\x16\xee\xdb\x58\xdc\xdb\x48\xbc\xee\x88\x26\x10\x5a\x1b\xb8\x3b\x71\x4e\x88\xeb\xac\x9b\x61\x64\x74\xb7\xad\x28\x94\xb3\x5f\x7b\x24\x1c\x53\xd3\xa3\xd5\x93\x7b\x63\x92\x00\xc1\x3a\x12\x94\x10\x20\xd2\xe2\x11\x47\xcf\xff\xfd\xfc\xd6\xf2\x3f\x5c\x79\xb1\x24\xe9\xa5\x00\x1c\x83\xee\xef\x89\x3b\x6d\xc2\xd4\xb5\x0b\x6d\x14\xa6\xa6\x7b\xd9\xae\xbd\x5a\x66\xad\xe5\xea\xea\x83\x6f\xb5\x94\xd1\x86\xef\x03\xf6\x27\x01\x3a\x71\x74\x59\x83\xe9\x2e\x3c\x76\x47\x8c\xed\x32\x9e\xea\x4e\x72\xbe\xc4\xc4\x21\x43\xbf\x9d\xd9\x7b\xe8\x16\xbd\x42\x9f\x81\x69\x70\x97\xf9\xee\xad\x35\x48\x83\x6d\x60\x68\xfd\x86\x73\x29\xee\x62\xfb\x25\x67\xf9\xf3\xa2\x88\x89\xf8\x69\x37\x50\xfd\x6d\xf7\x25\x1e\x79\x29\x44\xce\x17\x28\x3c\x6e\x7d\xc8\x83\x2b\xf3\xe2\x8c\xfc\x7d\x8d\xbe\x2b\x7a\xda\xc2\xfb\xcf\x8b\x42\x6e\x3e\x55\xd7\x95\xdc\x54\x3f\x0b\x5e\xe4\x1a\xb4\x91\x35\x6d\xe3\xa6\x6a\x4f\x3a\xd2\xd6\x92\x09\x1b\x6c\x88\x65\x17\x65\xb4\xef\xaa\x34\x44\x85\xee\x1a\xe9\x0c\x27\x68\x09\x20\x05\xe7\x4c\xeb\x79\xe7\x4e\x6d\x6d\x7e\x32\x99\x1c\x72\x71\x06\x46\x35\x14\x73\xfa\x1b\x21\x28\x9a\x73\x08\x49\x86\x7e\xd9\xbe\x6e\xf0\x8e\x6f\x5e\x34\xcb\x25\x79\xfa\x24\x85\x1f\x15\xff\x76\xe8\xaa\x87\x9d\xf5\xb8\xbb\x1e\x74\xd8\x7b\x77\x48\xad\x82\x5a\x37\xb0\x1b\x50\x55\xe8\xa0\x1f\xea\xc9\x1d\x84\x1a\x1c\xb3\x2f\x58\xde\x87\x6f\x91\x81\x8e\xad\x36\xf9\xc7\x3c\xf5\x03\x53\xac\xd4\x3e\x09\xfa\x95\x29\x1d\x2b\xb4\x8b\xaf\x70\x0e\xdd\x73\xec\xfd\xad\xe1\x6a\xdb\x75\x57\xd9\xa7\xcb\x37\xd9\xdf\xb1\x31\xf6\x03\x82\x2e\xd3\x30\x33\xa2\x1b\x66\xe8\x82\xfc\x4e\x20\x45\x7a\xbc\x5d\x2c\xa1\xf2\xdd\xb2\x37\x92\xc2\x75\x88\xec\x22\x1d\xd4\xbe\xdb\xb9\xc7\xbf\xf0\xca\x4e\x1a\xd8\xc9\xdd\x08\x5a\x7c\x9c\x85\xf7\x15\x97\xcb\x03\x3e\xf8\xb7\x43\x3e\xec\xb2\xfe\x08\x23\xad\x25\xfc\x68\x51\x2e\x5f\x5d\xf7\x79\xe8\x93\xbd\xeb\xc4\xa3\x69\xd6\xa0\x17\x1e\xab\xab\x92\xcf\xd5\x3e\xe7\x68\xa3\x05\xa6\x69\x6f\xee\xe5\x18\x94\x71\xa9\x07\xd4\x4c\x07\x18\x1c\xf2\xa7\x83\x11\xfb\x58\x19\xb5\x0d\xbc\x06\x7d\xc3\xdb\xd0\x33\xbc\x2c\x85\xf9\x89\x52\xbf\xc0\x23\xbc\x57\xc2\x56\x42\xba\x96\x97\x55\x53\xea\xe7\x18\x7b\xea\x33\xf0\xad\x41\xf0\x13\xb8\x0c\x9f\x32\x6c\xd2\xa0\x5e\x6b\x5f\xd8\xca\xde\x72\xad\xd9\x8a\x27\xc9\x34\xac\xc1\x76\xaf\xf5\xb8\xf3\x7e\x08\x26\x19\xb9\x0c\xb2\x7f\xcc\x8c\x15\x63\xbb\xf0\x5c\x05\x11\xc3\xd1\xf2\xab\xf5\xf2\x07\xa5\xd7\x35\xd3\xb0\x66\x39\x8d\x1d\x2b\xb6\xda\x12\x5f\x0e\xd2\xbe\x68\x22\xaa\xe0\x55\xbd\xe0\x15\x40\x4c\xf6\x2c\x15\xf7\xda\x5c\xe6\x4f\xf5\xb6\xc6\x8b\x96\xb5\x52\xf5\xe2\xa0\x12\xdc\x2b\xe6\x12\x91\x7e\x45\xf7\x68\x2d\xf7\xbe\x52\xae\x97\x50\x90\x8c\x1c\x1d\xb2\xc7\xbf\x2d\xe6\x1e\xd2\x40\x63\x41\x71\x37\x15\xef\xde\x84\x5a\xac\x51\x27\x99\x7d\xc2\x0a\x2d\x51\x05\x6e\x43\x91\x8b\x6e\x54\x31\x3d\x3e\xbb\x77\xfb\x4f\x1a\x55\x44\xa9\xf3\xa8\x1f\x98\x59\x27\xf7\x0d\x6c\xb5\x12\xa5\x10\xa1\xcd\xe1\x8e\x8e\x92\xdf\x5d\x7b\x46\x12\xbf\xbf\xf6\x1c\x8c\xee\x50\xd4\x81\xd2\x73\x45\xd1\x1c\xb9\x12\x28\xc4\x8d\x7d\x79\xc1\x38\xa9\x95\xd2\x58\x08\x41\x54\xda\xb0\x6a\xc1\x33\xf8\x8d\x03\xbf\xad\xe9\xc5\x2e\x6a\xa3\x97\xbd\x4a\x4e\x11\x47\x37\x49\x2e\xf4\x42\xda\xb7\x1d\xf4\x56\x1b\x5e\xa6\x68\x5c\xb3\x19\x14\xe2\x9a\x17\x6d\xf9\xda\x02\x1d\xd1\x5a\x6a\x73\x66\x65\xd7\xd5\xa7\xbb\x15\xc4\xed\x54\xfe\x7a\xf0\x28\x38\xfb\xf0\xca\xb4\x58\xc2\x77\xde\xe4\x5e\x31\xfd\x41\xf1\xa5\xb8\x6d\x67\x4c\x21\xb2\x6f\x4f\x52\x70\xd9\xf2\x71\x4e\xcd\x67\xb3\x59\x04\xff\xaf\x95\x84\x3d\x40\x9a\x36\x6c\x6c\x54\x81\xd1\xa5\xe6\x2d\xb5\x93\xef\x78\xe1\xc1\xdd\x58\xc8\x13\x8f\x61\x69\x86\x92\x0a\x57\x3b\xa5\xcb\xc3\xd1\x3b\x49\x8a\x0c\x10\x6c\xba\x2e\x4f\x36\x60\xf1\x1e\x24\xb4\x91\xea\x3a\x05\x42\xc5\x61\xee\xb3\x0e\x51\xc1\x56\x36\x0a\xac\x5f\xa5\xa7\x02\x45\x18\x25\x21\x38\xf8\x40\x08\x16\xa3\xce\xe1\xfc\xc6\x3e\xa5\xc2\x7f\x90\x0b\x89\x2a\xe7\xb7\x87\x23\x9e\xfa\x31\xae\xb4\xbf\x9f\x36\x9c\x5a\xd9\x1f\x1d\x37\xf0\x5a\x6b\xbf\xb0\x7f\x14\x19\x4e\xdb\xea\x7f\xbd\xfd\x74\xf9\x26\x6e\x52\x08\xfb\xbf\x60\x9a\xa3\xfb\xb8\xbb\x8b\x92\x7e\x71\xff\x04\x6c\x77\x0f\x06\xee\xc1\xc5\xfb\x85\xfe\x93\xeb\xf7\x2d\xd4\x3b\x8c\x00\x1f\xaf\xe2\x1f\xd5\x7b\x5b\xcd\xff\xd3\x35\x3f\x86\x95\xbb\x5b\x02\x63\xaa\x4d\xf7\x43\xbf\x21\xc4\xbb\xbb\x3d\x60\x3d\x8f\xd7\xe3\x9c\x69\x0e\x8f\x71\x0f\x7f\xba\x7c\x93\xda\xb8\x1b\x7c\x3d\xd2\x37\xe3\xfe\xad\x30\x2e\x38\x3b\x87\xc7\x38\x80\xbe\xda\xf3\xc2\xc5\xea\xdd\xfd\x66\x7c\xe2\x02\x95\x0b\x73\xeb\xcb\x9e\x1f\x31\xd8\x5c\xc8\x6a\x29\x56\x8d\x72\x68\x8c\x0d\x15\xdc\xc6\x35\x12\xea\xa6\x28\xe8\x2d\x31\x3a\xe7\x78\x4e\x05\x48\xd9\xe0\xd1\xed\x63\x49\x77\x2c\x11\x14\x4e\xc7\x5e\xe9\xe3\xc9\x30\xc3\xc4\x58\xc1\x21\x1a\x19\xc0\x3b\x69\xdc\x9b\xb6\x48\x12\x69\x59\x4f\xb1\x66\x37\x1c\xfc\x1b\xfa\xc7\x43\x12\x3b\xcf\xdc\x16\xa4\xdc\x7b\x67\xf6\x15\x1b\xf4\xfc\x9e\xb5\x8d\x50\xdc\x41\xe0\xcc\x5f\x68\x22\xc7\x6f\xd6\x7c\xdb\x01\xed\xed\xdd\xf9\xe0\xad\x38\xae\xda\x03\xd7\x95\x8d\xfb\xb2\xa3\x52\x71\xf0\xfe\xc7\xf8\x79\x10\x82\x3a\x03\x9d\x5c\x51\xed\xc8\x4b\x94\x27\x44\x87\x7f\x5a\xb1\xb8\x8d\x78\x1c\xb8\x1b\xd6\x88\xf7\x6a\xba\x36\xfc\xb5\xf1\x2f\x1e\x00\x23\x57\x5f\xee\x75\xd8\xfb\x98\xd3\xa0\xb3\x39\x0a\x39\xed\x27\x3b\x0e\x6f\xa2\x68\x6c\x1f\x73\xf2\x30\x8c\x9b\x26\xbc\x34\x12\xde\x28\xdd\xc7\x9c\x02\x74\x95\xc2\x3c\x57\x08\x69\x9f\xac\xed\x7b\x17\x98\x9b\xff\xcb\xd3\xa7\x61\x45\x28\x85\x8d\x2b\x7b\xd8\xe4\xa6\x56\xdc\x10\x9b\x38\xa0\xb2\xb4\x28\xd1\xb1\x1b\xc8\x18\x5e\xd6\x76\xf7\xd1\x2a\xc2\xfd\xe7\x30\x6a\x28\x29\xfd\xe8\x78\xf4\x4c\xdc\x8b\x89\xf9\xab\x1f\x03\x98\xd8\xa0\xd8\x8f\x43\x62\xd4\xe7\xe1\x98\xd8\x43\x20\xae\x73\xfb\x43\x0e\x2f\xdf\xff\x3c\x8a\x72\xbd\xe3\x9b\x00\xfe\xb6\x1e\xc7\x22\x27\x28\xc7\x6d\x08\x6b\x9d\x88\x98\x0d\x00\x66\x2d\xd1\x28\x09\xee\x4a\xa8\xa0\xdc\x80\x84\x03\xd0\xe5\xfd\xdf\xee\x07\xe5\x7a\xc5\x86\x24\x85\x28\xb0\x99\x33\x78\xf4\x43\xfe\xc8\xa6\x01\xdd\x1c\xed\xdc\x84\x29\xea\xfa\x3e\x6b\x0e\xa4\x78\x00\xa8\x7d\xb4\x1b\xdf\xed\xff\x0e\x04\xd3\xf5\x00\x0a\x76\xb0\x8a\x90\xf1\xbd\xdb\x1e\x3f\x76\xf7\x94\xf7\xde\x62\x0f\x9d\xc4\xfe\x45\xab\x3f\x1b\xc4\x3e\x21\xd0\x39\x0a\x9f\x74\x37\x86\xda\x9c\xd4\x21\x28\xc0\x4e\xc7\xad\xed\x6f\x37\x50\xf5\x58\x09\xd9\x68\xc0\x89\x6c\xfa\x20\x97\x8e\xf0\xde\x11\x19\xe3\xc9\x9d\x12\x74\x46\xc5\x5b\x5b\xa3\xf2\x1b\xf6\x84\x65\x9d\x00\x62\x8f\x5c\xe2\x6a\xd1\x96\x89\x36\xea\x86\x15\x28\xe0\x28\x72\x60\x1e\x35\x4d\x8f\xbe\x93\x7f\x0c\xd8\xf6\xa0\xa0\xe2\xdf\xac\xb1\x84\x87\xcc\x68\x02\xbb\xdf\x6f\x3c\x43\x26\xec\xe0\x23\xa7\xf4\xd1\x86\x4c\x35\x53\xac\xe4\x86\x2b\xed\xc0\x4d\xfb\x4e\x8c\xcb\xb7\xec\x2d\x26\x5f\xdd\xd9\x7b\xdb\x50\xd3\x7d\xe5\x1e\x3c\x88\xb3\x7c\xa4\xf6\x16\x1f\xf4\x1d\xef\xf6\x5f\xce\xc4\xc0\x2e\x9a\x59\xfe\x87\x72\xb2\x9a\x72\xfa\x23\x1e\x69\x08\xbe\x97\x4d\x91\x57\x8f\x4c\x87\x6a\xd3\x2a\x7f\xf8\x16\x51\x88\xe8\xfd\x1c\x49\xe5\x92\x6d\x5c\x28\xd8\xf8\xcf\xed\xb3\xf6\x81\x6d\xed\x4b\xce\x1a\x5e\x5f\x74\xf6\xe6\xc3\x20\xc8\x8b\x6e\xc8\x94\xb5\xab\x93\x3a\x05\x9b\xb2\xee\x8b\x73\x0c\xee\x85\xee\x7e\xf5\x69\x48\xab\x58\xda\x0d\xe1\xba\x5d\xf2\x9a\xdb\x1f\xea\x72\xdf\x5f\x6b\x4c\x78\x5a\xbf\xd7\x51\x8e\x2f\x7c\xd9\xc1\x43\xb5\xd2\x5e\x0d\x8b\xbc\xfa\xa3\xc4\x8f\xa0\xa5\x7e\x8e\x5a\x54\xf7\xef\x2d\x84\xed\x6e\x49\x7f\x21\x13\xce\xda\x1e\x17\xac\xe4\x45\x77\x5b\xdc\xd9\x41\xa1\xdb\xef\x2e\x2c\x0b\x5e\xa1\x18\x1b\xef\x4b\x08\x8e\x8d\xec\x79\x9e\xc7\x47\x58\x49\x83\x1f\x52\x8a\x6f\x12\xca\xb4\x26\x21\x17\xce\x1a\x6d\x22\x52\x60\x08\xb5\x04\xa9\x20\xc6\x53\xed\x40\x68\xc9\xbe\x5c\x3d\xff\xa6\x74\x6f\x94\xed\x5d\xa4\x18\x5b\x85\xe3\x63\xf0\xf7\x35\x06\xec\xdb\x99\xf7\x92\x89\x82\x6e\xba\x78\xeb\x1e\xa3\x1f\xf5\x17\xea\x5c\x95\xdf\xd9\xb1\x29\xeb\x64\xfa\x20\x29\x12\x85\x24\x10\x54\xdf\x1c\x1e\xa4\x87\x51\xa9\x78\xfa\xdd\x5d\xb3\xbd\x6f\xfb\xe9\xb1\xdb\x3d\xb2\xe2\x72\x39\x56\xa9\x38\xdc\x42\xb6\xfb\xf8\x16\xea\xc8\xd6\xad\x8b\xa3\x21\xfe\xca\x5c\x67\xc6\xa1\xb5\x50\xf7\xbe\xb9\xb8\xb6\x7d\x7b\xb1\xb9\x06\x1d\x1e\x28\x8c\x5f\xb8\xd9\xed\x7c\x5f\xf7\x3a\x64\xf2\xcc\xf6\xf8\xee\x1c\xba\x47\xff\xc9\x95\xb4\x59\x49\xb0\x0f\x8e\xda\xde\x20\xe1\xc4\x8f\x1c\x36\xbf\x07\x1b\xe0\xe0\x24\x51\x3b\x8b\x5f\xf2\x11\x2b\x3c\xb0\x22\x47\xec\x1e\x43\x0c\x36\x72\x68\x91\x7f\xa6\x70\x4f\xe6\x2b\x74\x33\xac\x48\x0e\x18\x0c\x4d\xfa\x34\x0b\x0f\x8f\x29\x3b\x21\x9c\x83\x63\x87\x22\x1c\x7b\xeb\xd2\xdb\x75\x15\x84\x16\x16\x04\x8b\x56\xdc\x44\x44\x33\x38\xba\x6c\xcc\xbf\x77\x72\x29\x98\x37\x4b\xf7\x03\x73\x54\xee\x9d\x4e\x26\x46\x5e\x72\xf3\x7b\x63\x98\x53\x0e\xb6\x27\xf7\x54\x10\xfb\x95\xcc\xd9\x63\x78\x5f\x15\x5b\x7b\xa7\xd8\xc2\x13\x44\x84\x8a\x27\x7a\x8d\xe7\x3e\xcc\x5b\x64\x82\xee\xb5\x69\x09\xac\xb0\xbf\x43\x34\x91\x66\x1d\xde\x19\x94\xa5\x30\x78\x2a\xe6\x8d\x85\xc7\x31\x07\x12\x15\xd7\x1a\x1e\xcf\xdc\x8c\x76\xf9\xc3\x07\xd0\xf1\xb3\xed\x00\xce\x22\x15\xb8\x5f\x80\x6c\x6f\x40\xbd\xe3\x1b\x7f\x79\xef\x47\x97\x1f\xb8\x2e\x18\xc4\xbd\xd4\x0b\x56\xf3\x57\x57\x6f\xdf\xc4\x4b\x56\x68\x1e\x04\x42\x67\xe7\xfe\xd7\x24\xbd\x15\x58\x56\xc7\xf3\x91\x63\x61\x12\x51\x22\xa3\x60\x74\x2d\x12\x7e\xb8\x89\x52\x20\x9a\x6d\xb0\xf4\x82\x2e\xdc\xed\xff\x82\x60\xcb\x7a\x6f\xa9\x5d\x1e\x34\x5e\xb1\x9d\xfe\x4f\x00\x00\x00\xff\xff\x69\xfc\x4c\xd1\x4b\x54\x00\x00")

func baronNamePbBaronGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_baronNamePbBaronGotemplate,
		"baron/NAME.pb.baron.gotemplate",
	)
}

func baronNamePbBaronGotemplate() (*asset, error) {
	bytes, err := baronNamePbBaronGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "baron/NAME.pb.baron.gotemplate", size: 21579, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x71, 0x47, 0xae, 0x16, 0x84, 0x24, 0xf2, 0xce, 0xa1, 0xd5, 0xc9, 0x45, 0x49, 0xa2, 0x2d, 0x32, 0x96, 0x39, 0xc3, 0x49, 0xa9, 0x51, 0x95, 0xd6, 0x7e, 0xf7, 0xb4, 0x9d, 0x65, 0x4c, 0xd5, 0xf0}}
	return a, nil
}

var _cmdNameMainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\xc1\x8e\x9b\x30\x10\x86\xcf\xf8\x29\xa6\x96\x5a\x81\x94\x9a\x3d\x74\x7b\x48\x95\xc3\x36\xa4\xe9\x5e\x1a\x44\xd8\xbd\x56\x06\x06\x62\x15\x0c\xb2\x1d\x56\x11\xe2\xdd\x2b\x1b\x52\xd1\xee\x56\xbb\x27\x1b\xe6\x9f\xcf\xa3\xf9\x67\xc2\x10\xb6\x6d\x81\x50\xa1\x44\xc5\x0d\x16\x90\x5d\x20\xe3\xaa\x95\x0c\xa2\x03\xfc\x38\xa4\xb0\x8b\xee\x53\x46\xc2\x10\x12\x54\x67\x29\x85\xac\x26\x01\x3c\x89\xba\x86\xb6\x47\xf5\xa4\x84\x41\x30\x27\xa1\xa1\x14\x35\x3a\xf1\x23\x2a\x2d\x5a\xb9\x86\x61\x60\xf3\x7d\x1c\x17\x01\x88\xb8\xc1\x65\xd4\x7e\x8f\x23\x21\x1d\xcf\x7f\xf1\x0a\xa1\xe1\x42\x12\x22\x9a\xae\x55\x06\x7c\xe2\xd1\xb2\xe6\x15\xb5\x67\x63\xec\xd1\x6a\x4a\x88\x17\x86\x90\xda\x77\x8f\xa8\x7a\x91\xa3\x3b\x51\x11\x8f\x0e\x03\xbb\x77\xb9\x31\x37\x27\xf8\x38\x8e\x10\x6a\x17\xa3\x24\x20\xa4\xe7\x0a\xf2\x56\x96\xa2\x82\xe9\x2f\xdb\xba\x2f\x42\xca\xb3\xcc\x41\x48\x61\xfc\x00\x06\xe2\xd9\x47\xd9\xd1\x28\x21\xab\x47\xae\xfc\x0f\x53\x12\x8b\x30\x3b\x57\x77\x45\xa1\x56\x40\x0b\x7b\x67\xbc\x28\x14\x5d\x01\x5d\xdf\xde\x7c\xbe\xb1\x17\x27\x01\x2e\x0b\x68\xd0\x28\x91\x6b\xa8\x85\x36\x28\xc1\x2a\x51\x6b\x1a\xfc\x97\xfe\x3d\x4d\xe3\x19\x7e\x32\xa6\x5b\xb2\x6f\x1d\xdb\x0a\xde\x8e\xdb\x27\xf1\x76\xc6\x55\xaa\xcb\x97\xb8\x4f\x0e\x57\x25\xf1\x16\x7c\x0b\x0d\x9e\x53\x5d\x8f\x1f\x34\x02\xca\x5e\xa8\x56\x36\x28\x0d\xf4\x5c\x09\x9e\xd5\xa8\x57\x20\x4a\xd0\x68\x18\x7c\xab\x79\xa5\xe1\xc4\x7b\x84\x4e\x89\x56\x09\x73\x71\xc3\x01\x3b\xd9\x5b\xbd\x66\xc4\x13\xa5\x03\xc3\x7a\x03\xad\x66\x7b\x34\x28\x7b\x9f\x46\xbb\xaf\x0f\xfb\x9f\x77\x51\x94\xd0\xe0\xcb\x24\x78\xb7\x01\x4a\x6d\xff\xbd\x7f\x1b\x0e\x1b\xa7\x20\xde\xe8\x70\x6e\x3a\xfe\xc6\xc5\x87\x24\xb5\x20\x17\x7a\x06\xba\xf6\x16\x36\x50\x36\x86\x1d\x3b\x25\xa4\x29\x7d\xba\x7e\xaf\xe9\xca\xe5\x04\x57\xf6\x0b\xa5\xda\xec\x57\x2a\x5d\x3c\xb0\x2c\xf4\x05\x98\xf5\xe5\x15\xd8\xd5\xba\x05\x6c\x9c\x67\xd4\xee\xc7\x34\xa3\xd6\x9f\xae\xe0\x06\xaf\xae\xa1\xb6\xae\x98\x13\x5e\x26\x3f\x32\x44\xf9\x67\x51\xad\xbb\xd9\x05\xec\xac\xe8\x79\x64\x62\xae\x34\xfa\xd6\xea\x79\x19\x92\xb3\xf4\xa7\x0a\x02\x32\x92\xdf\x01\x00\x00\xff\xff\x94\x5b\xd1\x86\x24\x04\x00\x00")

func cmdNameMainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameMainGotemplate,
		"cmd/NAME/main.gotemplate",
	)
}

func cmdNameMainGotemplate() (*asset, error) {
	bytes, err := cmdNameMainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME/main.gotemplate", size: 1060, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x35, 0x3c, 0xe7, 0xd3, 0x41, 0x72, 0xb3, 0x2, 0x54, 0x67, 0xca, 0x27, 0xe1, 0x69, 0xde, 0x43, 0x43, 0xf1, 0x3e, 0x15, 0x71, 0xa3, 0x5a, 0xee, 0x8d, 0x2f, 0x19, 0x68, 0xc0, 0xea, 0xa4, 0x3c}}
	return a, nil
}

var _cmdNameClientMainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x4f\x4f\x1b\x3f\x10\x3d\xdb\x9f\xc2\x3f\x2b\xa0\xdd\x5f\x83\xc3\xa1\x5c\x90\x72\x68\x52\x95\x72\x28\x8a\x00\xb5\x07\xca\xc1\xf1\x4e\x1c\x0b\x63\x6f\xbd\x5e\xa0\x5a\xed\x77\xaf\xc6\xbb\xf9\x03\x41\x6d\x45\x21\x97\x4c\x66\x26\x6f\x5e\xde\xbc\xcc\x96\x52\xdd\x48\x0d\xec\x56\x1a\x47\xa9\xb9\x2d\x7d\x88\x2c\xa3\x84\x2b\xef\x22\x3c\x44\x4e\x09\x5f\x58\xa9\xf1\xdd\x7a\xcd\x29\x25\xe5\x9c\xf1\xa6\x11\xb3\xc9\x69\xea\x9e\xc9\xb8\x64\x07\x6d\x8b\x25\xae\xbd\xd7\x16\x84\xf6\x56\x3a\x2d\x7c\xd0\x23\x1d\x4a\xc5\x69\x4e\xe9\x9d\x0c\x08\x8c\x9f\x3f\x14\x45\x60\x55\x0c\xc6\x69\x4a\x96\x31\x96\xdb\x89\x9c\xd2\x45\xed\x14\x33\xce\xc4\x2c\x67\x0d\x25\x38\x5f\x5c\xa4\xea\x57\x19\xb2\xfd\x15\xc4\x90\x71\x0c\x85\x2c\x8a\xc0\x87\x8c\x1f\x1f\x1d\xbe\x3f\xc4\x40\x9f\xcf\xa6\x2c\xfb\x7c\x79\x39\xcb\x99\x35\x55\x04\xc7\xb0\x07\xaa\x8a\xe7\xbb\x70\x2b\x02\x43\xc6\x31\xdc\x86\x3b\x4a\x70\x08\xb4\x8b\xd3\xf6\x3c\x51\xb9\x2d\x9e\x33\x19\x2a\xc8\x72\x4a\x46\x23\x86\xec\x98\xf2\xce\x81\x8a\xc6\x3b\x4a\x30\x1e\x32\x08\x81\x1d\x8f\x53\x55\x7c\x34\xd2\x66\x94\xac\x65\x19\xf6\xb1\xf8\x66\xe2\xf2\xd4\x55\xa0\xea\x00\x59\xfe\x28\x3d\xb1\x5e\xdd\xa4\x5c\x4e\x89\x59\x24\xbc\xff\xc6\xcc\x19\x8b\x2c\x88\xf5\x5a\x7c\x92\x51\xda\x0c\x42\xc8\x29\x69\x29\x29\x60\x01\x21\x31\x11\x53\xeb\x13\x3f\x4a\x49\xd3\xdc\x9b\xb8\x64\x83\x08\x48\x47\xb0\xb6\xc5\x5c\x90\x4e\x03\x1b\x18\xcc\x0d\x22\x88\x0b\x08\x77\x46\x81\xf8\x02\x71\xe9\x8b\x0a\x57\x4d\x49\x43\x49\x3f\x69\x16\x8c\x8b\xd6\x65\xfc\xaa\x69\xb6\xdb\xcf\xe4\x2d\xb4\xad\x68\x9a\x13\x8f\x21\x1b\x98\x3e\x75\x8d\x3b\x20\xa5\x75\x28\x12\x51\xf1\x01\x07\xf5\x6e\x13\x13\xa9\x6e\x74\xf0\xb5\x2b\x52\x75\x34\x62\x01\x7e\xd4\x50\x45\x4a\x08\x1a\xc8\x38\x56\xce\x1f\x81\x9e\x77\xf5\xcb\x9f\xe5\x6a\x66\xf7\xbd\xb9\x0c\xde\xf5\x1b\xb0\x06\x1c\x22\xa4\xdc\x49\x28\xd5\x34\x65\xd6\x9b\x28\xe7\xe2\x0c\xee\x4f\xce\x67\xd3\xae\x90\xa1\x52\x38\x7f\x57\xdc\x1d\x75\x51\x5e\xe2\xeb\x0d\xd8\x93\x21\xcf\x28\x90\xa9\xf8\x30\x64\xfb\xe6\x8f\x23\x16\x19\xbf\x9a\x20\x9c\xd8\x70\xbb\x66\x7f\xa9\x33\xc2\x8e\xf7\xee\xbe\x3b\x9e\xa8\xad\xa8\xae\x77\xf6\x6f\xe0\x01\xaa\xda\xc6\xf1\xde\xbb\x6e\xc0\xff\xbe\x8e\xdb\x6b\x5d\x9b\x7f\x25\xbd\x5e\x0b\xb2\x11\xfc\xb9\x59\x4f\x16\xb0\x16\xb6\xfb\xbb\xbc\x8e\xa4\x6f\x24\xe6\xdb\xc8\xd8\xf9\x18\x0f\xd3\x13\x1f\xe3\x55\x7a\xd6\xc7\x9b\x42\xb6\x3a\x6d\x2f\xf2\x72\x6f\xe5\x0d\xdc\xeb\x58\x79\x83\xf7\x06\x56\x7e\x09\xf8\xef\x77\x90\x6e\x22\xb8\xa2\xdd\x0a\x68\xdb\x9d\xfe\xd4\x82\x3f\xf4\xd1\x21\x3c\x78\xed\x57\x7a\xd8\xfc\x0a\x00\x00\xff\xff\x75\x41\x06\xfe\xa9\x07\x00\x00")

func cmdNameClientMainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameClientMainGotemplate,
		"cmd/NAME-client/main.gotemplate",
	)
}

func cmdNameClientMainGotemplate() (*asset, error) {
	bytes, err := cmdNameClientMainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME-client/main.gotemplate", size: 1961, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xaf, 0x7b, 0x8d, 0xe, 0xdd, 0xd0, 0xc1, 0xd3, 0x20, 0xed, 0xa4, 0x9c, 0x43, 0x65, 0xd5, 0x93, 0x9, 0x9, 0xf, 0x68, 0x20, 0x10, 0x43, 0xb5, 0x1b, 0xae, 0xed, 0x66, 0x7d, 0xe4, 0xdd, 0x57}}
	return a, nil
}

var _serverServerGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x4d\x6f\xdb\x38\x13\x3e\x8b\xbf\x62\x2a\xf4\x20\x03\xae\x74\x78\x6f\x41\x73\x68\x93\xbe\xdb\x00\x4d\x6a\x38\xc6\xee\x99\x16\xc7\x34\x11\x99\xd4\x0e\x29\x3b\x81\xa0\xff\xbe\x18\xea\xc3\x76\xd2\x78\x3f\x2e\xb6\xc4\x99\x79\xf8\xcc\x33\x1f\x2a\x0a\xb8\x71\x0a\x41\xa3\x45\x92\x01\x15\xac\x5f\x60\x2d\xc9\xd9\x1c\x6e\x7f\xc2\xc3\xcf\x15\x7c\xbb\xbd\x5b\xe5\xa2\x28\x60\x89\xd4\x58\x6b\xac\xee\x1d\xe0\x60\xaa\x0a\xdc\x1e\xe9\x40\x26\x20\x84\xad\xf1\xb0\x31\x15\x46\xe7\xdf\x91\xbc\x71\xf6\x0a\xda\x36\x1f\x9e\xbb\xee\xc4\x00\xb7\x32\xe0\xa9\x95\xdf\xbb\x4e\x88\x5a\x96\x4f\x52\x23\x78\xa4\x3d\x92\x10\x66\x57\x3b\x0a\x90\x89\x24\xad\x9c\x4e\x45\x92\x5a\x0c\xc3\x5f\xb1\x0d\xa1\x3e\x7d\x2e\xea\x9a\xdc\x26\x15\x22\x29\x0a\xf8\x9f\x82\x85\xa4\xf0\x22\x92\x54\x3b\xa7\x2b\xcc\xb5\xab\xa4\xd5\xb9\x23\x5d\x68\xaa\xcb\xc1\x6f\xc5\xc4\x1f\x91\xf6\xa6\x44\x91\xd4\x6b\x48\xdb\x36\x5f\x7c\xbd\x8b\x17\x2f\x64\xd8\xc2\xa7\xae\xe3\x5b\xda\x36\x3f\x3f\x84\xc2\xf7\x61\xa9\x98\x09\x21\xa2\x98\x76\x63\x34\x94\xce\x06\x69\xac\x87\xb0\x45\x20\xfc\xb3\x31\x84\x0a\x36\x06\x2b\xe5\x61\xe3\x08\x46\x25\xe5\x98\x67\x78\xa9\x71\x8c\xf6\x81\x9a\x32\x40\x2b\x92\xef\xab\xd5\xe2\x8b\x52\xc4\x47\xc6\x6a\x91\xdc\xe2\xba\xd1\x67\x27\xbf\x2d\x17\x37\xa7\x07\x9d\x10\x9b\xc6\x96\xf0\x80\x87\x6f\x56\xd5\xce\xd8\xe0\x33\xbf\x2f\xa1\x5e\xe7\x6d\x9b\x0f\x79\xe6\x0f\x72\x87\x5d\xf7\x18\x2f\x9f\xb1\x6d\x72\xe6\x7b\x8b\x02\xbe\x36\xde\x58\xf4\x1e\x94\xdb\x49\x63\xf3\x78\xf8\x07\xc9\x7a\x94\x0a\x0e\x26\x6c\x61\x67\x94\xaa\xf0\x20\x09\x7d\x0e\x8f\xd8\xd7\xcd\x94\x58\x9c\x1a\xb4\x13\x09\x53\xb8\x1e\xad\x39\x03\x0d\x38\x4c\x6e\xd6\x57\x62\xe4\x70\xbc\x73\x2f\x89\x4b\xdf\xb6\x24\xad\x46\xf8\x68\xe0\xea\x1a\xa6\x24\xee\x31\x6c\x9d\xf2\x5c\x0a\x91\x24\x6d\xbb\x72\x3f\xdc\x01\x09\x3e\x9a\x21\xbf\x09\xf0\x9a\x53\xbc\x97\x4f\xd8\xb6\x6f\x8c\x3d\x81\xa4\x6d\xd1\x2a\x06\x62\x32\x38\xa9\x71\x75\x7d\xa6\x4e\xfb\x8f\xc9\xbc\xb9\xe7\x0a\x00\xe0\x02\xc9\xf9\x09\x87\x4e\x1c\xf5\xf6\x58\x61\xc9\xa3\x79\x2c\xd1\xaf\xa5\xdf\x4a\xab\x2a\x24\xff\x46\xfb\x63\x36\xe7\x15\x38\x36\xc8\xe4\xc1\xc9\x13\x86\x86\x2c\x4c\x67\xdc\x53\x3c\xff\x8d\x05\x1f\x24\x05\x0f\x12\x2c\x1e\x80\x27\x6e\xe8\xdf\x39\xe8\xe5\xe2\x66\x7a\x91\x56\x81\x04\xc5\xcd\x3a\x9c\xf5\x94\xc3\x16\x19\xa9\x96\xde\xa3\xe2\x29\xe1\x76\x67\xe7\xca\x69\x8d\xd4\x77\xee\xb2\xb1\x59\xb9\xd1\xc3\x34\xcc\xb8\x1f\xb9\x79\xae\x8e\xdc\x1f\xf0\x30\x36\xcf\xec\x55\xad\x5e\xb7\xfd\xd0\x59\xf7\x58\x6e\xa5\x35\xa5\xac\x8e\xbd\x85\x44\x11\x75\x27\x9f\x30\x63\x33\x20\x91\xa3\x21\xe2\xce\x06\x24\x6a\xea\x30\xca\x9a\x8b\x44\xbb\x89\xc2\x64\xfe\xde\x5b\x33\x46\x1b\x42\xe3\x90\x42\x65\x7c\xe0\xad\xda\xc7\x71\x66\x59\xcc\x25\xa9\x9c\xce\x17\x64\x6c\xa8\x6c\x96\x06\x92\xd6\xf3\x4e\x49\xe7\x90\x46\xc1\xf8\x41\x2a\x45\xe9\x1c\xca\x8d\xce\xa7\x89\x67\xf0\x64\xc7\x84\x59\xf7\x51\x03\xbc\x6f\x9e\x59\x84\x64\x97\xf7\x4c\xb2\xb4\x88\x30\xfd\x2a\x2c\xd2\x79\xef\x3e\xd0\xfc\x3f\xd3\x88\x96\xfc\xce\x2a\x7c\x9e\x5d\x08\x2d\x77\xaa\x32\x16\xdf\x47\xb8\xe9\x1d\x2e\x61\xf0\x8f\xa9\x2e\x60\x2c\x7a\x87\x4b\x18\xfe\x65\xb7\x76\xd5\xfb\x10\x8f\xd1\x7e\x09\x21\x90\x2c\x2f\x70\x58\xb1\x79\x16\xf5\x8d\x3d\xf1\xf9\x53\xef\xf9\x23\x56\xf0\x8b\x55\x51\xe8\xec\xac\x1a\x73\xd8\xcd\x44\xd2\x65\x43\xc9\x79\x51\xc3\x54\xcb\x7f\x51\x72\x0e\x7c\x55\xf1\x71\xe9\x73\x42\xdb\x61\xff\xf0\xea\xe2\xf3\xa9\xdb\x8e\xf3\xfa\xf7\xa4\x47\xc0\x39\x6c\x4f\x39\xc7\x89\xfd\x2f\x9c\x39\x30\x9d\x9f\x52\x1e\x3f\x42\xcc\xa6\xb2\x73\x1e\x24\x26\x6e\x31\x0c\x7c\xb2\x34\x94\xf5\x2f\x9c\xcd\x26\xfa\x7e\xb8\x06\x6b\xaa\x78\xed\x94\x0d\x12\xf1\x6b\xbf\x8c\x44\x12\x57\x62\xe2\x69\x7f\xa2\x08\x23\xf5\x9f\xb0\x73\x41\xe2\x26\xe0\x2f\xfc\x34\x25\x14\x67\xa4\x5e\xe7\x4b\xd4\x4c\x88\xde\xf9\x14\x66\x7e\x0e\x9e\xf6\x67\xbd\xe0\xf3\x5e\xca\xca\x9e\xaa\xb7\x6c\xec\x07\x71\x2e\x12\x3e\x1b\xd6\xe7\xf3\xa7\x7e\x17\x74\x42\xfc\x15\x00\x00\xff\xff\x3e\x27\xbb\x94\x5f\x09\x00\x00")

func serverServerGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_serverServerGotemplate,
		"server/server.gotemplate",
	)
}

func serverServerGotemplate() (*asset, error) {
	bytes, err := serverServerGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/server.gotemplate", size: 2399, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x32, 0xd1, 0x43, 0xe9, 0x21, 0xb2, 0xcb, 0xf3, 0x35, 0x29, 0x4c, 0xfd, 0x37, 0x21, 0x32, 0x8f, 0x70, 0xd5, 0xb3, 0xa1, 0xa3, 0x6b, 0x13, 0xf6, 0xad, 0x9b, 0x37, 0x4, 0xc6, 0xb5, 0xe6, 0xf}}
	return a, nil
}

var _serviceHooksGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x50\xbe\xd5\x88\x7c\x53\x7b\x23\xec\xee\xeb\x5d\x93\xac\x80\x18\xe7\x2d\x3b\x9b\x1a\x9a\xf1\xbe\x42\xcf\xdc\x4a\x85\x6b\xe0\x79\x6b\x0e\x7c\x8b\x51\x0e\xba\xec\x2c\x90\xa4\x63\x4c\x7f\x00\x00\x00\xff\xff\xe8\xb0\x07\xec\x3e\x00\x00\x00")

func serviceHooksGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_serviceHooksGotemplate,
		"service/hooks.gotemplate",
	)
}

func serviceHooksGotemplate() (*asset, error) {
	bytes, err := serviceHooksGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service/hooks.gotemplate", size: 62, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xac, 0x1f, 0xe5, 0x64, 0xee, 0xef, 0x70, 0x78, 0x57, 0x74, 0xa7, 0xc9, 0x31, 0xc3, 0xd8, 0x85, 0xb7, 0xc3, 0xb5, 0xdc, 0xe2, 0x3f, 0x3b, 0x91, 0xaf, 0x20, 0x61, 0xd7, 0xa9, 0xfa, 0xc1, 0xb9}}
	return a, nil
}

var _serviceMiddlewaresGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0d\x80\x20\x10\x05\xd0\xde\x29\xae\xa6\xf0\x0f\xe3\x04\x08\x5f\x42\x04\xce\x1c\x44\x0b\xc2\xee\xbe\x39\xe1\xe4\x20\xe5\xf4\xa6\x0d\x89\x2d\xe9\x9d\x07\x3a\xed\xcd\x81\x18\xac\x4f\xf1\x83\x1d\x35\xc7\x58\xf8\x79\x63\xdf\x93\xca\xa5\x26\x41\x23\xc5\x61\xad\xed\x0f\x00\x00\xff\xff\x78\x96\x32\xf7\x47\x00\x00\x00")

func serviceMiddlewaresGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_serviceMiddlewaresGotemplate,
		"service/middlewares.gotemplate",
	)
}

func serviceMiddlewaresGotemplate() (*asset, error) {
	bytes, err := serviceMiddlewaresGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service/middlewares.gotemplate", size: 71, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf0, 0x65, 0xf6, 0xa7, 0xb2, 0xf, 0xed, 0xb5, 0x20, 0x48, 0xf3, 0xc3, 0xea, 0x42, 0x43, 0xf8, 0x89, 0xdf, 0x98, 0x2c, 0x20, 0xb4, 0x8c, 0x62, 0xdb, 0xe3, 0x6d, 0xf9, 0x92, 0x9c, 0xa6, 0xef}}
	return a, nil
}

var _serviceServiceGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\xd6\xd7\x52\x08\x4e\x4d\x55\x48\x4f\xcd\x4b\xcf\xcf\xce\x2c\xd1\x2f\x4e\x2d\x2a\xcb\x4c\x4e\xd5\x2f\x49\xcd\x2d\xc8\x49\x2c\x49\x2d\xd6\x4b\xcf\x57\x48\xcb\x2f\x52\x48\xce\x4f\x49\x55\xd0\xd2\xaf\xad\xe5\x02\x04\x00\x00\xff\xff\x83\x0c\x7f\x72\x35\x00\x00\x00")

func serviceServiceGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_serviceServiceGotemplate,
		"service/service.gotemplate",
	)
}

func serviceServiceGotemplate() (*asset, error) {
	bytes, err := serviceServiceGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service/service.gotemplate", size: 53, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x42, 0x66, 0x3f, 0xe7, 0xfb, 0x13, 0xd6, 0x89, 0x21, 0xa4, 0x89, 0x63, 0xaf, 0x76, 0x8b, 0xd3, 0x99, 0xab, 0x96, 0x1d, 0x35, 0xfa, 0x50, 0xf9, 0x59, 0x84, 0xf5, 0xa3, 0x13, 0xf5, 0xb7, 0x5f}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"baron/NAME.pb.baron.gotemplate":  baronNamePbBaronGotemplate,
	"cmd/NAME/main.gotemplate":        cmdNameMainGotemplate,
	"cmd/NAME-client/main.gotemplate": cmdNameClientMainGotemplate,
	"server/server.gotemplate":        serverServerGotemplate,
	"service/hooks.gotemplate":        serviceHooksGotemplate,
	"service/middlewares.gotemplate":  serviceMiddlewaresGotemplate,
	"service/service.gotemplate":      serviceServiceGotemplate,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"baron": &bintree{nil, map[string]*bintree{
		"NAME.pb.baron.gotemplate": &bintree{baronNamePbBaronGotemplate, map[string]*bintree{}},
	}},
	"cmd": &bintree{nil, map[string]*bintree{
		"NAME": &bintree{nil, map[string]*bintree{
			"main.gotemplate": &bintree{cmdNameMainGotemplate, map[string]*bintree{}},
		}},
		"NAME-client": &bintree{nil, map[string]*bintree{
			"main.gotemplate": &bintree{cmdNameClientMainGotemplate, map[string]*bintree{}},
		}},
	}},
	"server": &bintree{nil, map[string]*bintree{
		"server.gotemplate": &bintree{serverServerGotemplate, map[string]*bintree{}},
	}},
	"service": &bintree{nil, map[string]*bintree{
		"hooks.gotemplate":       &bintree{serviceHooksGotemplate, map[string]*bintree{}},
		"middlewares.gotemplate": &bintree{serviceMiddlewaresGotemplate, map[string]*bintree{}},
		"service.gotemplate":     &bintree{serviceServiceGotemplate, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
