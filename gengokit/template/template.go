// Code generated by go-bindata. DO NOT EDIT.
// sources:
// NAME-service/baron/NAME.pb.baron.gotemplate (21.558kB)
// NAME-service/cmd/NAME/main.gotemplate (1.06kB)
// NAME-service/cmd/NAME-client/main.gotemplate (1.916kB)
// NAME-service/server/server.gotemplate (2.399kB)
// NAME-service/service/hooks.gotemplate (62B)
// NAME-service/service/middlewares.gotemplate (71B)
// NAME-service/service/service.gotemplate (53B)

package template

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _baronNamePbBaronGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7c\x6f\x93\xdb\x36\x92\xf7\x6b\xe9\x53\x74\x58\x49\x4c\xfa\xa1\x29\x3f\x57\x75\x57\x7b\xe3\xd2\x55\xc5\x13\x27\xf1\xae\xff\xad\x3d\x4e\xaa\xce\xe5\xf2\x42\x22\x24\xe1\x86\x22\x68\x00\x1c\x8d\x56\x37\xdf\xfd\xaa\xd1\x00\x09\x4a\x24\x47\x93\xe4\xd5\xd5\x4d\x55\x62\x09\x04\x1a\x8d\xee\x46\xa3\xfb\xd7\xa0\x66\x33\xb8\x94\x39\x87\x35\x2f\xb9\x62\x86\xe7\xb0\xd8\xc3\x82\x29\x59\x66\xf0\xe3\x5b\x78\xf3\xf6\x0a\x5e\xfc\xf8\xf2\x2a\x9b\xce\x66\xf0\x9e\xab\xba\x2c\x45\xb9\xa6\x0e\xb0\x13\x45\x01\xf2\x86\xab\x9d\x12\x86\x83\xd9\x08\x0d\x2b\x51\x70\xdb\xf9\x57\xae\xb4\x90\xe5\x05\x1c\x0e\x99\xfb\x7c\x77\x17\x3c\x80\x1f\x99\xe1\xe1\x53\xfc\x7e\x77\x37\x9d\x56\x6c\x79\xcd\xd6\x1c\x9f\xbc\xa3\x8f\x6f\xd8\xd6\x3e\x99\xcd\xe0\xca\xcf\x01\x4b\x59\x1a\x26\x4a\x0d\x5b\x6e\x36\x32\xd7\x60\x24\x6c\xd9\x35\x07\x51\xe6\xe2\x46\xe4\x35\x2b\x80\x97\x79\x25\x45\x69\x34\xac\x94\xdc\x82\xe6\xea\x46\x2c\xb9\x4e\x91\x92\xe2\x5f\x6b\xae\x0d\xb0\x32\x07\xc5\x75\x25\x4b\xcd\xc1\xec\x2b\x6e\x29\x61\x57\x5c\x91\xd4\xbc\xa5\x92\x02\xd3\xb0\xe3\x45\x81\xff\xf2\x72\x29\x73\xae\x34\x12\x40\x7a\x39\x77\xdf\x57\x52\xb9\x81\x96\x5a\x6a\x1b\x18\x4a\x6a\x05\xb2\x56\xa0\xeb\xaa\x92\x0a\x25\x6d\x14\x2b\x35\x7e\xc6\xe9\x04\x2b\xc4\x3f\x99\x11\xb2\x44\x6a\x2b\xa9\xb6\xcc\xe8\x6c\x3a\x9d\x8a\xad\xed\x12\x4f\x27\xd1\x62\x6f\xb8\x8e\xa6\x93\x08\x17\xcf\x6f\x0d\x7e\xb4\x7c\x88\x72\x3d\xfb\x2f\x2d\x4b\x6c\x58\x6d\x6d\xbb\x90\xf4\xff\x99\x90\xb5\x11\x05\x7e\x29\xb9\x99\x6d\x8c\xa9\xfc\xe7\x5a\xd9\x66\x6d\xd4\x52\x96\x37\xee\xa3\x28\xd7\x3a\x9a\x4e\x27\xd1\x5a\x98\x4d\xbd\xc8\x96\x72\x3b\x5b\xcb\x27\xd7\xc2\xcc\xf0\x3f\x2f\x8c\xe8\xb8\xc7\x5a\xce\x2a\x25\x8d\x5c\xd4\x2b\xcb\x4a\xb5\x18\xed\x62\x3f\x9c\xf4\x50\xa2\x28\xd8\x6c\x5b\xdf\x1e\x3d\xa9\xae\xd7\x33\xae\x94\x54\x8e\x35\x29\xd7\x05\xcf\xd6\xb2\x60\xe5\x3a\x93\x6a\x3d\x5b\xab\x6a\x19\x0d\x3e\x99\x6d\xb9\x61\x39\x33\x0c\x47\x63\x43\x2b\xf9\x81\x65\x36\x1d\x3c\x65\x94\xdb\x03\x46\x91\x98\x93\xe9\x74\x7a\xc3\x14\xea\xee\x0b\xcc\x61\xb5\x35\xd9\x87\x4a\x89\xd2\xd0\x77\xab\xce\xec\x52\x6e\x2b\xa6\x38\x35\x39\x5d\x64\x3f\x18\x29\xa8\xa5\x33\x71\xf6\x86\xef\x3e\xa0\x69\x2a\x7a\x48\xba\xcd\xde\xc8\xea\xb2\x90\xba\x6d\xcd\x2e\x65\xb5\xa7\x2f\x24\xb6\xec\x37\xc5\x2a\xe4\x67\xf6\xf8\xac\x3f\x78\xd1\x6c\x9d\xf3\x06\xe0\xdf\xcc\x6e\xd1\x97\x25\x30\xda\x3f\x2a\x05\x61\x1e\x69\xa8\x35\x5f\xd5\x85\xdd\x07\xab\xba\x5c\xa2\x8d\x6b\x30\x1b\x66\xa0\xe4\xb8\x0d\x24\xc8\xca\x3a\x1f\x90\x38\xb6\xe2\xea\x89\x37\x33\x24\xb8\x60\x5a\xe8\x0c\x7e\x92\x0a\xf8\x2d\xdb\x56\x05\x4f\x61\x2f\x6b\xd8\x8a\xf5\xc6\x40\xc5\x34\xee\xc1\x80\x61\x23\x81\x35\x13\xd1\x3c\x95\x92\x79\xbd\xe4\x1a\xc9\xb1\xd2\xca\x34\xfb\x85\x95\x79\x81\x3c\xee\x84\xd9\x00\x67\xcb\x8d\x73\x25\x10\xfb\xd9\x13\xd8\x09\xc5\x73\xa8\x2b\x22\xaa\x2b\xbe\x14\x2b\xb1\x84\x8a\x99\x4d\x06\xf1\x4b\xcb\x9f\xd0\x48\x7f\xc1\x16\xc5\x1e\x18\x6c\x85\x36\xe4\x86\x20\xe7\x5a\xac\x4b\x1c\x2a\xca\x1b\x79\x8d\xfe\x84\xc3\x07\x72\x42\x8d\xdb\xb2\x2c\x72\xa4\xd3\xae\x40\x1b\x55\x2f\x0d\x92\xf0\x92\xcc\x92\xe9\x6c\xd6\x48\x77\x59\x08\x5e\x9a\xae\x74\x8d\x84\xa5\x2c\x0a\x6e\xc7\x79\x0f\x58\xec\xd1\x4f\x12\x39\x9e\x07\xfe\x50\x94\xb8\x20\x24\xa8\x45\xb9\x2e\xc8\x57\x91\xac\x04\x4a\x78\xcb\xad\x24\x03\x7e\x45\x69\xb8\x5a\xb1\x25\x1f\xd2\x04\x12\x6b\x26\xeb\xf7\xc2\x35\x4e\x06\xdd\x5d\x82\x26\x7d\xe9\xd6\xb3\x94\xdb\x85\x28\xad\x9c\xb6\x8e\xc5\x40\xb1\xa9\xf3\xd5\xa6\x56\x25\x08\x83\x2b\x46\x06\x97\xac\x28\xb8\x42\x97\xcc\x3c\xb3\xd9\xd4\x2e\xe7\x44\xa0\x87\xe9\xe1\xa0\x58\xb9\xe6\xf0\xad\x80\x8b\x39\x64\xbe\xff\x6b\x52\xc6\xdd\xdd\x74\x72\x38\x7c\x2b\x32\x3a\x71\xfc\x78\x00\x68\x16\x91\xf9\xc6\xe9\xe1\xf0\x04\x5b\xef\xee\xa6\x74\x34\x35\xb3\x9d\x31\x09\x5a\x27\xc4\x01\x87\x09\x04\xf3\xc6\x4b\x73\x0b\xce\xc5\x67\x97\xf4\x6f\x8a\xd6\xf0\xf8\x70\xf8\x59\x62\x1f\xf8\x56\x64\xef\xe9\x00\xbb\xda\x57\xdc\x8d\x4b\x20\x3e\xea\x41\xc7\x5a\xd0\x25\x25\x7f\x90\xc0\x61\x3a\x99\xf8\x63\xcf\x36\x22\xab\x3c\xeb\x59\x3d\x72\x83\xb3\x27\xd3\xc9\x44\xac\x6c\xd7\x6f\xe6\x50\x8a\xc2\xd2\x98\x38\x7d\x94\xa2\xb0\x64\xa6\x93\xc9\xdd\xb4\x69\xf5\x33\x64\xf7\x32\x96\xa4\x48\x62\x3a\xb9\x9b\x1e\x0e\x24\x55\x94\xe9\x6b\xdc\x49\xa1\x60\xed\x5e\xfd\xd6\x70\x2b\x58\x52\x57\x28\xeb\x6f\x0d\xef\x13\x37\xc9\x1b\x89\xf5\xad\x4f\xa3\xec\x83\x81\xf4\x98\xdc\x6c\x72\xaa\xf8\xce\xb2\x91\x70\xbf\xba\x7c\x7c\xd1\xec\x9b\x03\xea\xa7\x89\x34\x82\x66\x12\x7f\xa0\x17\xa4\xfe\x15\x97\xe3\x68\x9c\x48\xef\x44\xf1\x76\xd0\x4d\xa3\x47\x9d\x1d\x59\x93\x65\x87\x7a\xf5\xa8\xb0\x4f\x89\xa4\xc6\xe6\xc9\x8d\x53\x0f\x35\x5b\xb9\x93\x96\x42\x6d\xe1\x19\xf3\x43\x51\xbc\xb8\x5d\xf2\xca\xc0\x4e\xb1\x4a\x93\x5f\x6d\x44\xb7\x12\xbc\xc8\x31\x10\x72\x1b\xb2\xdd\xa1\x56\xb1\xd6\x21\xf5\x04\x1b\xd9\x6b\x91\xe7\x05\xdf\x31\x45\xb1\xe5\x47\xed\xa3\x4d\x0c\xad\xaa\xaa\xd8\xa3\x5f\x41\x5f\x69\x90\xf8\xb6\xe9\x6d\x0f\x03\x7e\xc3\xd5\xbe\xd1\x23\xee\x23\x74\x1b\xda\xbb\x8a\xd9\x0c\xde\x56\x78\x54\xa0\xbb\x4c\x03\x6f\xb5\x64\x25\x2c\xb8\x3d\x60\x78\x8e\xc3\x16\x7b\x28\x51\x07\x46\x62\x3b\xbf\x5d\x16\x75\xce\x73\x8a\x2d\x17\x1c\x59\xc0\x35\x57\x3c\xcf\x4e\xa4\x11\xb7\x3c\xa5\x10\x7d\x30\xcc\xd4\x3a\x4a\x21\x7a\x27\xca\x75\x94\x4c\xbd\x3f\x78\x1c\x38\x84\xa1\xf1\xd0\x23\x95\xb4\xe5\x26\xcb\x32\x8a\xe2\xac\x2d\x89\xd2\x35\x5f\xcc\x61\xcb\xaa\x4f\xf4\xe8\x33\x89\xff\x70\x87\xea\x47\x3f\x76\x9f\xbf\x9a\x4c\xa2\xc0\xa2\xa2\x0b\x38\xdc\xa5\x6e\x28\xa9\x7f\x72\x37\x9d\x4e\x50\x1b\x5f\x90\x15\x6b\xbb\x96\x64\xc3\xd6\x81\xbc\xc7\x97\x14\xe4\x35\x3e\xf6\x8c\x7d\xe2\xb7\x9f\x9f\xc1\x37\xf2\x9a\x4c\xb1\x62\xa5\x58\xc6\x6d\xa0\xb4\x8a\xa3\x17\x9e\x44\xa3\xc1\x47\xdf\xe9\x47\x90\x4b\xae\xa1\x94\x06\xf8\xad\xd0\xe6\x19\x68\xce\x43\xc5\x37\xb6\xa3\xb3\xb5\x8c\x90\xa9\x24\x71\xbe\x29\xe7\x05\x37\x3c\xf6\x1c\xd8\x67\xed\x02\x44\xb9\x6c\xd9\x6f\xc4\x77\xbe\xa0\xc4\xca\x92\x98\xcf\xa1\x23\x32\xb7\xd3\x7a\x3d\x2c\xcc\x03\xce\xe3\xde\x2e\x89\xdf\x7a\x1d\x91\xd3\xb6\x7b\xc5\x16\xbc\xe0\x79\x6b\x0d\x94\x98\xad\xb9\xf1\xb6\x8b\xf6\xde\x48\xcf\x9a\xf0\x6e\xc3\xcb\xe6\xa9\x0c\xcc\xd5\x11\x23\xab\x4b\x69\x97\xb9\x8d\x50\x53\x67\xa0\x6c\x8f\x51\xca\x28\x96\x18\xc9\x28\xb1\xb4\xb1\x55\x60\xa5\xbb\x8d\x58\x6e\xec\x50\xcd\xcb\x3e\x16\xdc\xf1\xed\x46\xfb\xe0\x45\x2a\x77\x78\x9f\xae\xca\xfa\x5a\x32\xe0\xf4\xd4\x2d\xf7\x78\xea\xe9\xd0\xba\x7e\xb7\x6f\x3a\x61\x2a\x75\xeb\xb4\x12\x57\x7c\xc9\xc5\x0d\x85\x79\x76\x89\x72\xd5\x59\x77\x06\x1f\x38\x6f\xc8\x04\x54\xec\x03\x1f\x7d\x36\xfb\x1e\x19\x45\x8b\xcc\xb9\x61\xa2\xb0\x91\xa2\xdf\x4e\x36\x45\x74\x11\x2e\x2b\x84\xd9\x67\x63\x2e\xa4\xb3\xf6\xd0\x93\x3c\x58\xa2\xff\xe7\x67\xfe\xf7\xf8\x99\xce\xb0\xb4\x3f\xf6\x1b\x76\x3b\x67\xa6\x91\x3f\xbf\x7f\x77\x49\x91\xd4\x83\xf3\x48\x0c\xd7\x82\xe1\x5b\x76\xcd\x75\x7b\xc6\xb7\xc7\x34\xbb\x61\xa2\x60\x8b\x82\x53\x0a\xb0\x7e\xff\xee\x12\x0e\x87\xde\x68\xce\xed\x92\x2e\xe5\xb8\x25\x15\xa4\x1a\xb2\xa2\x34\x35\xcb\xb2\x0e\x60\x90\xd1\x20\x8a\x18\x92\xa1\x89\x50\x0b\x3a\xe8\xa8\x51\x8f\x9f\x3e\x0f\x53\x42\xad\xf5\x3d\x7d\xce\x57\x52\xf1\x18\xb9\x7d\xed\x30\x8c\x2b\xe9\x62\xcc\x24\x45\x65\x1c\xcd\x33\xc7\x78\x88\x97\x79\xdc\x69\x6e\xd6\x93\x65\x59\x32\xf5\x41\xdd\xf7\x38\x23\xcd\x73\x98\x4e\x66\x33\x38\x1c\xe0\x4a\xbe\x92\x3b\xae\xa0\xb3\x2c\x38\x8d\xb4\x7b\x8d\xf2\x70\xf0\xc3\x1b\x4b\xba\x80\xee\xb2\x1a\x00\x23\x46\xd3\x6a\x37\x4f\x8f\xf1\xe1\xce\x9f\xfc\x68\x61\x35\x5c\x7f\xd0\xc3\x45\xc0\xb6\xc3\x8b\xb2\xb7\x83\xcb\x6c\xb0\x47\x47\x12\x59\x96\x61\x23\xca\xae\xe7\x28\x6d\x05\x72\x9c\x06\x37\x01\x78\xbf\xbe\x9b\x70\x9e\x0e\xaf\x80\xce\x83\x52\xcf\x13\xf1\x01\x1c\xc9\xcf\xa1\x16\x27\xd9\xa7\x23\x63\x0f\x8c\x60\x76\x23\xdb\x85\x9c\xbf\x86\x7b\x59\xa5\xc3\x46\xc3\xe3\x76\xaa\x04\xc2\x1c\x65\x2c\x91\xc5\xe4\xe6\xcf\xcd\x64\xbf\x20\xd1\xaa\x93\xfe\x9c\x48\x92\x36\x14\xda\x49\x98\x10\x9d\x66\x43\x27\xa9\xd0\xdd\xb4\xcd\x66\xab\xb3\x13\xd9\x6e\x66\xe4\x24\x4c\xc6\x7c\xbf\x78\x67\x33\x18\xb3\x7b\x10\xe8\xe8\xba\x10\x65\x46\x03\x5c\x8f\x9f\x50\x3f\x16\xcd\x59\xca\xf2\x86\x2b\x74\x93\xd6\xbe\xc9\x39\x9e\x9a\x99\xcf\x56\x2d\xcc\x55\x6b\xae\x9e\xe4\x72\xcb\x44\x39\xd6\x39\x83\x77\x4a\x6c\x99\x12\xc5\xde\x83\x50\x21\x62\x45\x46\x32\xb6\x8e\xf8\xcb\xa9\x71\xe0\x5a\xde\xf3\xaf\x47\x69\xf3\x71\xb6\xec\xf4\xee\xd2\x64\x37\xe6\x9c\x34\xb9\xd1\xe4\xd7\x11\x35\x91\x4b\x39\x4b\x4d\xa3\xde\xa7\x57\x4f\x34\xc2\x77\x19\x52\xd4\xfd\x2a\xf0\x15\x0b\xd9\x9e\x79\x7d\xdd\xaa\x62\x7f\x96\x9e\x46\x17\xd2\xa7\xa8\x3e\x24\x63\x4c\x53\xba\x22\x44\xe3\x6c\x40\x68\x1a\x82\x48\x7d\xda\xfa\x85\x17\x15\x57\x7a\x4a\x0b\xe8\x3d\x22\xfb\x1d\xd0\x36\x07\x5f\x10\xc8\x5e\xff\x98\x1c\x77\x40\x7e\xd1\x8d\x5e\xa7\x70\xd3\x86\x68\xdb\x26\xb6\xbc\xe9\x80\x27\xb6\x28\xc5\xe1\x9a\xef\xad\xba\x73\x8c\xe2\x16\xd2\x6c\x50\xc6\x7e\x16\x57\xce\x81\xf8\x3a\x71\xf9\x02\x76\x2d\x0a\x28\x50\x5f\x8e\x0a\x73\x59\x92\x05\x45\x2f\x59\x29\x4b\xb1\x64\xc5\x2f\x9c\xe5\x5c\xfd\x8d\xef\x7d\x32\x81\x13\x69\xe9\xa0\x5a\xe3\x72\x33\x4f\x62\xb9\xe4\x1e\xac\xe0\xc2\x6c\xb8\x72\x33\xe3\x73\x14\xc5\xbc\x59\xeb\x6f\xc2\x6c\x7e\x65\x45\xcd\xc9\x1b\xe2\x5a\x3f\x3d\xfd\x9c\xdc\xdb\x71\x80\xbb\xf8\x3a\x69\x29\xb8\x30\xdd\xa9\x6f\x69\x6e\x1f\x1a\x31\x12\x1e\xfc\xe0\x88\xf1\x0d\xdf\x05\xa3\x69\x7a\x5b\x1b\x70\x58\x0f\x2c\xd8\xf2\x9a\x2a\x9c\x6e\xcf\x10\x90\x8e\x6b\x2d\xb9\x4d\xa6\x32\x78\x69\xdd\xab\x83\xe4\x9d\xb9\x8a\x85\xc0\x24\xcb\xab\xc0\x21\xce\x46\x42\x2e\x58\x41\xb0\x74\xc1\x0c\x57\xb0\x2c\xa4\xe6\x29\x75\x6a\x69\x92\x81\x76\xb8\x8b\xf1\x31\x1d\x9f\x19\xb5\x5c\xca\xb2\x1c\x09\x3b\xa9\x93\x0f\x3b\xe3\x81\xb8\x33\xdc\x72\x18\x21\x9c\xc0\xa5\x41\x6b\x75\xbd\xb6\xdb\xcf\xc1\xa6\xdd\x5a\xeb\xe4\x34\x0d\x19\xc2\x56\x27\x93\x1b\xa6\xfa\xbc\x4f\x93\x76\x9c\x26\xe6\x38\xca\x41\x8f\x63\x03\xe7\xa7\xc1\xa3\x13\x1f\x8d\x9d\xa0\x14\x53\xf7\x19\xf3\x19\xb7\xa6\xbb\xbb\xac\x0f\xd2\x8d\xc2\xae\xe2\xb8\x71\xc0\x03\xb6\x91\xe6\x70\x34\x1a\x04\x9b\x76\x45\xa3\x8e\x8d\x52\x5a\xfc\x93\x9d\x90\x74\x32\x99\x24\x8d\x84\xe2\xa4\xc5\x60\xbd\xcf\x0b\x3e\x35\x6e\xd0\x6f\xb2\x26\x73\x39\xdc\x17\xa8\xc3\x13\x47\xea\x44\xdc\x17\x00\x30\xa6\xc7\xb4\x9d\x77\x72\xe7\x1d\x32\xee\x12\x94\x07\xb8\x5d\xf7\xc7\x43\x9c\x91\xb3\xd3\xc7\x38\xe3\x67\xe7\xf8\x69\x78\x6e\x88\xe3\xce\xa9\x81\xb3\x93\x1c\xc7\x78\x8c\x33\x7c\x76\x52\xc0\x82\xcc\x9c\x79\x78\x62\xd7\x26\xd0\xc1\x23\xfd\x41\xc7\x67\x55\xec\xfb\xce\xcf\x50\x6d\x7f\x3c\xe4\x19\x8e\x4c\x7d\xc4\x33\x1a\x99\x9e\x19\x73\xde\x1b\xef\x8c\x46\xa6\x1d\xad\x8d\xad\xa3\x3f\xe0\xe9\x2b\xe8\x8c\x47\xa6\x0f\x28\xe0\x8c\x47\xa6\x8e\x0b\x7b\x10\xeb\x2b\x19\x06\x3b\x24\xf3\xbe\xd3\x22\x10\x39\x2d\x79\x84\x4a\x7c\xcd\xf7\x1a\x3e\x7d\xf6\x98\xde\x3d\xf4\x68\x8d\xf7\x94\xc0\xb6\x39\x3c\xbe\x2f\xd0\xb2\x87\x47\xc5\x84\x6a\x27\x9f\x4e\x3c\xc2\x77\xdd\x86\x5f\x96\xbd\x83\x03\xbe\x6e\x3c\xba\xb7\x34\xb7\x19\x05\x27\xd7\x49\xe6\x90\xcc\xe4\x19\x78\x94\x6f\x42\x84\x1b\x4c\xc4\x7e\xa5\x60\x27\x69\x6b\x59\x14\xd5\x51\xd7\x30\xb2\x7b\xbc\xcd\x61\xde\x46\x8a\x7f\x95\xa2\x8c\x1f\x6f\xf3\xb4\x6d\x7a\x87\x63\x88\x6a\x96\x65\x0e\xf8\x6b\x73\x48\x8c\x7c\x1e\x06\x97\xfd\x72\x75\xf5\xee\xf7\xc0\x65\xb6\xee\x4e\xe2\x2d\xad\x5d\xc1\x1c\x22\x56\x55\x85\x58\xda\x2b\x45\xf6\x46\xce\x33\x58\x6e\x98\xd2\xdc\xcc\x6b\xb3\x7a\xf2\x97\xa8\x41\xd9\x70\x56\x87\x2b\xb4\x51\x13\x6c\x5c\x8b\xdd\xac\xf7\xa3\x6f\x48\x4c\x96\x50\x29\x9e\xf3\x95\x28\x79\x6e\x2f\x49\xe8\x00\x72\x0b\xa6\xb9\x17\x73\xeb\xde\x7a\xe9\x62\x6e\xe1\xed\x0d\x1f\xe8\x88\x15\x64\x96\xbe\xcd\x09\x3a\xf1\x49\x0f\x0e\x37\x4c\xdd\x2a\xbe\xef\xb1\x03\xe2\x68\x0e\x0c\x7a\x75\x07\x87\xeb\x1f\xf4\x02\xfd\x01\xf9\x19\x15\xf3\xe0\xcb\xf0\x90\x1f\x56\x86\xab\xf8\xf8\x89\xb9\x6c\x55\x1b\x07\x6a\x4e\x2c\xa1\xd3\x55\x9e\x85\x02\x3a\x08\xc9\x82\x7b\x5b\x0b\xdc\xd7\xb7\x18\x62\xbd\x97\x35\xf2\x90\x4c\x83\x50\xc2\xd5\x26\xf0\x50\x18\x10\x73\xd3\x75\x21\xca\x5c\x94\x6b\x1b\x32\xd2\xb0\xec\x39\x35\xb9\x78\x71\xeb\xc7\x59\x08\xda\x75\xcf\x7e\xe5\x6a\x01\xff\x0d\x57\xf2\x63\x55\x71\x75\x77\x17\x25\xd9\x3b\x66\x36\x9d\x3e\xd8\x70\xc5\xb7\x55\x61\xaf\x0a\x46\x89\xb7\x82\x78\xe0\x92\x14\x85\x89\x1d\x90\xd1\x71\xd4\x83\x34\xba\xe0\x0e\x97\x17\x4c\x69\x6b\x27\x47\x71\x20\x29\x11\x3b\xfe\x4c\x25\xb0\x6e\x04\xd8\x87\x37\x4e\xac\x73\x08\x10\xc7\xe0\xa3\xf3\x16\x5b\x7f\x8f\x24\xb0\x13\xaa\xb5\x11\x02\x69\xed\xc7\x57\xcd\xfc\x8c\xbf\xe1\x73\x95\x62\x4a\x93\xf3\x15\xab\x0b\x83\xc7\x1c\x19\x08\x12\xb3\x68\xa4\x5c\xc1\xb1\x2f\x48\x81\xc1\x42\xe6\x36\xa5\xc1\xef\x94\x13\x60\x6e\x19\xd9\x79\xa2\x26\x1d\xbd\x41\xf7\x8a\xa4\x6c\x7b\x66\xb9\x8b\x13\x4a\x7a\x18\x68\x5b\xc9\x06\x64\x16\x49\xfd\xeb\xd3\xa7\x19\xbc\x5c\x05\xfc\x06\x30\x2a\xed\x1b\xae\xec\xf5\x4b\xec\x51\x29\x79\x23\x30\x5f\xde\xd0\x8e\xa2\x2a\xda\x82\x13\xb7\x54\x6c\xc4\x7e\x6d\x30\x16\x92\xb6\x57\xaf\x5a\xea\xb8\x8a\xec\x35\x53\x7a\xc3\xec\xad\x2e\xcf\xff\x96\x9a\xd0\x22\x75\xbd\x5c\x72\x9e\x6b\x4a\xd0\xfe\xfa\xe1\xed\x1b\x77\x8b\x33\xf7\x57\x2e\x9b\x8a\x9d\xe5\xdd\xb3\x53\x6b\x9e\x0f\x2f\x8b\x8a\xf9\x97\xa8\xae\xd4\xe7\x8d\xcd\xca\xda\x87\x1d\x6a\x20\x4a\x6d\x38\xcb\xbd\xcc\xc8\x49\x86\x1e\xa2\x2f\x02\x69\xae\x89\xa4\xb0\x23\x2f\xd8\x35\x03\x1b\x79\xa0\x56\x53\xf8\x82\xdb\x2f\x14\x09\xb9\x9f\xdf\xec\xfd\x04\x75\xb0\x5a\xbc\x40\x62\x5e\xa1\x77\x04\x86\x6e\x5b\x01\xd2\x09\x8b\x5d\xe2\xae\x6c\xdb\x03\x56\x90\xf1\x3c\xb7\x53\xba\xa1\x2f\x08\x83\x6d\x08\xf9\x71\x28\xee\x38\x79\x16\x76\x9b\x07\x87\xad\x35\xc6\x79\x43\xce\xa3\x08\x93\x5d\x46\x66\x13\x27\xe8\x06\xe3\xc8\x39\xc2\x27\xe8\xfd\xa2\x34\x3c\xf2\x68\x01\x1b\x6f\x64\x21\xff\x5d\xf7\xe0\xed\xb0\x5d\x87\x45\x7b\xda\x58\xc3\xd3\x70\x3d\x75\xec\xae\xe5\x1c\xf1\x72\x9d\xf6\xf4\xcc\x7e\xc6\x27\x49\x03\x83\x4c\xec\xd6\xb8\xa0\x7b\x9c\x19\x99\xc3\x4b\x8c\x19\x4b\x56\x04\x87\x84\xe5\x5d\x2f\x47\xb8\x0e\xcc\xac\x65\xdc\x12\x9f\x83\x5e\x06\x8f\xe3\xc4\x09\xce\x1a\x85\xe3\x18\x3b\x26\x4d\x63\x8c\xd2\x4e\xd0\xdf\xb4\x76\x47\xde\x4f\xc5\x8b\x7a\x05\x9f\x3e\x2f\xf6\x86\x27\xce\xd6\x0f\x53\x1b\xa4\xed\x20\x34\xa1\x06\x3a\xf7\x76\xf6\xb1\x74\x9a\x45\x0a\x29\x7c\xbf\x4b\x9e\x1d\x43\xeb\x14\xa5\x68\xf1\x4f\xe4\xf9\x2f\xff\xff\xdf\xff\x8d\x4c\xa8\xe0\x25\x8e\x49\xe0\x3f\xe8\x19\xd9\x43\xbd\x82\x39\x2c\xea\xd5\xa7\x0b\x6c\xfc\xdc\xbd\x57\xb6\xda\x1a\x32\xdc\x55\x1c\x35\x40\xa4\x35\xa1\x47\xdf\xe9\x47\x17\xb0\x64\x65\x29\x0d\x54\x18\xee\x40\x29\xcb\x27\xd6\xc7\xf9\x08\x1e\x3b\x46\x29\x12\x4f\x3a\x48\x95\xbb\x2a\xfb\x86\xef\xe2\x1d\x91\xb7\x32\xb2\x3e\x34\x5c\x7b\x5b\xd3\x99\xd8\x5e\x40\x81\x27\xfc\x03\x67\xb9\x70\x0e\xf4\x1f\xce\x9d\xa3\x16\x5d\x2f\x66\x84\x5e\x09\xe7\xce\xbd\x15\x5a\x47\x15\x28\xb7\xcd\x2f\x34\x08\x7b\x17\xdc\x5f\x88\x3f\xe7\xce\xb1\xbb\x3c\x11\x4c\xda\xb0\x4a\x4e\x73\xa2\x5b\x8f\x64\x91\x18\xef\x7b\x01\xc2\xc2\x7d\x13\x8b\x7b\x1b\x89\x37\x2d\xd1\x04\x42\x6b\x03\x77\x27\xce\x09\x71\x93\xb5\x33\x0c\x8c\x6e\xb7\x15\x85\x72\xf6\x6b\x87\x84\x63\x6a\x3a\x5a\x3d\xb9\x37\x26\x09\x10\xac\x91\xa0\x84\x00\x91\x06\x8f\x18\x3d\xff\x8f\xf3\x5b\xcb\x7f\x7f\xe5\xc5\x92\xa4\x97\x02\x70\x0c\xba\xbf\x27\xee\xb4\x09\x53\xd7\x36\xb4\x51\x98\x9a\x1e\x65\xbb\xf6\x6a\x99\xb5\x96\xab\xab\x77\xbe\xd5\x52\x46\x1b\xbe\x0f\xd8\x9f\x04\xe8\xc4\xe8\xb2\x7a\xd3\x5d\x78\xec\x8e\x18\xdb\x65\x38\xd5\x9d\xe4\x7c\x85\x89\x43\x86\x7e\x3b\xb3\xf7\xd0\x2d\x7a\x85\x3e\x03\xd3\xe0\x36\xf3\x3d\x5a\x6b\x90\x06\xdb\xc0\xd0\xfa\x0d\xe7\x52\xdc\xc5\xf6\xf7\x9c\xe5\x3f\x14\x45\x4c\xc4\xcf\xbb\x81\xea\x6f\xbb\xaf\xf0\xc8\x4b\x21\x72\xbe\x40\xe1\x71\xeb\x43\x1e\x5c\x99\x17\x67\xe4\xef\x6b\x74\x5d\xd1\xd3\x06\xde\xff\xa1\x28\xe4\xee\x63\x79\x5d\xca\x5d\xf9\x93\xe0\x45\xae\x41\x1b\x59\xd1\x36\xae\xcb\xe6\xa4\x23\x6d\xad\x98\xb0\xc1\x86\x58\xb5\x51\x46\xf3\xae\x4a\x4d\x54\xe8\xae\x91\xce\x70\x82\x86\x00\x52\x70\xce\xb4\x5a\xb4\xee\xd4\xd6\xe6\x27\x93\xc9\x29\x17\x17\x60\x54\x4d\x31\xa7\xbf\x11\x82\xa2\x99\x43\x48\x32\xf4\xcb\xf6\x75\x83\x37\x7c\xf7\xbc\x5e\xad\xc8\xd3\x27\x29\x7c\xaf\xf8\xd7\x53\x57\xdd\xef\xac\x87\xdd\x75\xaf\xc3\x3e\xba\x43\x6a\x15\xd4\xb8\x81\x43\x8f\xaa\x42\x07\xfd\x50\x4f\xee\x20\xd4\xe0\x98\x7d\xce\xf2\x2e\x7c\x8b\x0c\xb4\x6c\x35\xc9\x3f\xe6\xa9\xef\x98\x62\x5b\xed\x93\xa0\x5f\x99\xd2\xb1\x42\xbb\xf8\x02\x73\x68\x9f\x63\xef\xaf\x35\x57\xfb\xb6\xbb\xca\x3e\xbe\x7f\x95\xfd\x1d\x1b\x63\x3f\x20\xe8\x32\x0d\x33\x23\xba\x61\x86\x2e\xc8\xef\x04\x52\xa4\xc7\xdb\xc5\x0a\x4a\xdf\x2d\x7b\x25\x29\x5c\x87\xc8\x2e\xd2\x41\xed\x87\x83\x7b\xfc\x33\x2f\xed\xa4\x81\x9d\xdc\x0d\xa0\xc5\xe3\x2c\xbc\x2d\xb9\x5c\x9d\xf0\xc1\xbf\x9e\xf2\x61\x97\xf5\x47\x18\x69\x2c\xe1\x7b\x8b\x72\xf9\xea\xba\xcf\x43\x9f\x1c\x5d\x27\x1e\x4c\xb3\x7a\xbd\xf0\x50\x5d\x95\x7c\xae\xf6\x39\x47\x13\x2d\x30\x4d\x7b\xf3\x28\xc7\xa0\x8c\x4b\x3d\xa0\x66\xda\xc3\x60\x9f\x3f\xed\x8d\xd8\x87\xca\xa8\x4d\xe0\xd5\xeb\x1b\x5e\x87\x9e\xe1\xc5\x56\x98\x1f\x29\xf5\xd3\x17\xb0\x62\x05\xa5\xa1\x6f\x95\xb0\xa5\x90\xc6\x49\x04\x71\x4e\xe0\x1d\x7c\x76\xb0\x4b\x83\xd2\xac\x7d\x37\x2b\x7b\xcd\xb5\x66\x6b\x9e\x24\xd3\xb0\xdc\xda\xbe\xc1\xe3\x8e\xf6\x3e\x44\x64\xe0\xde\xc7\xf1\x89\x32\x54\x77\x6d\x23\x71\x15\x04\x07\xa3\x95\x56\xeb\xd0\x4f\xaa\xac\x1b\xa6\x61\xc3\x72\x1a\x3b\x54\x57\xb5\xd5\xbc\x1c\xa4\x7d\xa7\x44\x94\xc1\x5b\x79\xc1\xdb\x7e\x98\xd7\x59\x2a\xee\x0d\xb9\xcc\x1f\xe0\x4d\x39\x17\x8d\x68\xad\xaa\xe5\x49\xd1\xb7\x53\xb7\x25\x22\xdd\xe2\xed\x68\xd9\xf6\xbe\xaa\xad\x97\x50\x90\x77\x8c\x0e\x39\xe2\xdf\xd6\x6d\x4f\x69\xa0\xb1\xa0\xb8\xeb\x92\xb7\x2f\x3d\x2d\x37\xa8\x93\xcc\x3e\x61\x85\x96\xa8\x02\xb7\x77\xc8\x1b\xd7\xaa\x98\x8e\xcf\xee\x3d\xfc\x93\x5a\x15\x51\xea\x9c\xe7\x3b\x66\x36\xc9\x7d\x03\x1b\xad\x44\x29\x44\x68\x73\xb8\x79\xa3\xe4\x77\x97\x99\x91\xc4\xef\x2f\x33\x07\xa3\x5b\xc0\xb4\xa7\xca\x5c\x52\xe0\x46\x5e\x03\x0a\x71\x63\xdf\x53\x30\x4e\x6a\x5b\x69\x2c\x5a\x20\x4a\x6d\x58\xb9\xe4\x19\xfc\xc6\x81\xdf\x56\xf4\x0e\x17\xb5\xd1\x7b\x5d\x5b\x4e\xc1\x45\x3b\x49\x2e\xf4\x52\xda\x17\x1b\xf4\x5e\x1b\xbe\x4d\xd1\xb8\x66\x33\x28\xc4\x35\x2f\x9a\x4a\xb5\xc5\x34\xa2\x8d\xd4\xe6\xc2\xca\xae\x2d\x45\xb7\x2b\x88\x9b\xa9\xfc\x4d\xe0\x41\x1c\xf6\xe1\x45\x68\xb1\x82\x6f\xbc\xc9\xfd\xc2\xf4\x3b\xc5\x57\xe2\xb6\x99\x31\x85\xc8\xbe\x28\x49\x71\x64\xc3\xc7\x9c\x9a\x2f\x66\xb3\x08\xfe\x5f\x23\x09\x7b\x56\xd4\x4d\x84\x58\xab\x02\x03\x49\xcd\x1b\x6a\x67\x5f\xe7\xc2\x33\xba\xb6\xe8\x26\x9e\xb8\xd2\xf4\xe5\x0f\xae\x4c\x4a\xf7\x84\xa3\x37\x92\x14\x19\x80\xd5\x74\x33\x9e\x6c\xc0\x42\x3b\x48\x68\x27\xd5\x75\x0a\x04\x80\xc3\xc2\x27\x18\xa2\x84\xbd\xac\x15\x58\xbf\x4a\x4f\x05\x8a\x30\x4a\x42\x1c\xf0\x81\x68\x2b\x06\x98\xfd\xa9\x8c\x7d\x4a\x35\xfe\x20\xed\x11\x65\xce\x6f\x4f\x47\x3c\xf5\x63\x5c\x15\xff\x38\x43\x38\xb7\x88\x3f\x38\xae\xe7\x0d\xd6\x6e\x0d\x7f\x14\x04\x4e\x9b\x42\x7f\xb5\xff\xf8\xfe\x55\x5c\xa7\x10\xf6\x7f\xce\x34\x47\xf7\x71\x77\x17\x25\xdd\x3a\xfe\x19\x30\xee\x11\xe2\xdb\x41\x86\x8f\x6b\xfa\x67\x97\xea\x1b\x54\xb7\x1f\xec\x1d\x2f\xd8\x8f\xea\xbd\x29\xdc\xff\xe9\x9a\x1f\x82\xc5\xdd\x85\x80\x21\xd5\xa6\xc7\x51\x5e\x1f\xb8\xdd\x5e\x14\xb0\x9e\xc7\xeb\x71\xc1\x34\x87\xc7\xb8\x87\x3f\xbe\x7f\x95\xda\x10\x1b\x7c\xe9\xd1\x37\xe3\xfe\x2d\x31\x2e\xb8\x98\xc3\x63\x1c\x40\x5f\xed\x79\xe1\xc2\xf2\xf6\x2a\x33\x3e\x71\x81\xca\xa5\xb9\xf5\x15\xce\x0f\x18\x57\x2e\x65\xb9\x12\xeb\x5a\x39\xe0\xc5\x86\x0a\x6e\xe3\x1a\x09\x55\x5d\x14\xf4\x42\x18\x9d\x73\x3c\xa7\x5a\xa3\xac\xf1\xe8\xf6\x61\xa3\x3b\x96\x08\xf5\xa6\x63\x6f\xeb\x43\xc7\x30\x99\xc4\x58\xc1\x81\x17\x19\xc0\x1b\x69\xdc\x4b\xb5\x48\x12\x69\x59\x4f\xb1\x61\x37\x1c\xfc\xcb\xf8\xe3\x21\x89\x9d\x67\x61\x6b\x4f\xee\x15\x33\xfb\x36\x0d\x7a\x7e\xcf\xda\x4e\x28\xee\xd0\x6e\xe6\xef\x2e\x91\xe3\x37\x1b\xbe\x6f\x31\xf5\xe6\x9a\x7c\xf0\x02\x1c\x57\xcd\x81\xeb\x2a\xc4\x5d\xd9\x51\x55\x38\x78\xd5\x63\xf8\x3c\x08\xf1\x9b\x9e\x4e\xae\x7e\x36\xf2\xbe\xe4\x19\xd1\xe1\x9f\x56\x17\x6e\x22\x1e\x87\xe3\x86\xe5\xe0\xa3\xf2\xad\x0d\x7f\x6d\xfc\x8b\x07\xc0\xc0\x2d\x97\x7b\x1d\xf6\x31\xbc\xd4\xeb\x6c\x46\xd1\xa5\xe3\xbc\xc6\x41\x4b\x14\x8d\x1d\xc3\x4b\x1e\x71\x71\xd3\x84\xf7\x43\xc2\xcb\xa3\xc7\xf0\x52\x00\xa4\x52\x98\xe7\x6a\x1e\xcd\x93\x8d\x7d\xc5\x02\xd3\xf0\x7f\x79\xfa\x34\x2c\xfe\xa4\xb0\x73\x15\x0e\x9b\xc7\x54\x8a\x1b\x62\x13\x07\x94\x96\x16\xe5\x34\x76\x03\x19\xc3\xb7\x95\xdd\x7d\xb4\x8a\x70\xff\x39\x38\x1a\xb6\x94\x7e\xb4\x3c\x7a\x26\xee\x85\xbf\xfc\x2d\x8f\x1e\xf8\xab\x57\xec\xe3\xe8\x17\xf5\x79\x38\xfc\xf5\x10\x34\x6b\x6e\x7f\xb3\xe1\xc5\xdb\x9f\x06\x01\xad\x37\x7c\x17\x20\xdd\xd6\xe3\x58\x90\x04\xe5\xb8\x0f\x11\xac\x33\xc1\xb1\x1e\x6c\xac\x21\x1a\x25\xc1\xb5\x08\x15\x54\x16\x90\x70\x80\xaf\xbc\xfd\xdb\xfd\xf8\x5b\xa7\xae\x90\xa4\x10\x05\x36\x73\x01\x8f\xbe\xcb\x1f\xd9\x34\xa0\x9d\xa3\x99\x9b\xe0\x43\x5d\xdd\x67\xcd\x81\x14\x4f\xb0\xb3\x0f\x76\xe3\xbb\xfd\xdf\xe2\x5d\xba\xea\x01\xbc\x4e\x56\x11\x32\x7e\x74\xb1\xe3\xfb\xf6\x4a\xf2\xd1\x0b\xeb\xa1\x93\x38\xbe\x53\xf5\x67\xe3\xd5\x67\x04\x3a\xa3\x48\x49\x7b\x39\xa8\xc9\x49\x1d\x58\x02\xec\x7c\x88\xda\xfe\x4c\x03\x15\x8a\x95\x90\xb5\x06\x9c\xc8\xa6\x0f\x72\xe5\x08\x1f\x1d\x91\x31\x9e\xdc\x29\xa1\x64\x54\xa7\xb5\xe5\x28\xbf\x61\xcf\x58\xd6\x19\x78\xf5\xc0\x7d\xad\x06\x58\x99\x68\xa3\x6e\x58\x81\x02\x8e\x22\x87\xdb\x51\xd3\x74\xf4\xf5\xfb\x31\x0c\xdb\xe3\x7f\x8a\x7f\xb5\xc6\x12\x1e\x32\x83\x09\xec\x71\xbf\xe1\x0c\x99\xb0\x83\x0f\x9c\xd2\x47\x1b\x32\x55\x4c\xb1\x2d\x37\x5c\x69\x87\x63\xda\xd7\x5f\x5c\xbe\x65\x2f\x2c\xf9\x42\xce\xd1\x8b\x85\x9a\xae\x26\x77\x90\x40\x9c\xe5\x03\xb5\x37\x50\xa0\xef\x78\x77\xfc\x1e\x26\x06\x76\xd1\xcc\xf2\xdf\x97\x93\x55\x94\xd3\x8f\x78\xa4\x3e\xa4\x5e\xd6\x45\x5e\x3e\x32\x2d\x80\x4d\xab\xfc\xee\x6b\x44\x21\xa2\xf7\x73\x24\x95\xf7\x6c\xe7\x42\xc1\xda\x7f\x6e\x9e\x35\x0f\x6c\x6b\x57\x72\xd6\xf0\xba\xa2\xb3\x97\x1c\x7a\xf1\x5c\x74\x43\x66\x5b\xb9\x92\xa8\x53\xb0\xd9\x56\x5d\x71\x0e\x21\xbb\xd0\x5e\xa5\x3e\x0f\x54\x15\x2b\xbb\x21\x5c\xb7\xf7\xbc\xe2\xf6\x37\xb9\xdc\xf7\x97\x1a\x13\x9e\xc6\xef\xb5\x94\xe3\x4b\x5f\x61\xf0\xa8\xac\xb4\xb7\xc0\x22\xaf\xfe\x28\xf1\x23\x68\xa9\x9f\xa2\x06\xc0\xfd\x7b\x83\x56\xbb\x0b\xd1\x9f\xc9\x84\xb3\xa6\xc7\x25\xdb\xf2\xa2\xbd\x18\xee\xec\xa0\xd0\xcd\x77\x17\x96\x05\x6f\x4b\x0c\x8d\xf7\xd5\x02\xc7\x46\xf6\x43\x9e\xc7\x23\xac\xa4\xc1\x6f\x26\xc5\x37\x09\x65\x5a\x93\x90\x0b\x67\x8d\x36\x11\x29\x30\x84\x5a\x81\x54\x10\xe3\xa9\x76\x22\xb4\xe4\x58\xae\x9e\x7f\xb3\x75\x2f\x8f\x1d\xdd\x99\x18\x5a\x85\xe3\xa3\xf7\xa7\x34\x7a\xec\xdb\x99\xf7\x8a\x89\x82\x2e\xb5\x78\xeb\x1e\xa2\x1f\x75\x17\xea\x5c\x95\xdf\xd9\xb1\xd9\x56\xc9\xf4\x41\x52\x24\x0a\x49\x20\xa8\xae\x39\x3c\x48\x0f\x83\x52\xf1\xf4\xdb\x6b\x65\x47\xdf\x8e\xd3\x63\xb7\x7b\x64\xc9\xe5\x6a\xa8\x28\x71\xba\x85\x6c\xf7\xe1\x2d\xd4\x92\xad\x1a\x17\x47\x43\xfc\xed\xb8\xd6\x8c\x43\x6b\xa1\xee\x5d\x73\x71\x6d\xc7\xf6\x62\x73\x0d\x3a\x3c\x50\x18\x3f\x73\x73\x38\xf8\xbe\xee\xcd\xc7\xe4\x99\xed\xf1\xcd\x1c\xda\x47\xff\xc9\x95\xb4\x59\x49\xb0\x0f\x46\x6d\xaf\x97\x70\xe2\x47\xf6\x9b\xdf\x83\x0d\xb0\x77\x92\xa8\x99\xc5\x2f\x79\xc4\x0a\x4f\xac\xc8\x11\xbb\xc7\x10\x83\x8d\x1c\x5a\xe4\x9f\x29\xdc\xb3\xf9\x0a\xdd\x0c\x2b\x92\x13\x06\x43\x93\x3e\xcf\xc2\xc3\x63\xca\x4e\x08\x73\x70\xec\x50\x84\x63\x2f\x58\x7a\xbb\x2e\x83\xd0\xc2\x82\x60\xd1\x9a\x9b\x88\x68\x06\x47\x97\x8d\xf9\x8f\x4e\x2e\x05\x8b\x7a\xe5\x7e\x4b\x8e\x2a\xbb\xd3\xc9\xc4\xc8\xf7\xdc\xfc\xde\x18\xe6\x9c\x83\xed\xc9\x3d\xc5\xc2\x6e\xd1\x72\xf6\x18\xde\x96\xc5\xde\x5e\x1f\xb6\xf0\x04\x11\xa1\xe2\x89\xde\xe0\xb9\x0f\x8b\x06\x99\xa0\x2b\x6c\x5a\x02\x2b\xec\x4f\x0e\x4d\xa4\xd9\x84\xd7\x03\xe5\x56\x18\x3c\x15\xf3\xda\xc2\xe3\x98\x03\x89\x92\x6b\x0d\x8f\x67\x6e\x46\xbb\xfc\xfe\x03\x68\xfc\x6c\x3b\x81\xb3\x48\x05\xee\xc7\x1e\x9b\xcb\x4e\x6f\xf8\xce\xdf\xd3\xfb\xde\xe5\x07\xae\x0b\x06\x71\x2f\xf4\x92\x55\xfc\x97\xab\xd7\xaf\x62\x5b\x8f\x0b\x02\xa1\x8b\xb9\xff\xe1\x48\x6f\x05\x96\xd5\xe1\x7c\x64\x2c\x4c\x22\x4a\x64\x14\x8c\x6e\x40\xc2\x77\x37\x51\x0a\x44\xb3\x09\x96\x9e\xd3\xdd\xba\xe3\x1f\x0b\x6c\x58\xef\x2c\xb5\xcd\x83\x86\x8b\xb3\xd3\xff\x09\x00\x00\xff\xff\x50\x6c\x57\xb2\x36\x54\x00\x00")

func baronNamePbBaronGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_baronNamePbBaronGotemplate,
		"baron/NAME.pb.baron.gotemplate",
	)
}

func baronNamePbBaronGotemplate() (*asset, error) {
	bytes, err := baronNamePbBaronGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "baron/NAME.pb.baron.gotemplate", size: 21558, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd6, 0x1e, 0x4e, 0x4, 0x70, 0xb9, 0xc5, 0x77, 0xf2, 0x6, 0x2f, 0xe6, 0xe, 0x95, 0xc8, 0x89, 0x5b, 0x6d, 0x92, 0x3a, 0x2e, 0x4b, 0x3f, 0xc9, 0xc2, 0x15, 0x9b, 0x2d, 0xdb, 0x5, 0xc6, 0x4d}}
	return a, nil
}

var _cmdNameMainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\xc1\x8e\x9b\x30\x10\x86\xcf\xf8\x29\xa6\x96\x5a\x81\x94\x9a\x3d\x74\x7b\x48\x95\xc3\x36\xa4\xe9\x5e\x1a\x44\xd8\xbd\x56\x06\x06\x62\x15\x0c\xb2\x1d\x56\x11\xe2\xdd\x2b\x1b\x52\xd1\xee\x56\xbb\x27\x1b\xe6\x9f\xcf\xa3\xf9\x67\xc2\x10\xb6\x6d\x81\x50\xa1\x44\xc5\x0d\x16\x90\x5d\x20\xe3\xaa\x95\x0c\xa2\x03\xfc\x38\xa4\xb0\x8b\xee\x53\x46\xc2\x10\x12\x54\x67\x29\x85\xac\x26\x01\x3c\x89\xba\x86\xb6\x47\xf5\xa4\x84\x41\x30\x27\xa1\xa1\x14\x35\x3a\xf1\x23\x2a\x2d\x5a\xb9\x86\x61\x60\xf3\x7d\x1c\x17\x01\x88\xb8\xc1\x65\xd4\x7e\x8f\x23\x21\x1d\xcf\x7f\xf1\x0a\xa1\xe1\x42\x12\x22\x9a\xae\x55\x06\x7c\xe2\xd1\xb2\xe6\x15\xb5\x67\x63\xec\xd1\x6a\x4a\x88\x17\x86\x90\xda\x77\x8f\xa8\x7a\x91\xa3\x3b\x51\x11\x8f\x0e\x03\xbb\x77\xb9\x31\x37\x27\xf8\x38\x8e\x10\x6a\x17\xa3\x24\x20\xa4\xe7\x0a\xf2\x56\x96\xa2\x82\xe9\x2f\xdb\xba\x2f\x42\xca\xb3\xcc\x41\x48\x61\xfc\x00\x06\xe2\xd9\x47\xd9\xd1\x28\x21\xab\x47\xae\xfc\x0f\x53\x12\x8b\x30\x3b\x57\x77\x45\xa1\x56\x40\x0b\x7b\x67\xbc\x28\x14\x5d\x01\x5d\xdf\xde\x7c\xbe\xb1\x17\x27\x01\x2e\x0b\x68\xd0\x28\x91\x6b\xa8\x85\x36\x28\xc1\x2a\x51\x6b\x1a\xfc\x97\xfe\x3d\x4d\xe3\x19\x7e\x32\xa6\x5b\xb2\x6f\x1d\xdb\x0a\xde\x8e\xdb\x27\xf1\x76\xc6\x55\xaa\xcb\x97\xb8\x4f\x0e\x57\x25\xf1\x16\x7c\x0b\x0d\x9e\x53\x5d\x8f\x1f\x34\x02\xca\x5e\xa8\x56\x36\x28\x0d\xf4\x5c\x09\x9e\xd5\xa8\x57\x20\x4a\xd0\x68\x18\x7c\xab\x79\xa5\xe1\xc4\x7b\x84\x4e\x89\x56\x09\x73\x71\xc3\x01\x3b\xd9\x5b\xbd\x66\xc4\x13\xa5\x03\xc3\x7a\x03\xad\x66\x7b\x34\x28\x7b\x9f\x46\xbb\xaf\x0f\xfb\x9f\x77\x51\x94\xd0\xe0\xcb\x24\x78\xb7\x01\x4a\x6d\xff\xbd\x7f\x1b\x0e\x1b\xa7\x20\xde\xe8\x70\x6e\x3a\xfe\xc6\xc5\x87\x24\xb5\x20\x17\x7a\x06\xba\xf6\x16\x36\x50\x36\x86\x1d\x3b\x25\xa4\x29\x7d\xba\x7e\xaf\xe9\xca\xe5\x04\x57\xf6\x0b\xa5\xda\xec\x57\x2a\x5d\x3c\xb0\x2c\xf4\x05\x98\xf5\xe5\x15\xd8\xd5\xba\x05\x6c\x9c\x67\xd4\xee\xc7\x34\xa3\xd6\x9f\xae\xe0\x06\xaf\xae\xa1\xb6\xae\x98\x13\x5e\x26\x3f\x32\x44\xf9\x67\x51\xad\xbb\xd9\x05\xec\xac\xe8\x79\x64\x62\xae\x34\xfa\xd6\xea\x79\x19\x92\xb3\xf4\xa7\x0a\x02\x32\x92\xdf\x01\x00\x00\xff\xff\x94\x5b\xd1\x86\x24\x04\x00\x00")

func cmdNameMainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameMainGotemplate,
		"cmd/NAME/main.gotemplate",
	)
}

func cmdNameMainGotemplate() (*asset, error) {
	bytes, err := cmdNameMainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME/main.gotemplate", size: 1060, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x35, 0x3c, 0xe7, 0xd3, 0x41, 0x72, 0xb3, 0x2, 0x54, 0x67, 0xca, 0x27, 0xe1, 0x69, 0xde, 0x43, 0x43, 0xf1, 0x3e, 0x15, 0x71, 0xa3, 0x5a, 0xee, 0x8d, 0x2f, 0x19, 0x68, 0xc0, 0xea, 0xa4, 0x3c}}
	return a, nil
}

var _cmdNameClientMainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x95\x41\x53\x1b\x2f\x18\xc6\xcf\xf0\x29\xf8\x33\xa3\xc3\xfe\x1b\x59\x0f\xf5\x92\x99\x1c\x9a\x68\x35\x3d\xd8\x54\x9d\xf6\xd0\xf6\x40\x58\xc2\x32\xe2\xcb\x96\x65\xad\x9d\x4c\xbe\x7b\x07\x76\xcd\x26\x5a\xc7\x68\x9b\x4b\x08\x2f\xfb\xbc\x3f\x9e\x3c\xb0\x95\x90\xd7\x42\x2b\x72\x23\x0c\x60\x6c\x6e\x2a\xe7\x03\x61\x18\x51\xe9\x20\xa8\xbb\x40\x31\xa2\x0b\x2b\x74\xfc\xb6\x4e\x53\x8c\x51\x35\x27\x74\xb9\xe4\xb3\xf1\x34\xad\x9e\x89\x50\x92\x83\xd5\x2a\x96\xa8\x36\xa1\x6c\xe6\x5c\xba\x9b\x5c\x37\x0e\x84\x29\x1d\xe8\x5c\xbb\x26\xb4\x65\xe7\xb4\x55\x5c\x3b\x2b\x40\x73\xe7\x75\xae\x7d\x25\x29\xce\x30\xbe\x15\x3e\xf6\x8d\xbf\xdf\x15\x85\x27\x75\xf0\x06\x34\x46\x65\x08\xd5\xe6\x44\x86\xf1\xa2\x01\x49\x0c\x98\xc0\x32\xb2\xc4\x28\xe2\xf1\xcb\x54\xfd\x2c\x3c\xdb\xbf\x97\x18\x10\x1a\x87\x5c\x14\x85\xa7\x03\x42\x87\x47\x87\x6f\x0f\xe3\x40\x5f\xcc\x26\x84\x9d\x5d\x5d\xcd\x32\x62\x4d\x1d\x14\x90\xb8\x46\xd5\x35\xcd\x1e\xcb\xdd\x03\x0c\x08\x8d\xc3\x4d\xb9\xa3\x24\x17\x85\x1e\xeb\xac\x3a\xce\x68\xec\x06\xe7\x4c\xf8\x5a\xb1\x0c\xa3\x3c\x27\x91\x8e\x48\x07\xa0\x64\x30\x0e\x30\x8a\xe3\x01\x51\xde\x93\xe1\x28\x55\xf9\xb1\x11\x96\x61\xb4\xb6\x65\xd0\x8d\xf9\x17\x13\xca\x29\xd4\x4a\x36\x5e\xb1\x6c\x6b\x7a\x6c\x9d\xbc\x4e\x73\x19\x46\x66\x91\xf4\xfe\x1b\x11\x30\x36\x52\x20\xeb\x34\x7f\x2f\x82\xb0\x4c\x79\x9f\x61\xb4\xc2\xa8\x50\x0b\xe5\x13\x09\x9f\x58\xd7\xf2\x55\x16\x3a\xcc\xb9\xf0\x0e\x3a\x58\x6b\x14\x04\x8c\xd2\xd4\xa9\xaf\xe4\x24\x4d\xac\x99\xab\x39\x3f\x57\x3f\x4f\x2f\x66\x93\xb6\xc0\xa2\xe6\xae\x14\x32\xdc\x45\x8d\x2e\x78\x7c\x2c\xe4\xb5\xf6\xae\x81\x22\x72\x18\xe8\xf4\x4f\x64\xe9\x2e\xd4\x8f\x46\xd5\x21\xea\x4c\x61\x48\x68\xc2\xe1\x89\x70\xa3\x4c\x07\x49\xd6\x35\x3d\xdf\x03\xee\x24\xc6\x64\xb8\x1b\x90\x7d\xf3\x34\xe7\xcc\x1b\x08\x0b\x46\xbf\x8e\x53\x9f\x7e\x7b\xdf\x53\xbb\xf8\xc8\x68\xef\xf6\x1b\xd0\xd4\x27\xc3\x08\x79\x15\x1a\x0f\xa9\xfd\x2e\x02\x5e\xd5\x8d\x0d\xa3\xbd\x37\xad\xc8\xff\xae\x09\x5b\xff\xc0\x96\xf7\x7a\x8d\xdf\x3b\x1e\x55\x1e\x38\x0e\x7c\x0a\x64\xd4\x1e\x81\x2d\x57\x36\x1c\x69\x43\xf6\x3a\x2f\xfe\xc2\x85\x17\xef\xbf\x4d\x60\x3c\x7d\xdb\x09\x3c\x0b\xa1\xfa\x63\x02\xe3\x91\xec\xfc\xb8\x3f\xbe\xbb\xa6\x70\x6d\x5c\x1b\xaa\xd4\xf4\x49\xfb\x1e\x50\xbc\x2e\x4f\xfd\xf3\xaf\xcc\x53\xbf\xdb\x1d\xfd\xdc\x72\x32\x5e\xbc\x5e\xd5\x55\x7f\xb8\xea\xca\x41\xad\x30\xea\x22\xe2\x9a\xc0\x4f\x4f\xae\x58\xba\xfe\x86\x79\x6e\x9d\x14\xb6\x74\x75\x48\x37\x60\xae\x64\xe9\x68\xc6\x2f\x55\xf8\xd4\x28\xff\x8b\xa5\xf5\x67\x4b\x6a\x80\x0e\x69\x6f\x5f\xeb\xde\x2a\xe3\x63\x03\xc5\x87\xcb\x8f\xe7\x6c\x3f\x76\xcd\xf8\xb1\x63\xcf\x3b\xb5\xb9\x45\xf5\x32\x8f\x9e\x73\x27\x51\x60\xbc\x6a\xaf\xeb\x64\x52\xec\xbf\xd6\xb0\xc0\xe8\xc1\xbf\xfe\xa4\x17\xc4\xef\x00\x00\x00\xff\xff\xe8\x3c\x7f\x16\x7c\x07\x00\x00")

func cmdNameClientMainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameClientMainGotemplate,
		"cmd/NAME-client/main.gotemplate",
	)
}

func cmdNameClientMainGotemplate() (*asset, error) {
	bytes, err := cmdNameClientMainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME-client/main.gotemplate", size: 1916, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa3, 0xa1, 0xa2, 0x2b, 0xa5, 0x9f, 0x27, 0x33, 0x72, 0xf, 0xad, 0xe8, 0x43, 0xa3, 0x9c, 0x26, 0xc6, 0x34, 0x87, 0xbb, 0x53, 0x60, 0x78, 0xa3, 0x5e, 0x65, 0xdc, 0xa, 0x5c, 0x3f, 0xf7, 0xef}}
	return a, nil
}

var _serverServerGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x4d\x6f\xdb\x38\x13\x3e\x8b\xbf\x62\x2a\xf4\x20\x03\xae\x74\x78\x6f\x41\x73\x68\x93\xbe\xdb\x00\x4d\x6a\x38\xc6\xee\x99\x16\xc7\x34\x11\x99\xd4\x0e\x29\x3b\x81\xa0\xff\xbe\x18\xea\xc3\x76\xd2\x78\x3f\x2e\xb6\xc4\x99\x79\xf8\xcc\x33\x1f\x2a\x0a\xb8\x71\x0a\x41\xa3\x45\x92\x01\x15\xac\x5f\x60\x2d\xc9\xd9\x1c\x6e\x7f\xc2\xc3\xcf\x15\x7c\xbb\xbd\x5b\xe5\xa2\x28\x60\x89\xd4\x58\x6b\xac\xee\x1d\xe0\x60\xaa\x0a\xdc\x1e\xe9\x40\x26\x20\x84\xad\xf1\xb0\x31\x15\x46\xe7\xdf\x91\xbc\x71\xf6\x0a\xda\x36\x1f\x9e\xbb\xee\xc4\x00\xb7\x32\xe0\xa9\x95\xdf\xbb\x4e\x88\x5a\x96\x4f\x52\x23\x78\xa4\x3d\x92\x10\x66\x57\x3b\x0a\x90\x89\x24\xad\x9c\x4e\x45\x92\x5a\x0c\xc3\x5f\xb1\x0d\xa1\x3e\x7d\x2e\xea\x9a\xdc\x26\x15\x22\x29\x0a\xf8\x9f\x82\x85\xa4\xf0\x22\x92\x54\x3b\xa7\x2b\xcc\xb5\xab\xa4\xd5\xb9\x23\x5d\x68\xaa\xcb\xc1\x6f\xc5\xc4\x1f\x91\xf6\xa6\x44\x91\xd4\x6b\x48\xdb\x36\x5f\x7c\xbd\x8b\x17\x2f\x64\xd8\xc2\xa7\xae\xe3\x5b\xda\x36\x3f\x3f\x84\xc2\xf7\x61\xa9\x98\x09\x21\xa2\x98\x76\x63\x34\x94\xce\x06\x69\xac\x87\xb0\x45\x20\xfc\xb3\x31\x84\x0a\x36\x06\x2b\xe5\x61\xe3\x08\x46\x25\xe5\x98\x67\x78\xa9\x71\x8c\xf6\x81\x9a\x32\x40\x2b\x92\xef\xab\xd5\xe2\x8b\x52\xc4\x47\xc6\x6a\x91\xdc\xe2\xba\xd1\x67\x27\xbf\x2d\x17\x37\xa7\x07\x9d\x10\x9b\xc6\x96\xf0\x80\x87\x6f\x56\xd5\xce\xd8\xe0\x33\xbf\x2f\xa1\x5e\xe7\x6d\x9b\x0f\x79\xe6\x0f\x72\x87\x5d\xf7\x18\x2f\x9f\xb1\x6d\x72\xe6\x7b\x8b\x02\xbe\x36\xde\x58\xf4\x1e\x94\xdb\x49\x63\xf3\x78\xf8\x07\xc9\x7a\x94\x0a\x0e\x26\x6c\x61\x67\x94\xaa\xf0\x20\x09\x7d\x0e\x8f\xd8\xd7\xcd\x94\x58\x9c\x1a\xb4\x13\x09\x53\xb8\x1e\xad\x39\x03\x0d\x38\x4c\x6e\xd6\x57\x62\xe4\x70\xbc\x73\x2f\x89\x4b\xdf\xb6\x24\xad\x46\xf8\x68\xe0\xea\x1a\xa6\x24\xee\x31\x6c\x9d\xf2\x5c\x0a\x91\x24\x6d\xbb\x72\x3f\xdc\x01\x09\x3e\x9a\x21\xbf\x09\xf0\x9a\x53\xbc\x97\x4f\xd8\xb6\x6f\x8c\x3d\x81\xa4\x6d\xd1\x2a\x06\x62\x32\x38\xa9\x71\x75\x7d\xa6\x4e\xfb\x8f\xc9\xbc\xb9\xe7\x0a\x00\xe0\x02\xc9\xf9\x09\x87\x4e\x1c\xf5\xf6\x58\x61\xc9\xa3\x79\x2c\xd1\xaf\xa5\xdf\x4a\xab\x2a\x24\xff\x46\xfb\x63\x36\xe7\x15\x38\x36\xc8\xe4\xc1\xc9\x13\x86\x86\x2c\x4c\x67\xdc\x53\x3c\xff\x8d\x05\x1f\x24\x05\x0f\x12\x2c\x1e\x80\x27\x6e\xe8\xdf\x39\xe8\xe5\xe2\x66\x7a\x91\x56\x81\x04\xc5\xcd\x3a\x9c\xf5\x94\xc3\x16\x19\xa9\x96\xde\xa3\xe2\x29\xe1\x76\x67\xe7\xca\x69\x8d\xd4\x77\xee\xb2\xb1\x59\xb9\xd1\xc3\x34\xcc\xb8\x1f\xb9\x79\xae\x8e\xdc\x1f\xf0\x30\x36\xcf\xec\x55\xad\x5e\xb7\xfd\xd0\x59\xf7\x58\x6e\xa5\x35\xa5\xac\x8e\xbd\x85\x44\x11\x75\x27\x9f\x30\x63\x33\x20\x91\xa3\x21\xe2\xce\x06\x24\x6a\xea\x30\xca\x9a\x8b\x44\xbb\x89\xc2\x64\xfe\xde\x5b\x33\x46\x1b\x42\xe3\x90\x42\x65\x7c\xe0\xad\xda\xc7\x71\x66\x59\xcc\x25\xa9\x9c\xce\x17\x64\x6c\xa8\x6c\x96\x06\x92\xd6\xf3\x4e\x49\xe7\x90\x46\xc1\xf8\x41\x2a\x45\xe9\x1c\xca\x8d\xce\xa7\x89\x67\xf0\x64\xc7\x84\x59\xf7\x51\x03\xbc\x6f\x9e\x59\x84\x64\x97\xf7\x4c\xb2\xb4\x88\x30\xfd\x2a\x2c\xd2\x79\xef\x3e\xd0\xfc\x3f\xd3\x88\x96\xfc\xce\x2a\x7c\x9e\x5d\x08\x2d\x77\xaa\x32\x16\xdf\x47\xb8\xe9\x1d\x2e\x61\xf0\x8f\xa9\x2e\x60\x2c\x7a\x87\x4b\x18\xfe\x65\xb7\x76\xd5\xfb\x10\x8f\xd1\x7e\x09\x21\x90\x2c\x2f\x70\x58\xb1\x79\x16\xf5\x8d\x3d\xf1\xf9\x53\xef\xf9\x23\x56\xf0\x8b\x55\x51\xe8\xec\xac\x1a\x73\xd8\xcd\x44\xd2\x65\x43\xc9\x79\x51\xc3\x54\xcb\x7f\x51\x72\x0e\x7c\x55\xf1\x71\xe9\x73\x42\xdb\x61\xff\xf0\xea\xe2\xf3\xa9\xdb\x8e\xf3\xfa\xf7\xa4\x47\xc0\x39\x6c\x4f\x39\xc7\x89\xfd\x2f\x9c\x39\x30\x9d\x9f\x52\x1e\x3f\x42\xcc\xa6\xb2\x73\x1e\x24\x26\x6e\x31\x0c\x7c\xb2\x34\x94\xf5\x2f\x9c\xcd\x26\xfa\x7e\xb8\x06\x6b\xaa\x78\xed\x94\x0d\x12\xf1\x6b\xbf\x8c\x44\x12\x57\x62\xe2\x69\x7f\xa2\x08\x23\xf5\x9f\xb0\x73\x41\xe2\x26\xe0\x2f\xfc\x34\x25\x14\x67\xa4\x5e\xe7\x4b\xd4\x4c\x88\xde\xf9\x14\x66\x7e\x0e\x9e\xf6\x67\xbd\xe0\xf3\x5e\xca\xca\x9e\xaa\xb7\x6c\xec\x07\x71\x2e\x12\x3e\x1b\xd6\xe7\xf3\xa7\x7e\x17\x74\x42\xfc\x15\x00\x00\xff\xff\x3e\x27\xbb\x94\x5f\x09\x00\x00")

func serverServerGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_serverServerGotemplate,
		"server/server.gotemplate",
	)
}

func serverServerGotemplate() (*asset, error) {
	bytes, err := serverServerGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/server.gotemplate", size: 2399, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x32, 0xd1, 0x43, 0xe9, 0x21, 0xb2, 0xcb, 0xf3, 0x35, 0x29, 0x4c, 0xfd, 0x37, 0x21, 0x32, 0x8f, 0x70, 0xd5, 0xb3, 0xa1, 0xa3, 0x6b, 0x13, 0xf6, 0xad, 0x9b, 0x37, 0x4, 0xc6, 0xb5, 0xe6, 0xf}}
	return a, nil
}

var _serviceHooksGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x50\xbe\xd5\x88\x7c\x53\x7b\x23\xec\xee\xeb\x5d\x93\xac\x80\x18\xe7\x2d\x3b\x9b\x1a\x9a\xf1\xbe\x42\xcf\xdc\x4a\x85\x6b\xe0\x79\x6b\x0e\x7c\x8b\x51\x0e\xba\xec\x2c\x90\xa4\x63\x4c\x7f\x00\x00\x00\xff\xff\xe8\xb0\x07\xec\x3e\x00\x00\x00")

func serviceHooksGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_serviceHooksGotemplate,
		"service/hooks.gotemplate",
	)
}

func serviceHooksGotemplate() (*asset, error) {
	bytes, err := serviceHooksGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service/hooks.gotemplate", size: 62, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xac, 0x1f, 0xe5, 0x64, 0xee, 0xef, 0x70, 0x78, 0x57, 0x74, 0xa7, 0xc9, 0x31, 0xc3, 0xd8, 0x85, 0xb7, 0xc3, 0xb5, 0xdc, 0xe2, 0x3f, 0x3b, 0x91, 0xaf, 0x20, 0x61, 0xd7, 0xa9, 0xfa, 0xc1, 0xb9}}
	return a, nil
}

var _serviceMiddlewaresGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0d\x80\x20\x10\x05\xd0\xde\x29\xae\xa6\xf0\x0f\xe3\x04\x08\x5f\x42\x04\xce\x1c\x44\x0b\xc2\xee\xbe\x39\xe1\xe4\x20\xe5\xf4\xa6\x0d\x89\x2d\xe9\x9d\x07\x3a\xed\xcd\x81\x18\xac\x4f\xf1\x83\x1d\x35\xc7\x58\xf8\x79\x63\xdf\x93\xca\xa5\x26\x41\x23\xc5\x61\xad\xed\x0f\x00\x00\xff\xff\x78\x96\x32\xf7\x47\x00\x00\x00")

func serviceMiddlewaresGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_serviceMiddlewaresGotemplate,
		"service/middlewares.gotemplate",
	)
}

func serviceMiddlewaresGotemplate() (*asset, error) {
	bytes, err := serviceMiddlewaresGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service/middlewares.gotemplate", size: 71, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf0, 0x65, 0xf6, 0xa7, 0xb2, 0xf, 0xed, 0xb5, 0x20, 0x48, 0xf3, 0xc3, 0xea, 0x42, 0x43, 0xf8, 0x89, 0xdf, 0x98, 0x2c, 0x20, 0xb4, 0x8c, 0x62, 0xdb, 0xe3, 0x6d, 0xf9, 0x92, 0x9c, 0xa6, 0xef}}
	return a, nil
}

var _serviceServiceGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\xd6\xd7\x52\x08\x4e\x4d\x55\x48\x4f\xcd\x4b\xcf\xcf\xce\x2c\xd1\x2f\x4e\x2d\x2a\xcb\x4c\x4e\xd5\x2f\x49\xcd\x2d\xc8\x49\x2c\x49\x2d\xd6\x4b\xcf\x57\x48\xcb\x2f\x52\x48\xce\x4f\x49\x55\xd0\xd2\xaf\xad\xe5\x02\x04\x00\x00\xff\xff\x83\x0c\x7f\x72\x35\x00\x00\x00")

func serviceServiceGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_serviceServiceGotemplate,
		"service/service.gotemplate",
	)
}

func serviceServiceGotemplate() (*asset, error) {
	bytes, err := serviceServiceGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service/service.gotemplate", size: 53, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x42, 0x66, 0x3f, 0xe7, 0xfb, 0x13, 0xd6, 0x89, 0x21, 0xa4, 0x89, 0x63, 0xaf, 0x76, 0x8b, 0xd3, 0x99, 0xab, 0x96, 0x1d, 0x35, 0xfa, 0x50, 0xf9, 0x59, 0x84, 0xf5, 0xa3, 0x13, 0xf5, 0xb7, 0x5f}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"baron/NAME.pb.baron.gotemplate":  baronNamePbBaronGotemplate,
	"cmd/NAME/main.gotemplate":        cmdNameMainGotemplate,
	"cmd/NAME-client/main.gotemplate": cmdNameClientMainGotemplate,
	"server/server.gotemplate":        serverServerGotemplate,
	"service/hooks.gotemplate":        serviceHooksGotemplate,
	"service/middlewares.gotemplate":  serviceMiddlewaresGotemplate,
	"service/service.gotemplate":      serviceServiceGotemplate,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"baron": &bintree{nil, map[string]*bintree{
		"NAME.pb.baron.gotemplate": &bintree{baronNamePbBaronGotemplate, map[string]*bintree{}},
	}},
	"cmd": &bintree{nil, map[string]*bintree{
		"NAME": &bintree{nil, map[string]*bintree{
			"main.gotemplate": &bintree{cmdNameMainGotemplate, map[string]*bintree{}},
		}},
		"NAME-client": &bintree{nil, map[string]*bintree{
			"main.gotemplate": &bintree{cmdNameClientMainGotemplate, map[string]*bintree{}},
		}},
	}},
	"server": &bintree{nil, map[string]*bintree{
		"server.gotemplate": &bintree{serverServerGotemplate, map[string]*bintree{}},
	}},
	"service": &bintree{nil, map[string]*bintree{
		"hooks.gotemplate":       &bintree{serviceHooksGotemplate, map[string]*bintree{}},
		"middlewares.gotemplate": &bintree{serviceMiddlewaresGotemplate, map[string]*bintree{}},
		"service.gotemplate":     &bintree{serviceServiceGotemplate, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
