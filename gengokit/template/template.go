// Code generated by go-bindata. DO NOT EDIT.
// sources:
// NAME-service/baron/NAME.pb.baron.gotemplate (25.579kB)
// NAME-service/cmd/NAME/main.gotemplate (1.402kB)
// NAME-service/cmd/NAME-client/main.gotemplate (2.575kB)
// NAME-service/config/config.gotemplate (161B)
// NAME-service/global/global.gotemplate (272B)
// NAME-service/model/model.gotemplate (160B)
// NAME-service/repository/repository.gotemplate (165B)
// NAME-service/server/server.gotemplate (2.813kB)
// NAME-service/service/hooks.gotemplate (62B)
// NAME-service/service/middlewares.gotemplate (71B)
// NAME-service/service/service.gotemplate (53B)

package template

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _baronNamePbBaronGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7d\x7f\x8f\xdb\x38\x92\xe8\xdf\xf6\xa7\xa8\x11\x66\x12\x2b\xcf\x2d\xcf\x7b\xc0\x3b\xec\x75\xd0\x07\x24\x9d\xcc\x4c\x76\x93\x4e\x36\xe9\xcc\x00\x17\x04\x59\xda\xa2\x6d\x6e\xcb\xa2\x22\x52\xed\xf6\xfa\xfa\xbb\x1f\x8a\x45\x52\x94\x2c\xc9\xee\xcc\xdc\x61\x71\xb8\x01\xee\xd2\x96\xc8\x62\xb1\xaa\x58\xbf\xa9\x9d\xcd\xe0\x52\xa6\x1c\x56\x3c\xe7\x25\xd3\x3c\x85\xf9\x0e\xe6\xac\x94\x79\x02\x2f\xde\xc2\xd5\xdb\x6b\x78\xf9\xe2\xd5\x75\x32\x9e\xcd\xe0\x3d\x2f\xab\x3c\x17\xf9\x8a\x06\xc0\x56\x64\x19\xc8\x5b\x5e\x6e\x4b\xa1\x39\xe8\xb5\x50\xb0\x14\x19\x37\x83\x7f\xe5\xa5\x12\x32\x3f\x87\xfd\x3e\xb1\x7f\xdf\xdf\x07\x2f\xe0\x05\xd3\x3c\x7c\x8b\xbf\xef\xef\xc7\xe3\x82\x2d\x6e\xd8\x8a\xe3\x9b\x77\xf4\xe7\x15\xdb\x98\x37\xb3\x19\x5c\xbb\x35\x60\x21\x73\xcd\x44\xae\x60\xc3\xf5\x5a\xa6\x0a\xb4\x84\x0d\xbb\xe1\x20\xf2\x54\xdc\x8a\xb4\x62\x19\xf0\x3c\x2d\xa4\xc8\xb5\x82\x65\x29\x37\xa0\x78\x79\x2b\x16\x5c\x4d\x11\x52\xc9\xbf\x56\x5c\x69\x60\x79\x0a\x25\x57\x85\xcc\x15\x07\xbd\x2b\xb8\x81\x84\x43\x71\x47\x52\xf1\x1a\xca\x14\x98\x82\x2d\xcf\x32\xfc\x97\xe7\x0b\x99\xf2\x52\x21\x00\x84\x97\x72\xfb\x7b\x29\x4b\x3b\xd1\x40\x9b\x9a\x07\x0c\x29\xb5\x04\x59\x95\xa0\xaa\xa2\x90\x25\x52\x5a\x97\x2c\x57\xf8\x37\x2e\x27\x58\x26\xfe\xc1\xb4\x90\x39\x42\x5b\xca\x72\xc3\xb4\x4a\xc6\xe3\xb1\xd8\x98\x21\x93\xf1\x28\x9a\xef\x34\x57\xd1\x78\x14\xe1\xe6\xf9\x9d\xc6\x3f\x0d\x1e\x22\x5f\xcd\xfe\xae\x64\x8e\x0f\x96\x1b\xf3\x5c\x48\xfa\xff\x33\x21\x2b\x2d\x32\xfc\x91\x73\x3d\x5b\x6b\x5d\xb8\xbf\xab\xd2\x3c\x56\xba\x5c\xc8\xfc\xd6\xfe\x29\xf2\x95\x8a\xc6\xe3\x51\xb4\x12\x7a\x5d\xcd\x93\x85\xdc\xcc\x56\xf2\xec\x46\xe8\x19\xfe\x9f\x23\x46\xd4\x1e\xb1\x92\xb3\xa2\x94\x5a\xce\xab\xa5\x41\xa5\x98\x0f\x0e\x31\x7f\x1c\x8c\x28\x45\x96\xb1\xd9\xa6\xba\x6b\xbd\x29\x6e\x56\x33\x5e\x96\xb2\x54\xad\x17\x39\xd3\xea\x4c\x48\xf3\x6f\xb2\x92\x84\xb8\x94\xab\x8c\x27\x2b\x99\xb1\x7c\x95\xc8\x72\x35\x5b\x95\xc5\x22\xea\x7d\x33\xdb\x70\xcd\x52\xa6\x19\xce\xc6\x07\x35\x5f\x7a\x88\xe0\x07\x38\xc8\x48\xd5\x07\xcc\xb2\x4c\x40\xa4\x1f\x30\x0b\x87\x47\xe3\x78\x3c\x1e\xdf\xb2\x12\xe5\xe1\x0b\x5c\xc0\x72\xa3\x93\x0f\x45\x29\x72\x4d\xbf\x8d\x88\x24\x97\x72\x53\xb0\x92\xd3\x23\xcb\xdf\xe4\x99\x96\x82\x9e\x34\xd0\x4d\xae\xf8\xf6\x03\x8a\x7b\x49\x2f\x49\x5e\x92\x2b\x59\x5c\x66\x52\xd5\x4f\x93\x4b\x59\xec\xe8\x07\xb1\x22\xf9\xad\x64\x05\xe2\x33\x7b\x72\xd2\x7f\xf0\xd2\x1f\xc7\xd3\x26\xe0\x7f\x33\x73\xec\x5f\xe5\xc0\xe8\x4c\x96\x53\x10\xfa\xb1\x82\x4a\xf1\x65\x95\x99\xb3\xb5\xac\xf2\x05\x9e\x1b\x05\x7a\xcd\x34\xe4\x1c\x8f\x96\x04\x59\x18\x85\x06\x12\xe7\x16\xbc\x3c\x73\xa2\x8b\x00\xe7\x4c\x09\x95\xc0\x4f\xb2\x04\x7e\xc7\x36\x45\xc6\xa7\xb0\x93\x15\x6c\xc4\x6a\xad\xa1\x60\x0a\xcf\x75\x80\xb0\x96\xc0\xfc\x42\xb4\x4e\x51\xca\xb4\x5a\x70\x85\xe0\x58\x6e\x68\x9a\xfc\xc2\xf2\x34\x43\x1c\xb7\x42\xaf\x81\xb3\xc5\xda\xaa\x27\x98\xb8\xd5\x63\xd8\x8a\x92\xa7\x50\x15\x04\x54\x15\x7c\x21\x96\x62\x01\x05\xd3\xeb\x04\x26\xaf\x0c\x7e\x42\x21\xfc\x39\x9b\x67\x3b\x60\xb0\x11\x4a\x93\x6a\x83\x94\x2b\xb1\xca\x71\xaa\xc8\x6f\xe5\x0d\xea\x28\x0e\x1f\x48\xb1\x79\x55\x68\x50\xe4\x08\xa7\xde\x81\xd2\x65\xb5\xd0\x08\xc2\x51\x32\x89\xc7\xb3\x99\xa7\xee\x22\x13\x3c\xd7\x4d\xea\x6a\x09\x0b\x99\x65\xdc\xcc\x73\x5a\x35\xdb\xa1\xee\x25\x70\x3c\x0d\x74\xac\xc8\x71\x43\x08\x50\x89\x7c\x95\x91\xfe\x23\x5a\x09\xa4\xf0\x86\x1b\x4a\x06\xf8\x8a\x5c\xf3\x72\xc9\x16\xbc\x8f\x13\x08\xcc\x2f\xd6\xad\xd9\x2b\x5c\x0c\x9a\x67\x0b\x45\xfa\xd2\xee\x67\x21\x37\x73\x91\x1b\x3a\x6d\x2c\x8a\x01\x63\xa7\x56\xff\xeb\xaa\xcc\x41\x68\xdc\x31\x22\xb8\x60\x59\xc6\x4b\x54\xf3\xcc\x21\x9b\x8c\xcd\x76\x0e\x08\xba\x1f\xef\xf7\x25\xcb\x57\x1c\xbe\x17\x70\x7e\x01\x89\x1b\xff\x86\x98\x71\x7f\x3f\x1e\xed\xf7\xdf\x8b\x84\xac\x98\x9b\x0f\x00\x7e\x13\x89\x7b\x38\xde\xef\xcf\xf0\xe9\xfd\xfd\x98\xcc\x9d\x5f\xed\x84\x45\x50\x3a\x61\x12\x60\x18\x43\xb0\xee\x64\xa1\xef\xc0\x9a\x8d\xe4\x92\xfe\x9d\xa2\x34\x3c\xd9\xef\x7f\x96\x38\x06\xbe\x17\xc9\x7b\x32\x8a\xd7\xbb\x82\xdb\x79\x31\x4c\x5a\x23\xc8\x54\x06\x43\xa6\xa4\x0f\x62\xd8\x8f\x47\x23\x67\x4a\xcd\x43\x44\x95\x27\x1d\xbb\x47\x6c\x70\xf5\x78\x3c\x1a\x89\xa5\x19\xfa\xdd\x05\xe4\x22\x33\x30\x46\x96\x1f\xb9\xc8\x0c\x98\xf1\x68\x74\x3f\xf6\x4f\xdd\x0a\xc9\x51\xc4\xe2\x29\x82\x18\x8f\xee\xc7\xfb\x3d\x51\x15\x69\xfa\x06\x4f\x52\x48\x58\x73\x56\xbf\xd7\xdc\x10\x96\xd8\x15\xd2\xfa\x7b\xcd\xbb\xc8\x4d\xf4\x46\x60\x5d\xfb\x53\x48\xfb\x60\x22\xbd\x26\x35\x1b\x1f\x32\xbe\xb1\x6d\x04\xdc\xcd\x2e\xe7\xb3\xf8\x73\xb3\x47\xfe\x78\xef\x25\x78\x4c\xe4\x0f\xf8\x82\xd0\xbf\xe2\x76\x2c\x8c\x03\xea\x1d\x30\xde\x4c\xba\xf5\x7c\x54\x49\x4b\x9a\x0c\x3a\x34\xaa\x83\x85\x5d\x4c\x24\x36\xfa\x37\xb7\x96\x3d\xf4\xd8\xd0\x9d\xb8\x14\x72\x0b\x6d\xcc\xb3\x2c\x7b\x79\xb7\xe0\x85\x86\x6d\xc9\x0a\x45\x7a\xd5\x93\x6e\x29\x78\x96\xa2\x73\x65\x0f\x64\x7d\x42\x0d\x63\x8d\x42\xea\x70\x60\x92\x37\x22\x4d\x33\xbe\x65\x25\xf9\xab\x1f\x95\xf3\x60\xd1\x5d\x2b\x8a\x6c\x87\x7a\x05\x75\xa5\x46\xe0\x1b\x3f\xda\x18\x03\x7e\xcb\xcb\x9d\xe7\x23\x9e\x23\x54\x1b\xca\xa9\x8a\xd9\x0c\xde\x16\x68\x2a\x50\x5d\x4e\x03\x6d\xb5\x60\x39\xcc\xb9\x31\x30\x3c\xc5\x69\xf3\x1d\xe4\xc8\x03\x2d\xf1\x39\xbf\x5b\x64\x55\xca\x53\xf2\x57\xe7\x1c\x51\xc0\x3d\x17\x3c\x4d\x0e\xa8\x31\xa9\x71\x9a\x42\xf4\x41\x33\x5d\xa9\x68\x0a\xd1\x3b\x91\xaf\xa2\x78\xec\xf4\xc1\x93\x40\x21\xf4\xcd\x87\x0e\xaa\x4c\x6b\x6c\x92\x24\x21\xcf\xd0\xc8\x92\xc8\xed\xe3\xf3\x0b\xd8\xb0\xe2\x13\xbd\xfa\x4c\xe4\xdf\xdf\x23\xfb\x51\x8f\x1d\xd3\x57\xa3\x51\x14\x48\x54\x74\x0e\xfb\xfb\xa9\x9d\x4a\xec\x1f\xdd\x8f\xc7\x23\xe4\xc6\x17\x44\xc5\xc8\xae\x01\xe9\xd1\xda\x93\xf6\xf8\x32\x05\x79\x83\xaf\x1d\x62\x9f\xf8\xdd\xe7\xa7\xf0\x9d\xbc\x21\x51\x2c\x58\x2e\x16\x93\xda\x51\x5a\x4e\xa2\x97\x0e\x84\xe7\xe0\xe3\x1f\xd4\x63\x48\x25\x57\x90\x4b\x0d\xfc\x4e\x28\xfd\x14\x14\xe7\x21\xe3\xbd\xec\x18\x57\x13\x91\x8a\x63\xab\x9b\x52\x9e\x71\xcd\x27\x0e\x03\xf3\xae\xde\x80\xc8\x17\x35\xfa\x9e\x7c\xa7\x13\x4a\x2c\x0d\x88\x8b\x0b\x68\x90\xcc\x9e\xb4\x4e\x0d\x0b\x17\x01\xe6\x93\xce\x21\xb1\x3b\x7a\x0d\x92\xd3\xb1\x7b\xcd\xe6\x3c\xe3\x69\x2d\x0d\x14\xec\xad\xb8\x76\xb2\x8b\xf2\xee\xa9\x67\x44\x78\xbb\xe6\xb9\x7f\x2b\x03\x71\xb5\xc0\x48\xea\xa6\x74\xca\xec\x41\xa8\x68\x30\x50\x04\xc9\x28\x0c\x15\x0b\xf4\x64\x4a\xb1\x30\xbe\x55\x20\xa5\xdb\xb5\x58\xac\xcd\x54\xc5\xf3\x2e\x14\xac\xf9\xb6\xb3\x9d\xf3\x22\x4b\x6b\xbc\x0f\x77\x65\x74\x2d\x09\xf0\xf4\x50\x2d\x77\x68\xea\x71\xdf\xbe\xbe\x59\x37\x1d\x20\x35\xb5\xfb\x34\x14\x2f\xf9\x82\x8b\x5b\x72\xf3\xcc\x16\xe5\xb2\xb1\xef\x04\x3e\x70\xee\xc1\x04\x50\xcc\x0b\xe7\x7d\xfa\x73\x8f\x88\xa2\x44\xa6\x5c\x33\x91\x19\x4f\xd1\x1d\x27\x13\x76\x5a\x0f\x97\x65\x42\xef\x92\x21\x15\xd2\xd8\x7b\xa8\x49\x1e\x4c\xd1\xff\xd5\x33\xff\x73\xf4\x4c\x63\xda\xb4\xdb\xf7\xeb\x57\x3b\x27\x86\x91\x3f\xbf\x7f\x77\x49\x9e\xd4\x83\xe3\x48\x74\xd7\x82\xe9\x1b\x76\xc3\x55\x6d\xe3\x6b\x33\xcd\x6e\x99\xc8\xd8\x3c\xe3\x14\x02\xac\xde\xbf\xbb\x84\xfd\xbe\xd3\x9b\xb3\xa7\xa4\x09\x79\x52\x83\x0a\x42\x0d\x59\x50\x98\x9a\x24\x49\x23\xcd\x90\xd0\x24\xf2\x18\xe2\xbe\x85\x90\x0b\x2a\x18\xa8\x90\x8f\x9f\x3e\xf7\x43\x42\xae\x75\xbd\x7d\xce\x97\xb2\xe4\x13\xc4\xf6\x8d\xcd\x7c\x5c\x4b\xeb\x63\xc6\x53\x64\x46\x6b\x9d\x0b\xf4\x87\x78\x9e\x4e\x1a\x8f\xfd\x7e\x92\x24\x89\xc7\xa3\xd9\x0c\xf6\x7b\xb8\x96\xaf\xe5\x96\x97\xd0\xd8\x01\x20\x8b\xad\xd3\xf7\x08\x31\x22\x3c\xf6\x6d\x4f\xbb\x53\x28\xf7\x7b\x07\xd3\x4b\xd2\x39\x34\xb7\xe5\x13\x18\x13\x14\xad\xfa\xf0\x74\x08\x1f\x9e\xfc\xd1\x0b\x93\xaa\xc3\xfd\x07\x23\xac\x07\x6c\x06\xbc\xcc\x3b\x07\xd8\xc8\x06\x47\x34\x28\x91\x24\x09\x3e\x44\xda\x75\x98\xd2\x7a\xc3\xed\x30\xd8\x3b\xe0\xdd\xfc\xf6\xee\x3c\x19\xaf\x00\xce\x83\x42\xcf\x03\xf2\x01\xb4\xe8\x67\xb3\x16\x07\xd1\xa7\x05\x63\x0c\x46\xb0\xba\x96\xf5\x46\x4e\xdf\xc3\x51\x54\xc9\xd8\x28\x78\x52\x2f\x15\x43\x18\xa3\x0c\x05\xb2\x18\xdc\xfc\xb1\x91\xec\x17\x04\x5a\x34\xc2\x9f\x03\x4a\xd2\x81\x42\x39\x09\x03\xa2\xc3\x68\xe8\x20\x14\xaa\xcf\x43\xc9\x8b\x93\x03\xd9\x66\x64\x64\x29\x4c\xc2\x7c\x9c\xbc\xb3\x19\x0c\xc9\x3d\x08\x54\x74\xcd\xc4\x66\x42\x13\xec\x88\x9f\x90\x3f\x26\x9b\xb3\x90\xf9\x2d\x2f\x51\x4d\x1a\xf9\x26\xe5\x78\x28\x66\x2e\x5a\x35\x69\xae\x4a\xf1\xf2\x2c\x95\x1b\x26\xf2\xa1\xc1\x09\xbc\x2b\xc5\x86\x95\x22\xdb\xb9\x24\x54\x98\xb1\x22\x21\x19\xda\xc7\xe4\xcb\xa1\x70\xe0\x5e\xde\xf3\xaf\xad\xb0\xb9\x1d\x2d\x5b\xbe\xdb\x30\xd9\xce\x39\x25\x4c\xf6\x9c\xfc\x3a\xc0\x26\x52\x29\x27\xb1\x69\x50\xfb\x74\xf2\x89\x66\xb8\x21\x7d\x8c\x3a\xce\x02\x57\x05\x91\xb5\xcd\xeb\x1a\x56\x64\xbb\x93\xf8\x34\xb8\x91\x2e\x46\x75\x65\x32\x86\x38\xa5\x0a\xca\x68\x9c\x9c\x10\x1a\x87\x49\xa4\x2e\x6e\xfd\xc2\xb3\x82\x97\x6a\x4c\x1b\xe8\x34\x91\xdd\x0a\x68\x93\x82\x2b\x23\x24\x6f\x5e\xc4\xed\x01\x88\x2f\xaa\xd1\x9b\x29\xdc\xd6\x2e\xda\xc6\xfb\x96\xb7\x8d\xe4\x89\x29\x74\x71\xb8\xe1\x3b\xc3\xee\x14\xbd\xb8\xb9\xd4\x6b\xa4\xb1\x5b\xc5\x96\x88\x60\x72\x13\xdb\x78\x01\x87\x66\x19\x64\xc8\x2f\x0b\x85\xd9\x28\xc9\x24\x45\x2f\x59\x2e\x73\xb1\x60\xd9\x2f\x9c\xa5\xbc\xfc\x0b\xdf\xb9\x60\x02\x17\x52\xd2\xa6\x6a\xb5\x8d\xcd\x1c\x88\xc5\x82\xbb\x64\x05\x17\x7a\xcd\x4b\xbb\x32\xbe\x47\x52\x5c\xf8\xbd\xfe\x26\xf4\xfa\x57\x96\x55\x9c\xb4\x21\xee\xf5\xd3\x8f\x9f\xe3\xa3\x03\x7b\xb0\x9b\xdc\xc4\x35\x04\xeb\xa6\x5b\xf6\x2d\xf4\xdd\x43\x3d\x46\xca\x07\x3f\xd8\x63\xbc\xe2\xdb\x60\x36\x2d\x6f\x6a\x03\x36\xd7\x03\x73\xb6\xb8\xa1\xaa\xa9\x3d\x33\x94\x48\xc7\xbd\xe6\xdc\x04\x53\x09\xbc\x32\xea\xd5\xa6\xe4\xad\xb8\x8a\xb9\xc0\x20\xcb\xb1\xc0\x66\x9c\xb5\x84\x54\xb0\x8c\xd2\xd2\x19\xd3\xbc\x84\x45\x26\x15\x9f\xd2\xa0\x1a\x26\x09\x68\x03\xbb\x09\xbe\x26\xf3\x99\xd0\x93\x4b\x99\xe7\x03\x6e\x27\x0d\x72\x6e\xe7\xa4\xc7\xef\x0c\x8f\x1c\x7a\x08\x07\xe9\xd2\xe0\x69\x71\xb3\x32\xc7\xcf\xa6\x4d\x9b\xf5\xdb\xd1\x61\x18\xd2\x97\x5b\x1d\x8d\x6e\x59\xd9\xa5\x7d\x7c\xd8\x71\x18\x98\xe3\x2c\x9b\x7a\x1c\x9a\x78\x71\xe8\x3c\x5a\xf2\xd1\xdc\x11\x52\x71\x6a\xff\xc6\x78\xc6\xee\xe9\xfe\x3e\xe9\x4a\xe9\x46\xe1\x50\xd1\x7e\xd8\xa3\x01\x6b\x4f\xb3\xdf\x1b\x0d\x9c\x4d\xb3\xa3\x41\xc5\x46\x21\x2d\xfe\x27\x1b\x2e\xe9\x68\x34\x8a\x3d\x85\x26\x71\x9d\x83\x75\x3a\x2f\xf8\xcb\xab\x41\x77\xc8\x7c\xe4\x72\xd4\x51\x87\x33\x0b\xea\x80\xdc\xe7\x00\x30\xc4\xc7\x69\xbd\xee\xe8\xde\x29\x64\x3c\x25\x48\x0f\xb0\xa7\xee\xf7\xbb\x38\x03\xb6\xd3\xf9\x38\xc3\xb6\x73\xd8\x1a\x9e\xea\xe2\x58\x3b\xd5\x63\x3b\x49\x71\x0c\xfb\x38\xfd\xb6\x93\x1c\x16\x44\xe6\x44\xe3\x89\x43\xbd\xa3\x83\x26\xfd\x41\xe6\xb3\xc8\x76\x5d\xf6\x33\x64\xdb\xef\x77\x79\xfa\x3d\x53\xe7\xf1\x0c\x7a\xa6\x27\xfa\x9c\x47\xfd\x9d\x41\xcf\xb4\xc1\xb5\xa1\x7d\x74\x3b\x3c\x5d\x05\x9d\x61\xcf\xf4\x01\x05\x9c\x61\xcf\xd4\x62\x61\x0c\xb1\xba\x96\xa1\xb3\x43\x34\xef\xb2\x16\x01\xc9\x69\xcb\x03\x50\x26\x37\x7c\xa7\xe0\xd3\x67\x97\xd3\x3b\x02\x8f\xf6\x78\xa4\x04\xb6\x49\xe1\xc9\x31\x47\xcb\x18\x8f\x82\x89\xb2\x5e\x7c\x3c\x72\x19\xbe\x9b\xda\xfd\x32\xe8\xed\x6d\xe2\xeb\xd6\x65\xf7\x16\xfa\x2e\x21\xe7\xe4\x26\x4e\x6c\x26\x33\x7e\x0a\x2e\xcb\x37\x22\xc0\x3e\x27\x62\x7e\x92\xb3\x13\xd7\xb5\x2c\xf2\xea\x68\x68\xe8\xd9\x3d\xd9\xa4\x70\x51\x7b\x8a\x7f\x96\x22\x9f\x3c\xd9\xa4\xd3\xfa\xd1\x3b\x9c\x43\x50\x93\x24\xb1\x89\xbf\x3a\x86\x44\xcf\xe7\x61\xe9\xb2\x5f\xae\xaf\xdf\x7d\x4b\xba\xcc\xd4\xdd\x89\xbc\xb9\x91\x2b\xb8\x80\x88\x15\x45\x26\x16\xa6\x4d\xc9\x74\xf9\x3c\x85\xc5\x9a\x95\x8a\xeb\x8b\x4a\x2f\xcf\xfe\x14\xf9\x2c\x1b\xae\x6a\xf3\x0a\xb5\xd7\x04\x6b\xfb\xc4\x1c\xd6\xe3\xd9\x37\x04\x26\x73\x28\x4a\x9e\xf2\xa5\xc8\x79\x6a\x9a\x24\x54\x90\x72\x0b\x96\x39\x9a\x73\x6b\x76\xbd\x34\x73\x6e\x61\xf7\x86\x73\x74\xc4\x12\x12\x03\xdf\xc4\x04\x0d\xff\xa4\x23\x0f\xd7\x0f\xdd\x30\xbe\xeb\xb5\x4d\xc4\xd1\x1a\xe8\xf4\xaa\x46\x1e\xae\x7b\xd2\x4b\xd4\x07\xa4\x67\xca\x09\x0f\x7e\xf4\x4f\x79\xb6\xd4\xbc\x9c\xb4\xdf\xe8\xcb\x9a\xb5\x93\x80\xcd\xb1\x01\x74\xb8\xcb\x93\xb2\x80\x36\x85\x64\x32\x7e\x1b\x93\xb8\xaf\xee\xd0\xc5\x7a\x2f\x2b\xc4\x21\x1e\x07\xae\x84\xad\x4d\xa0\x51\xe8\x21\xb3\x1f\x3a\x17\x79\x2a\xf2\x95\x71\x19\x69\x5a\xf2\x9c\x1e\x59\x7f\x71\xe3\xe6\x99\x14\xb4\x1d\x9e\xfc\xca\xcb\x39\xfc\x07\x5c\xcb\x8f\x45\xc1\xcb\xfb\xfb\x28\x4e\xde\x31\xbd\x6e\x8c\xc1\x07\xd7\x7c\x53\x64\xa6\xfd\x30\x8a\x9d\x14\x4c\x7a\x9a\xa4\xc8\x4d\x6c\x24\x19\x2d\x46\x1d\x99\x46\xeb\xdc\xe1\xf6\x82\x25\x4d\xed\xa4\xe5\x07\x12\x13\x71\xe0\xcf\x54\x02\x6b\x7a\x80\x5d\xf9\xc6\x91\x51\x0e\x41\xc6\x31\xf8\xd3\x6a\x8b\x8d\xeb\x23\x09\xe4\x84\x6a\x6d\x94\x81\x34\xf2\xe3\xaa\x66\x6e\xc5\xdf\xf0\x7d\x39\xc5\x90\x26\xe5\x4b\x56\x65\x1a\xcd\x1c\x09\x08\x02\x33\xd9\x48\xb9\x84\xb6\x2e\x98\x02\x83\xb9\x4c\x4d\x48\x83\xbf\x29\x26\xc0\xd8\x32\x32\xeb\x44\x3e\x1c\xbd\x45\xf5\x8a\xa0\xcc\xf3\xc4\x60\x37\x89\x29\xe8\x61\xa0\x4c\x25\x1b\x10\x59\x04\xf5\xff\x7f\xfc\x31\x81\x57\xcb\x00\xdf\x20\x8d\x4a\xe7\x86\x97\xa6\xa5\x13\x47\x14\xa5\xbc\x15\x18\x2f\xaf\xe9\x44\x51\x15\x6d\xce\x09\x5b\x2a\x36\xe2\xb8\xda\x19\x0b\x41\x9b\xd6\xab\x1a\x3a\xee\x22\x79\xc3\x4a\xb5\x66\xa6\xab\xcb\xe1\xbf\xa1\x47\x28\x91\xaa\x5a\x2c\x38\x4f\x15\x05\x68\x7f\xfe\xf0\xf6\xca\x76\x86\xa6\xae\x8d\xd3\x57\xec\x0c\xee\x0e\x9d\x4a\xf1\xb4\x7f\x5b\x54\xcc\xbf\x44\x76\x4d\x5d\xdc\xe8\x77\x56\xbf\x6c\x40\x03\x91\x2b\xcd\x59\xea\x68\x46\x4a\x32\xd4\x10\x5d\x1e\x88\x6f\x13\x99\xc2\x96\xb4\x60\x53\x0c\x8c\xe7\x81\x5c\x9d\xc2\x17\x3c\x7e\x21\x49\x48\xfd\xfc\x66\xfa\x13\xca\xbd\xe1\xe2\x39\x02\x73\x0c\xbd\xa7\x64\xe8\xa6\x26\x20\x59\x58\x1c\x32\x69\xd2\xb6\x36\xb0\x82\x84\xe7\xb9\x59\xd2\x4e\x7d\x49\x39\x58\x0f\xc8\xcd\x43\x72\x4f\xe2\xa7\xe1\xb0\x8b\xc0\xd8\x1a\x61\xbc\xf0\xe0\x5c\x16\x61\xb4\x4d\x48\x6c\x26\x31\xaa\xc1\x49\x64\x15\xe1\x19\x6a\xbf\x68\x1a\x9a\x3c\xda\xc0\xda\x09\x59\x88\x7f\x53\x3d\x38\x39\xac\xf7\x61\xb2\x3d\xb5\xaf\xe1\x60\xd8\x91\x6a\x62\xdb\x72\x5a\xb8\xdc\x4c\x3b\x46\x26\x3f\xe3\x9b\xd8\xa7\x41\x46\xe6\x68\x9c\x53\x1f\x67\x42\xe2\xf0\x0a\x7d\xc6\x9c\x65\x81\x91\x30\xb8\xab\xc5\x00\xd6\x81\x98\xd5\x88\x1b\xe0\x17\xa0\x16\xc1\xeb\x49\x6c\x09\x67\x84\xc2\x62\x8c\x03\x63\xff\x70\x82\xd4\x8e\x51\xdf\xd4\x72\x47\xda\xaf\x9c\xcc\xab\x25\x7c\xfa\x3c\xdf\x69\x1e\x5b\x59\xdf\x8f\x8d\x93\xb6\x85\x50\x84\x7c\xea\xdc\xc9\xd9\xc7\xdc\x72\x16\x21\x4c\xe1\xd1\x36\x7e\xda\x4e\xad\x93\x97\xa2\xc4\x3f\x10\xe7\x3f\xfd\xdf\x7f\xfd\x17\x12\xa1\x8c\xe7\x38\x27\x86\x7f\xa3\x77\x24\x0f\xd5\x12\x2e\x60\x5e\x2d\x3f\x9d\xe3\xc3\xcf\xcd\xbe\xb2\xe5\x46\x93\xe0\x2e\x27\x91\x4f\x44\x1a\x11\x7a\xfc\x83\x7a\x7c\x0e\x0b\x96\xe7\x52\x43\x81\xee\x0e\xe4\x32\x3f\x33\x3a\xce\x79\xf0\x38\x30\x9a\x22\xf0\xb8\x91\xa9\xb2\xad\xb2\x57\x7c\x3b\xd9\x12\x78\x43\x23\xa3\x43\xc3\xbd\xd7\x35\x9d\x91\x19\x05\xe4\x78\xc2\xdf\x70\x95\x73\xab\x40\xff\x66\xd5\x39\x72\xd1\x8e\x62\x5a\xa8\xa5\xb0\xea\xdc\x49\xa1\x51\x54\x01\x73\xeb\xf8\x42\x81\x30\xfd\xe5\xae\xc9\xfe\x94\x4e\x65\xdb\x3c\x11\x2c\xea\x51\x25\xa5\x39\x52\xb5\x46\x32\x99\x18\xa7\x7b\x01\xc2\xc2\xbd\xf7\xc5\x9d\x8c\x4c\xd6\x35\xd0\x18\x42\x69\x03\xdb\x13\x67\x89\xb8\x4e\xea\x15\x7a\x66\xd7\xc7\x8a\x5c\x39\xf3\xb3\x01\xc2\x22\x35\x1e\xac\x9e\x1c\xf5\x49\x82\x0c\xd6\x80\x53\x42\x09\x11\x9f\x8f\x18\xb4\xff\xed\xf8\xd6\xe0\xdf\x5d\x79\x31\x20\xe9\xa2\x01\xce\x41\xf5\x77\x66\xad\x4d\x18\xba\xd6\xae\x4d\x89\xa1\x69\x2b\xda\x35\xad\x65\x46\x5a\xae\xaf\xdf\xb9\xa7\x06\x32\xca\xf0\xb1\xc4\xfe\x28\xc8\x4e\x0c\x6e\xab\x33\xdc\x85\x27\xd6\xc4\x98\x21\xfd\xa1\xee\x28\xe5\x4b\x0c\x1c\x12\xd4\xdb\x89\xe9\x43\x37\xd9\x2b\xd4\x19\x18\x06\xd7\x91\x6f\x6b\xaf\x41\x18\x6c\x1c\x43\xa3\x37\xac\x4a\xb1\x8d\xed\xef\x39\x4b\x9f\x65\xd9\x84\x80\x9f\xd6\x81\xea\xba\xdd\x97\x68\xf2\xa6\x10\x59\x5d\x50\xa2\xb9\x75\x2e\x0f\xee\xcc\x91\x33\x72\xfd\x1a\x4d\x55\xf4\xa3\x4f\xef\x3f\xcb\x32\xb9\xfd\x98\xdf\xe4\x72\x9b\xff\x24\x78\x96\x2a\x50\x5a\x16\x74\x8c\xab\xdc\x5b\x3a\xe2\xd6\x92\x09\xe3\x6c\x88\x65\xed\x65\xf8\xfb\x2f\x15\x41\xa1\x5e\x23\x95\xe0\x02\x1e\x00\x42\xb0\xca\xb4\x98\xd7\xea\xd4\xd4\xde\x47\xa3\xd1\x21\x16\xe7\xa0\xcb\x8a\x7c\x4e\xd7\x11\x82\xa4\xb9\x80\x10\x64\xa8\x97\xcd\x75\x83\x2b\xbe\x7d\x5e\x2d\x97\xa4\xe9\xe3\x29\x3c\x2a\xf9\xd7\x43\x55\xdd\xad\xac\xfb\xd5\x75\xa7\xc2\x6e\xf5\x90\x1a\x06\x79\x35\xb0\xef\x60\x55\xa8\xa0\x1f\xaa\xc9\x6d\x0a\x35\x30\xb3\xcf\x59\xda\x4c\xdf\x22\x02\x35\x5a\x3e\xf8\xc7\x38\xf5\x1d\x2b\xd9\x46\xb9\x20\xe8\x57\x56\xaa\x49\x89\x72\xf1\x05\x2e\xa0\x7e\x8f\xa3\xbf\x56\xbc\xdc\xd5\xc3\xcb\xe4\xe3\xfb\xd7\xc9\x5f\xf1\xe1\xc4\x4d\x08\x86\x8c\xc3\xc8\x88\x3a\xcc\x50\x05\xb9\x93\x40\x8c\x74\xf9\x76\xb1\x84\xdc\x0d\x4b\x5e\x4b\x72\xd7\x21\x32\x9b\xb4\xa9\xf6\xfd\xde\xbe\xfe\x99\xe7\x66\xd1\x40\x4e\xee\x7b\xb2\xc5\xc3\x28\xbc\xcd\xb9\x5c\x1e\xe0\xc1\xbf\x1e\xe2\x61\xb6\xf5\x7b\x10\xf1\x92\xf0\xc8\x64\xb9\x5c\x75\xdd\xc5\xa1\x67\xad\x76\xe2\xde\x30\xab\x53\x0b\xf7\xd5\x55\x49\xe7\x2a\x17\x73\x78\x6f\x81\x29\x3a\x9b\xad\x18\x83\x22\xae\xf2\x01\x35\xd3\x0e\x04\xbb\xf4\x69\xa7\xc7\xde\x57\x46\xf5\x8e\x57\xa7\x6e\x78\x13\x6a\x86\x97\x1b\xa1\x5f\x50\xe8\x17\x68\x84\xb7\xa5\x30\x95\x90\xfa\xc9\xcb\xbc\xda\xa8\x67\xe8\x7b\xaa\x73\x70\x4f\x03\xe7\x27\x50\x19\x2e\x64\xd8\x4e\x83\x7a\xad\xb9\x04\x96\xbc\xe1\x4a\xb1\x15\x8f\xe3\x71\x58\x83\xad\xaf\xf5\x58\x7b\xdf\x95\x26\xe9\x69\x06\x69\x9b\x99\xbe\x62\x6c\xed\x9e\x97\x81\xc7\x30\x58\x7e\x35\x5a\xfe\xa0\xf4\xba\x66\x0a\xd6\x2c\xa5\xb9\x7d\xc5\x56\x53\xe2\x4b\x41\x9a\x8b\x26\x22\x0f\xae\xff\x05\xd7\x0a\x31\xd8\x33\x50\xec\x55\xbc\xc4\x59\x75\x5f\xe3\x45\xc9\x5a\x95\xc5\xe2\xa0\x12\xdc\x28\xe6\x12\x90\x66\x45\x77\xb0\x96\x7b\xac\x94\xeb\x28\x14\x04\x23\x83\x53\x5a\xf8\x9b\x62\xee\x21\x0c\x14\x16\x24\x77\x95\xf3\xfa\x26\xd4\x62\x8d\x3c\x49\xcc\x1b\x96\x29\x89\x2c\xb0\x07\x8a\x54\x74\x55\x66\xe3\xe1\xd5\x9d\xda\x3f\xab\xca\x2c\x9a\x5a\x8d\xfa\x8e\xe9\x75\x7c\x6c\xa2\xe7\x4a\x34\x85\x08\x65\x0e\x4f\x74\x14\x7f\x73\xed\x19\x41\x7c\x7b\xed\x39\x98\x5d\x67\x51\x3b\x4a\xcf\x39\x79\x73\xa4\x4a\x20\x13\xb7\xe6\xf2\x82\xb6\x54\xdb\x48\x6d\x52\x08\x22\x57\x9a\xe5\x0b\x9e\xc0\x6f\x1c\xf8\x5d\x41\x17\xbb\xe8\x19\x5d\xf6\xda\x70\xf2\x38\xea\x45\x52\xa1\x16\xd2\xdc\x76\x50\x3b\xa5\xf9\x66\x8a\xc2\x35\x9b\x41\x26\x6e\x78\xe6\xcb\xd7\x26\xd1\x11\xad\xa5\xd2\xe7\x86\x76\x75\x7d\xba\xde\xc1\xc4\x2f\xe5\xda\x83\x7b\x93\xb3\x0f\xaf\x4c\x8b\x25\x7c\xe7\x44\xee\x17\xa6\xde\x95\x7c\x29\xee\xfc\x8a\x53\x88\xcc\x9d\x4b\x72\x2e\x3d\x1e\x17\xf4\xf8\x7c\x36\x8b\xe0\xff\x78\x4a\x18\x03\x52\x79\xb7\xb1\x2a\x33\xf4\x2e\x15\xf7\xd0\x4e\xee\xf1\x42\xc3\x5d\x99\x94\x27\x9a\x61\xa9\xbb\x82\x0a\x5b\x3b\xa5\xe6\xe1\xe8\x4a\x12\x23\x83\x0c\x36\xb5\xcb\x93\x0c\x98\x7c\x0f\x02\xda\xca\xf2\x66\x0a\x94\x15\x87\xb9\x8b\x3a\x44\x0e\x3b\x59\x95\x60\xf4\x2a\xbd\x15\x48\xc2\x28\x0e\x93\x83\x0f\x4c\xc1\xa2\xd7\xd9\x1d\xdf\x98\xb7\x54\xf8\x0f\x62\x21\x91\xa7\xfc\xee\x70\xc6\x8f\x6e\x8e\x2d\xed\xb7\xc3\x86\x53\x2b\xfb\xbd\xf3\x3a\xae\xb5\x36\x0b\xfb\x83\x99\xe1\xa9\xaf\xfe\x17\xbb\x8f\xef\x5f\x4f\xaa\x29\x84\xe3\x9f\x33\xc5\x51\x7d\xdc\xdf\x47\x71\xb3\xb8\x7f\x42\x6e\xb7\x95\x06\x6e\xa4\x8b\xdb\x85\xfe\x93\xeb\xf7\x3e\xd5\xdb\x9d\x01\x1e\xae\xe2\x0f\xf2\xdd\x57\xf3\xff\x70\xce\xf7\xe5\xca\x6d\x97\x40\x1f\x6b\xa7\x6d\xd7\xaf\x2b\xe3\x5d\x77\x0f\x18\xcd\xe3\xf8\x38\x67\x8a\xc3\x13\x3c\xc3\x1f\xdf\xbf\x9e\x1a\xbf\x1b\x5c\x3d\xd2\x3d\xc6\xf3\x9b\xa3\x5f\x70\x7e\x01\x4f\x70\x02\xfd\x34\xf6\xc2\xfa\xea\x75\xff\x32\xbe\xb1\x8e\xca\xa5\xbe\x73\x65\xcf\x0f\xe8\x6c\x2e\x64\xbe\x14\xab\xaa\xb4\xd9\x18\xe3\x2a\xd8\x83\xab\x25\x14\x55\x96\xd1\x2d\x31\xb2\x73\x3c\xa5\x02\xa4\xac\xd0\x74\x3b\x5f\xd2\x9a\x25\x4a\x85\x93\xd9\xdb\x38\x7f\x32\x8c\x30\xd1\x57\xb0\x19\x8d\x04\xe0\x4a\x6a\x7b\xd3\x16\x41\x22\x2c\xa3\x29\xd6\xec\x96\x83\xbb\xf5\x3f\xec\x92\x98\x75\xe6\xa6\x20\x65\xef\x9d\x99\x2b\x36\xa8\xf9\x1d\x6a\x5b\x51\x72\x9b\x02\x67\xae\xa1\x89\x14\xbf\x5e\xf3\x5d\x9d\x68\xf7\xbd\xf3\xc1\xad\x38\x5e\x7a\x83\x6b\xcb\xc6\x4d\xda\x51\xa9\x38\xb8\xff\xd1\x6f\x0f\xc2\xa4\x4e\xc7\x20\x5b\x54\x1b\xb8\x44\x79\x82\x77\xf8\x87\x15\x8b\xbd\xc7\x63\x93\xbb\x61\x8d\xb8\x55\xd3\x35\xee\xaf\xf1\x7f\xd1\x00\xf4\xb4\xbe\x1c\x55\xd8\xed\x9c\x53\xa7\xb2\x19\x4c\x39\xb5\x83\x1d\x9b\x6f\x22\x6f\xac\x9d\x73\x72\x69\x18\xbb\x4c\xd8\x34\x12\x76\x94\xb6\x73\x4e\x41\x76\x95\xdc\x3c\x5b\x08\xf1\x6f\xd6\xe6\xde\x05\xc6\xe6\xff\xef\xc7\x1f\xc3\x8a\xd0\x14\xb6\xb6\xec\x61\x82\x9b\xa2\xe4\x9a\xd0\xc4\x09\xb9\x81\x45\x81\x8e\x39\x40\x5a\xf3\x4d\x61\x4e\x1f\xed\x22\x3c\x7f\x36\x47\x0d\x1b\x0a\x3f\x6a\x1c\x1d\x12\x47\x73\x62\xae\xf5\xa3\x23\x27\xd6\x49\xf6\xe1\x94\x18\x8d\x79\x78\x4e\xec\x21\x29\xae\x0b\xf3\x21\x87\x97\x6f\x7f\xea\xcd\x72\x5d\xf1\x6d\x90\xfe\x36\x1a\xc7\x64\x4e\x90\x8e\xbb\x30\xad\x75\x62\xc6\xac\x23\x61\xe6\x81\x46\x71\xd0\x2b\x51\x06\xe5\x06\x04\x1c\x24\x5d\xde\xfe\xe5\x78\x52\xae\x51\x6c\x88\xa7\x10\x05\x32\x73\x0e\x8f\x7f\x48\x1f\x9b\x30\xa0\x5e\xc3\xaf\x4d\x39\x45\x55\x1c\x93\xe6\x80\x8a\x07\x09\xb5\x0f\xe6\xe0\xdb\xf3\x5f\x27\xc1\x54\xd1\x91\x05\x3b\xd8\x45\x88\x78\xab\xdb\xe3\x51\xdd\xa7\xdc\xba\xc5\x1e\x2a\x89\x76\xa3\xd5\x1f\x9d\xc4\x3e\xc1\xd1\x19\x4c\x9f\xd4\x1d\x43\x3e\x26\xb5\x19\x14\x60\xa7\xe7\xad\xcd\xb7\x1b\xa8\x7a\x5c\x0a\x59\x29\xc0\x85\x4c\xf8\x20\x97\x16\x70\xcb\x44\x4e\xd0\x72\x4f\x29\x75\x46\xc5\x5b\x53\xa3\x72\x07\xf6\x84\x6d\x9d\x90\xc4\xee\x69\xe2\xf2\xd9\x96\x91\xd2\xe5\x2d\xcb\x90\xc0\x51\x64\x93\x79\xf4\x68\x3c\x78\x27\x7f\x28\xb1\xed\x92\x82\x25\xff\x6a\x84\x25\x34\x32\xbd\x01\x6c\x7b\x5c\x7f\x84\x4c\xb9\x83\x0f\x9c\xc2\x47\xe3\x32\x15\xac\x64\x1b\xae\x79\xa9\x6c\x72\xd3\xdc\x89\xb1\xf1\x96\xe9\x62\x72\xd5\x9d\xd6\x6d\x43\x45\xfd\xca\x8d\xf4\x20\xae\xf2\x81\x9e\xfb\xfc\xa0\x1b\x78\xdf\xbe\x9c\x89\x8e\x5d\x34\x33\xf8\x77\xc5\x64\x05\xc5\xf4\x03\x1a\xa9\x2b\x7d\x2f\xab\x2c\xcd\x1f\xeb\x3a\xab\x4d\xbb\xfc\xe1\x6b\x44\x2e\xa2\xd3\x73\x44\x95\xf7\x6c\x6b\x5d\xc1\xca\xfd\xed\xdf\xf9\x17\xe6\x69\x93\x72\x46\xf0\x9a\xa4\x33\x9d\x0f\x9d\x49\x5e\x54\x43\x7a\x53\xd8\x3a\xa9\x65\xb0\xde\x14\x4d\x72\xf6\xa5\x7b\xa1\xee\xaf\x3e\x2d\xd3\x2a\x96\xe6\x40\xd8\x61\xef\x79\xc1\xcd\xc7\xbf\xec\xef\x57\x0a\x03\x1e\xaf\xf7\x6a\xc8\x93\x4b\x57\x76\x70\xa9\x5a\x69\x5a\xc3\x22\xc7\xfe\x28\x76\x33\x68\xab\x9f\x22\x9f\xd5\xfd\xab\x4f\x61\xdb\x2e\xe9\xcf\x24\xc2\x89\x1f\x71\xc9\x36\x3c\xab\xbb\xc5\xad\x1c\x64\xca\xff\xb6\x6e\x59\x70\x85\xa2\x6f\xbe\x2b\x21\x58\x34\x92\x67\x69\x3a\x19\x40\x65\x1a\x7c\x48\x69\x72\x1b\x53\xa4\x35\x0a\xb1\xb0\xd2\x68\x02\x91\x0c\x5d\xa8\x25\xc8\x12\x26\x68\xd5\x0e\x88\x16\xb7\xe9\xea\xf0\xd7\x1b\x7b\xa3\xac\xd5\x48\xd1\xb7\x0b\x8b\x47\xe7\xf7\x35\x3a\xe4\xdb\x8a\xf7\x92\x89\x8c\x3a\x5d\x9c\x74\xf7\xc1\x8f\x9a\x1b\xb5\xaa\xca\x9d\xec\x89\xde\x14\xf1\xf8\x41\x54\x24\x08\x71\x40\xa8\xa6\x38\x3c\x88\x0f\xbd\x54\x71\xf0\xeb\x5e\xb3\xd6\xaf\x76\x78\x6c\x4f\x8f\xcc\xb9\x5c\xf6\x55\x2a\x0e\x8f\x90\x19\xde\x7f\x84\x6a\xb0\x85\x57\x71\x34\xc5\xb5\xcc\xd5\x62\x1c\x4a\x0b\x0d\x6f\x8a\x8b\x7d\xd6\x96\x17\x13\x6b\x90\xf1\x40\x62\xfc\xcc\xf5\x7e\xef\xc6\xda\xeb\x90\xf1\x53\x33\xe2\xbb\x0b\xa8\x5f\xfd\x3b\x2f\xa5\x89\x4a\x82\x73\x30\x28\x7b\x9d\x80\x63\x37\xb3\x5b\xfc\x1e\x2c\x80\x9d\x8b\x44\x7e\x15\xb7\xe5\x01\x29\x3c\x90\x22\x0b\xec\x88\x20\x06\x07\x39\x94\xc8\x3f\x92\xb8\x27\xe3\x15\xaa\x19\x96\xc5\x07\x08\x86\x22\x7d\x9a\x84\x87\x66\xca\x2c\x08\x17\x60\xd1\x21\x0f\xc7\x74\x5d\x3a\xb9\xce\x03\xd7\xc2\x24\xc1\xa2\x15\xd7\x11\xc1\x0c\x4c\x97\xf1\xf9\x5b\x96\xab\x84\x79\xb5\xb4\x1f\x98\xa3\x72\xef\x78\x34\xd2\xf2\x3d\xd7\xdf\xea\xc3\x9c\x62\xd8\xce\x8e\x54\x10\x9b\x95\xcc\xd9\x13\x78\x9b\x67\x3b\xd3\x53\x6c\xd2\x13\x04\x84\x8a\x27\x6a\x8d\x76\x1f\xe6\x3e\x33\x41\x7d\x6d\x4a\x02\xcb\xcc\x77\x88\x46\x52\xaf\xc3\x9e\x41\xb9\x11\x1a\xad\x62\x5a\x99\xf4\x38\xc6\x40\x22\xe7\x4a\xc1\x93\x99\x5d\xd1\x6c\xbf\xdb\x00\x0d\xdb\xb6\x83\x74\x16\xb1\xc0\x7e\x55\xd2\x77\x40\x5d\xf1\xad\x6b\xde\x7b\x64\xe3\x03\x3b\x04\x9d\xb8\x97\x6a\xc1\x0a\xfe\xcb\xf5\x9b\xd7\x93\x25\xcb\x14\x0f\x1c\xa1\xf3\x0b\xf7\x85\x4a\x27\x05\x06\xd5\xfe\x78\x64\xc8\x4d\x22\x48\x24\x14\x8c\xda\x22\xe1\x87\xdb\x68\x0a\x04\xd3\x3b\x4b\xcf\xa9\xe1\xae\xfd\x05\x41\x8f\x7a\x63\xab\x75\x1c\x34\x50\xb1\x3d\xb1\xc8\x72\xf5\xec\xfa\xc3\x37\x7e\x12\xc2\x4c\xc3\xf9\x40\x89\x29\xff\xdb\x5e\xa7\x33\x5f\x96\xa4\x8b\x74\xaa\xbc\xa5\xdf\xfe\x3b\x5e\xd6\xc9\xef\xfc\x86\xd8\x69\x37\xdd\x3a\x6e\x9c\x7c\xa8\xe6\xde\xd1\x45\x1c\x50\x8d\x54\xfc\x43\x35\x57\x8b\x52\xcc\xe9\x23\x1b\x07\xf7\xd0\x92\xe6\x97\x37\x3a\xc7\x44\x66\x0b\xe1\x48\x6a\x10\x7f\xa3\x56\x66\xb3\xf1\x51\x47\xda\x72\x1a\x5d\xd3\x6e\xc4\x83\xeb\x5c\x01\x7f\xdd\xb3\xfa\x03\x6c\x01\xc3\x4e\xfd\x08\x87\xe1\xd1\xf1\x8f\x70\xd4\x90\x8f\x5e\x08\x68\x7c\x7f\x33\xf1\x04\xf6\x97\x02\x02\x5e\xf7\x7c\x7c\x63\x18\x82\xad\x25\xff\xf3\x7d\x83\xa3\xde\xd7\xa9\xdf\xe0\x08\xbe\xbd\xd1\xdc\xf3\x15\xdf\xd6\xdb\x7e\xd0\xf7\x37\x90\x51\x3d\xb7\x22\x7d\xce\xe1\x60\x4c\x50\x2c\xa9\x47\x74\x75\xcc\x3f\xe0\x03\x1d\x01\x97\x7f\xd7\x07\x3a\x02\x38\xdf\xf6\x6d\x48\x00\x12\xb9\x2e\x89\x3a\xf8\x38\xc7\x03\x3f\xff\x10\xa4\x28\x89\xa8\xad\xcb\x69\xdd\x97\xad\xd4\xca\x2a\xc0\x37\x6a\xd5\x9f\x99\x3c\xec\xca\xeb\xba\x8f\x36\xd0\xdd\xbb\x51\xab\xe4\x05\xd3\xac\xaf\x73\x6c\xe0\xfb\x19\x8f\x4e\xfa\xec\xc2\xb8\x21\x51\x47\x5a\x7f\xcc\x86\x4f\x68\xfd\x31\xad\x3e\x72\xfe\x77\xbe\xf0\xdf\x0d\x55\x9e\x5f\xee\x33\x09\x6f\x58\xbe\xa3\xa4\xb9\x34\x82\x61\x3f\x41\x6d\x3a\x32\x2a\x5c\x5b\x03\xa3\x4f\xc8\x82\xe2\xb9\x12\xa8\xee\xec\xad\x8b\x46\x47\x50\x07\xde\x7d\x5f\x42\x29\xd0\xff\xb1\x15\xf6\x7c\xd1\xb0\x60\x47\x3a\x83\x1c\x9d\x1b\x32\x48\xeb\xe3\x16\xc2\x85\xa7\xfe\x0e\xe8\xa2\x06\x1b\x3f\xa4\x31\x02\x77\xf4\xed\x8d\x11\xc1\xec\x23\x97\xf2\x71\x37\xff\xdd\x97\xf2\x6b\xec\x0e\xbd\x88\x5e\x03\xf4\xae\x9a\x67\x42\xad\x6b\xfb\xf3\xfb\x6e\xe4\x9f\x74\xcf\xfe\x9b\xae\xd9\xef\xad\xb3\x3d\x74\xc9\xfe\xc0\x4a\xf8\xdd\xd9\x72\x7c\x70\xcd\xfe\x04\x87\x66\x1c\x54\xdc\x1b\x47\x21\x2c\xb3\xf7\xd8\x95\x46\x81\xbd\x5d\x5f\x6f\x97\xd7\xff\x89\xaf\xc4\x1b\x07\xe8\x5b\xaf\xc4\xf7\x50\xa5\x53\xf7\x9d\x76\x25\xde\xd9\x85\xff\xb2\xcb\xef\x3d\x28\x9f\x60\xaa\xa0\xdf\x56\xcd\x66\x70\x8a\x19\xe2\x65\xe9\x2b\x72\x6d\x73\x34\x9b\xc1\xa1\x45\x9a\xcd\xe0\x3e\x80\xee\x26\xd3\x95\x0f\x37\xf9\xd1\xa3\xc3\x77\x89\x29\x78\x5d\x5c\x40\xf4\x45\xd8\x3b\x3c\x5f\xa2\x9e\x65\x5c\x81\xee\x10\x88\xeb\xa1\x74\x88\x74\x14\xb5\x3a\xaf\xf4\x9f\x6a\x94\xbb\x2a\x59\xc3\x56\xb9\xfb\xfb\x3a\xa1\x0c\x5b\xdb\xdc\x6d\x9a\x3b\xab\x4a\x0d\xcb\xdc\xba\xfa\xef\xfe\x27\x14\x6c\xf3\x45\xd0\x26\xc1\x7a\x8c\x35\x6e\xce\x69\xfa\x37\x6a\xd5\xb6\xd5\x67\x06\xd7\x3f\xc6\x60\x9f\xea\x63\x1d\x2b\x26\x1d\x35\xd0\x7e\x21\x03\xd8\x83\x33\x86\xf9\x3f\x03\x00\x00\xff\xff\xa1\xd1\x7b\x86\xeb\x63\x00\x00")

func baronNamePbBaronGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_baronNamePbBaronGotemplate,
		"baron/NAME.pb.baron.gotemplate",
	)
}

func baronNamePbBaronGotemplate() (*asset, error) {
	bytes, err := baronNamePbBaronGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "baron/NAME.pb.baron.gotemplate", size: 25579, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4e, 0x40, 0xf0, 0xa, 0x19, 0x24, 0x59, 0xdf, 0x39, 0xd5, 0x4a, 0x4c, 0xf7, 0xbc, 0xd5, 0x44, 0xd4, 0x0, 0xb4, 0x82, 0x6a, 0xc4, 0xcf, 0x7a, 0x39, 0x6e, 0xc5, 0x7, 0x5f, 0xdf, 0xda, 0x5f}}
	return a, nil
}

var _cmdNameMainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\x51\x6f\xe2\x38\x10\xc7\x9f\xf1\xa7\x98\xb3\x74\xa7\x44\xe2\x1c\x8a\xda\x3b\x89\x15\x0f\x2d\x74\xbb\x95\x56\x2d\x82\xb4\xaf\x2b\x43\x26\xc1\xda\x60\x47\xb6\x49\x85\x50\xbe\xfb\x6a\x9c\x50\x65\xd5\x76\xe9\x0b\xb6\x99\x99\xdf\x7f\x18\xfe\x76\x92\xc0\xcc\x64\x08\x05\x6a\xb4\xd2\x63\x06\xeb\x03\xac\xa5\x35\x5a\xc0\xfc\x11\x1e\x1e\x53\xb8\x9d\xdf\xa7\x82\x25\x09\x2c\xd1\xee\xb5\x56\xba\x68\x13\xe0\x45\x95\x25\x98\x1a\xed\x8b\x55\x1e\xc1\x6f\x95\x83\x5c\x95\x18\x92\x9f\xd1\x3a\x65\xf4\x04\x8e\x47\xd1\xed\x9b\xa6\x17\x80\xb9\xf4\xd8\x8f\xd2\xb9\x69\x18\xab\xe4\xe6\xa7\x2c\x10\x76\x52\x69\xc6\xd4\xae\x32\xd6\x43\xc4\x06\x3c\x2f\x65\xc1\x69\xdd\x79\x5a\x8c\xa3\x4f\xe7\xad\xd2\x85\xe3\x8c\x0d\x92\x04\x52\x6a\x61\x85\xb6\x56\x1b\x0c\x2b\x5a\x36\xe0\xc7\xa3\xb8\x0f\x98\x85\xf4\x5b\xf8\xb7\x69\x20\x71\x21\xc6\x59\xcc\x58\x2d\x2d\x6c\x8c\xce\x55\x01\xed\xb7\x62\x16\x4e\x8c\xe5\x7b\xbd\x01\xa5\x95\x8f\x62\x38\xb2\x01\xe9\x8b\x55\xd0\x7b\x96\x36\xfa\xa7\x2d\x12\x73\x5c\xef\x8b\xeb\x2c\xb3\x43\xe0\x19\xed\x85\xcc\x32\xcb\x87\xc0\x27\x57\xa3\xff\x46\xb4\x09\x29\x20\x75\x06\x3b\xf4\x56\x6d\x1c\x94\xca\x79\xd4\x40\x99\xe8\x1c\x8f\x3f\xa4\x7f\x4b\xd3\x45\x07\xdf\x7a\x5f\xf5\xd9\x57\x81\x4d\x09\x9f\xc7\xdd\x2d\x17\xb3\x0e\x57\xd8\x6a\xd3\xc7\x5d\x06\x5c\xb1\x5c\xcc\x20\x22\x68\xfc\x79\xea\xc3\x75\xba\xea\xa8\x5a\x7a\xf7\x4a\xa5\xc3\x24\x49\x2e\xc6\xff\x8b\x91\x18\x89\x8b\xc9\xe5\x78\x3c\xa6\x00\x15\x7c\x84\xbf\x31\xa6\x7c\x33\xdf\xd3\x6c\xf9\x10\x72\x59\x3a\x7c\x1d\xea\xce\x64\xc8\xe3\xf6\xdf\x7f\x72\x08\xa8\x6b\x65\x8d\xde\xa1\xf6\x50\x4b\xab\xe4\xba\x44\x37\x04\x95\x83\x43\x2f\xe0\x6b\x29\x0b\x07\x5b\x59\x23\x54\x56\x19\xab\xfc\x21\x38\x18\x6e\x75\x4d\xf9\x4e\xb0\x81\xca\x21\x68\xc1\x64\x0a\xc6\x89\x3b\xf4\xa8\xeb\x88\xcf\x6f\x6f\x9e\xee\x78\xfc\xa5\x0b\xfe\x35\x05\xce\xc9\x16\x83\x7e\x9f\x30\x05\xee\xed\x1e\x39\x4c\xa7\xd0\x79\x53\xa4\xe6\xbb\x79\x41\x1b\x85\xc2\x98\x0d\x9a\xa0\x41\xbf\xfb\x3d\x89\x1f\xd7\xf3\xf9\x92\x74\x42\xc2\xfb\x32\x34\x6c\x98\x86\x8c\x13\x2e\x5c\x93\xdf\x71\x8b\xc7\x65\x4a\xa0\x10\x7a\x03\x3a\x39\x0b\xa6\x90\xef\xbc\x58\x55\x56\x69\x9f\x47\x7c\xf2\xb7\xe3\xc3\x50\xf3\xa7\x56\xa9\xfa\x4c\xa7\x3d\x81\x7e\xa3\xef\xc0\xc8\x95\x67\x60\x27\xe3\x9e\x87\x91\xb7\xce\xc0\x4e\x7e\xed\xc1\x9a\xee\xba\xd3\xab\xd3\x5e\x77\x32\x54\x95\x49\x8f\x27\x87\xa2\x23\x1b\xf9\x2d\x1e\x5a\x03\xad\x11\xf5\xeb\xf3\x47\x4e\x5e\x1f\x80\x1c\xec\x3a\x23\x2f\xa4\x75\x18\x91\x37\xbb\x77\x65\xb9\xd7\x51\xdb\x41\xcc\x1a\xf6\x2b\x00\x00\xff\xff\xb5\x10\x81\xef\x7a\x05\x00\x00")

func cmdNameMainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameMainGotemplate,
		"cmd/NAME/main.gotemplate",
	)
}

func cmdNameMainGotemplate() (*asset, error) {
	bytes, err := cmdNameMainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME/main.gotemplate", size: 1402, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x11, 0x8e, 0x70, 0xa5, 0x5e, 0x7f, 0xec, 0x31, 0xa, 0xbf, 0xbf, 0x7c, 0x45, 0xf0, 0xb8, 0x35, 0xb9, 0x95, 0xc6, 0x16, 0xf0, 0x91, 0x15, 0x7c, 0x81, 0x51, 0x28, 0x5d, 0x78, 0xf0, 0x6f, 0xde}}
	return a, nil
}

var _cmdNameClientMainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\xd1\x4f\xfb\x36\x10\x7e\xb6\xff\x0a\xcf\xea\x0f\x25\x5b\x71\x4a\x05\x9a\x54\xa9\x0f\xb4\xd3\x18\x0f\x43\x15\x54\xdb\x03\xe3\xc1\x75\xdc\xd4\x22\xb5\x33\xc7\x01\xa6\x28\xff\xfb\x74\x4e\xd2\xb4\xb4\xda\xf8\x41\xcb\x4b\x2e\x77\xce\x77\xe7\xef\x3b\xee\x9a\x71\xf1\xcc\x13\x49\xd6\x5c\x69\x8c\xd5\x3a\x33\xd6\x91\x00\x23\x2a\x8c\x76\xf2\xcd\x51\x8c\xe8\x32\xe5\x09\x3c\x53\x93\x50\x8c\x31\xa2\x89\x72\xab\x62\xc1\x84\x59\x47\x9a\xbb\xfc\x5c\x19\xff\x64\x89\xa1\x18\xa3\x6c\x41\x68\x59\xb2\xd9\xe4\xd6\xa3\xcd\xb8\x5b\x91\xf3\xaa\xa2\xfe\x4b\x63\x92\x54\xb2\xc4\xa4\x5c\x27\xcc\xd8\x24\x4a\x6c\x26\x28\x0e\x31\x7e\xe1\x16\x12\xc3\xfb\x75\x1c\x5b\x92\x3b\xab\x74\x82\xd1\xca\xb9\x6c\xc7\x01\xa9\xb6\x1d\x21\xc6\xcb\x42\x0b\xa2\xb4\x72\x41\x48\x4a\x8c\xa0\x60\xf6\xe0\xa3\x7f\x70\x1b\x9c\xb5\x98\x7d\x42\xc1\x64\x3c\x8e\x2d\xed\x13\x3a\xba\x1a\x5c\x0e\xc0\x48\xee\x67\x53\x12\xfc\x36\x9f\xcf\x42\x92\xaa\xdc\x49\x4d\xe0\x8c\xcc\x73\x1a\xee\xc3\xb5\x15\xf5\x09\x05\x73\x1b\xee\xca\xc3\x01\xd0\x07\x70\xda\x8b\xf4\x09\xf5\xf4\xb5\x38\xf0\x32\x8a\xa2\x8b\xe1\xcf\x6c\xc0\x06\xec\x62\x74\x39\x1c\x0e\x21\x70\x77\x3d\x7f\xd8\xc7\xad\x9a\xfb\x83\x84\x5b\xf7\x9f\x71\x9b\xcb\x20\xc4\x28\x8a\x08\xdc\x9a\x08\xa3\xb5\x14\x4e\x19\x8d\x11\xd8\x7d\x22\xad\x25\xa3\xb1\x8f\xb2\x5f\x14\x4f\x03\x8c\x36\xfc\xf7\x1b\x9b\xfd\xa9\xdc\xea\x56\xe7\x52\x14\x56\x06\xe1\x8e\x7b\x92\x1a\xf1\xec\x7d\x21\x46\x6a\xe9\xf1\x7e\x18\x13\xad\x52\xa8\x02\xa5\x26\x61\xbf\x72\xc7\xd3\x40\x5a\x1b\x62\x54\x61\x14\xcb\xa5\xb4\xbe\x12\x36\x4d\x8d\xaf\x0f\x63\x54\x96\xaf\xca\xad\x48\xcf\x49\x28\x87\x91\xaa\x02\x9f\xe5\x3a\x91\xa4\xa7\xc0\xd7\x73\x92\x3d\x48\xfb\xa2\x84\x64\xbf\x4b\xb7\x32\x71\x0e\x3d\x85\x51\x89\x51\x93\x69\x66\x95\x76\xa9\x0e\xe8\x63\x59\x6e\x1f\xbf\xe3\x6b\x59\x55\xac\x2c\x6f\x0c\x98\xa4\xa7\x1a\xd7\x13\x68\x82\xb2\x54\x03\x49\x48\xb8\x37\x48\xd4\xb4\x3d\x9b\x70\xf1\x9c\x58\x53\xe8\xd8\x47\xa3\x88\x58\xf9\x77\x21\x73\x87\x11\x82\x4e\x55\x9a\x64\x8b\x1d\xd0\xfb\x3a\x3e\xff\x27\x6b\x73\xd6\xdf\x2d\xb8\x35\xba\x51\x20\x55\x52\x03\x82\xf7\xdd\xdc\xcf\xa6\x53\xef\xd9\x28\x91\x2d\xd8\x9d\x7c\xed\x02\x01\x30\x05\xf9\xf7\xc9\xdd\x63\x17\xe8\x45\xa6\xe8\xc0\xde\x25\x39\xc0\x40\x20\xdc\x5b\x9f\x9c\xa9\xff\x4d\xb1\x0c\xe8\xe3\x04\xe0\x58\x87\xf7\x44\x3e\xc8\x33\xc0\x8e\xbf\xbd\xfc\xa5\xa9\x2f\xad\x2d\x75\xa3\xd9\xd7\xc0\xad\xcc\x8b\xd4\x8d\xbf\xfd\x54\x27\xf8\xd1\x14\x6e\x5b\xd6\x4d\xf3\xb7\xd4\xc3\x5b\x9d\xa3\x23\xfc\x50\xae\x77\x02\x6c\x88\xad\xff\x5d\x8e\x43\xe9\x89\xc8\x3c\x0d\x8d\x75\x1f\xc3\xc0\x7b\xd7\xc7\x30\xed\x0e\xf6\x71\x17\x08\xda\x91\xf9\xa9\x5e\x6e\x5a\xb9\x83\x3b\x4e\x2b\x77\x78\x27\x68\xe5\xcf\x80\x7f\x54\x03\xd8\x0f\x9d\x06\x5a\x6c\x68\xf7\x5b\x64\x5a\x8f\xf9\xa0\xdd\x2e\xdf\x43\x79\x3d\x9e\xb5\xd8\x0c\xe7\x46\x62\x58\x3c\x07\x25\xee\x02\x81\x16\x5f\x11\xb7\x03\x3a\x8e\xb8\x1d\xde\x09\xc4\xfd\x0c\xf8\x7f\x8b\xeb\x17\x9e\xd4\x71\xb5\x65\xe0\xaa\xde\xeb\xfe\x08\x5c\x74\x67\xcb\x9d\x1f\xfb\xcf\xff\x92\xf8\x37\x00\x00\xff\xff\x35\x54\x19\x61\x0f\x0a\x00\x00")

func cmdNameClientMainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameClientMainGotemplate,
		"cmd/NAME-client/main.gotemplate",
	)
}

func cmdNameClientMainGotemplate() (*asset, error) {
	bytes, err := cmdNameClientMainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME-client/main.gotemplate", size: 2575, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x50, 0xe3, 0xc0, 0xc7, 0x94, 0x5d, 0xca, 0xd5, 0xb9, 0x21, 0xc7, 0x8, 0x4b, 0x4, 0x50, 0x75, 0x85, 0x10, 0x17, 0x16, 0x77, 0x29, 0x74, 0x60, 0xc4, 0x57, 0xe, 0xb9, 0xad, 0xec, 0xcb, 0x2c}}
	return a, nil
}

var _configConfigGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xca\xbd\x0e\x82\x30\x14\xc5\xf1\xbd\x4f\x71\x9e\x80\xee\xae\xe2\xe0\x22\x89\x21\xee\x05\x0e\xf5\x46\x72\x6b\x2e\x55\x62\x48\xdf\xdd\xf8\x31\xb0\x9d\x93\xff\xcf\x7b\xec\xd3\x40\x44\x2a\x2d\x64\x0e\xe8\x5e\xe8\x82\x25\xad\x50\x37\x38\x35\x2d\x0e\xf5\xb1\xad\x9c\xf7\x38\xd3\x1e\xaa\xa2\xf1\x07\xb0\xc8\x34\x21\x3d\x69\x8b\x49\x26\xf2\x55\x66\x8c\x32\xf1\x8b\x2f\xb4\x59\x92\xee\xb0\xae\xd5\x7f\x97\xb2\x09\xa8\x43\xe6\xb6\x7e\x7e\x29\xce\xdd\x43\x7f\x0b\x91\xe8\x93\x8e\x12\xdd\x3b\x00\x00\xff\xff\x39\x31\x87\xba\xa1\x00\x00\x00")

func configConfigGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_configConfigGotemplate,
		"config/config.gotemplate",
	)
}

func configConfigGotemplate() (*asset, error) {
	bytes, err := configConfigGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config/config.gotemplate", size: 161, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x41, 0x2e, 0xfa, 0x4f, 0xc9, 0x82, 0x82, 0x79, 0x75, 0x77, 0x1f, 0x87, 0x75, 0x77, 0xdd, 0xbf, 0xbd, 0x8d, 0x55, 0x27, 0x34, 0x5c, 0xa6, 0x1f, 0x1a, 0xa3, 0x7e, 0x3a, 0x93, 0xc1, 0x88, 0xb}}
	return a, nil
}

var _globalGlobalGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xca\xb1\x6a\xeb\x40\x10\x85\xe1\xfa\xce\x53\x1c\x5c\x49\x97\xb0\xdb\x07\x52\x59\x29\xd2\xd8\x10\x4c\xda\x30\x92\xc6\xeb\x21\xf2\xac\x59\xaf\x24\x82\xd8\x77\x0f\x4a\x42\x50\x77\x0e\xff\xe7\x3d\xf6\xb1\x17\x04\x31\x49\x9c\xa5\x47\xfb\x89\x96\x53\x34\x87\xe6\x88\xc3\xf1\x84\xe7\xe6\xe5\xe4\xc8\x7b\xbc\x4a\x1a\xcd\xd4\xc2\x0f\xc0\xac\xc3\x80\x38\x49\x9a\x93\x66\x41\xbe\xe8\x1d\x67\x1d\xe4\x1b\xbf\x49\xba\x6b\xb4\x47\x2c\x8b\xfb\xdd\xa5\x6c\x02\x1a\xce\xb2\xad\xeb\x2f\x85\xe8\xc6\xdd\x07\x07\x41\x18\x62\xcb\x03\x91\x5e\x6f\x31\x65\x54\xf4\x6f\x17\x34\x5f\xc6\xd6\x75\xf1\xea\x43\xe4\x89\x7d\xaf\x3b\xaa\x89\x26\x4e\x6b\xdf\x47\xcb\xac\x26\x09\xff\x7b\x75\x7f\x6f\x15\xe7\xd1\x3a\xa8\x69\xae\x6a\x2c\x1b\xf9\x80\x77\x3c\xa1\x57\x77\x90\xb9\xaa\xa9\xd0\x57\x00\x00\x00\xff\xff\x65\x31\x50\x89\x10\x01\x00\x00")

func globalGlobalGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_globalGlobalGotemplate,
		"global/global.gotemplate",
	)
}

func globalGlobalGotemplate() (*asset, error) {
	bytes, err := globalGlobalGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "global/global.gotemplate", size: 272, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x16, 0x86, 0x59, 0x3f, 0x59, 0x7b, 0xec, 0xd4, 0x1d, 0xef, 0xca, 0xfb, 0x5a, 0xaa, 0x91, 0x0, 0xc9, 0xf0, 0x1f, 0x69, 0x2e, 0x30, 0x5e, 0xce, 0xa0, 0xd5, 0x3f, 0xda, 0xec, 0x70, 0x45, 0x7e}}
	return a, nil
}

var _modelModelGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xca\x3d\xae\xc2\x30\x10\xc4\xf1\xde\xa7\x98\x13\xc4\xfd\x6b\x5f\x28\x68\x88\x84\x22\x7a\x87\x0c\x66\x85\x59\xa3\x8d\x21\x42\x91\xef\x8e\xf8\x28\xd2\xcd\xe8\xff\xf3\x1e\xff\x79\x24\x22\x95\x16\x0a\x47\x0c\x4f\x0c\xc1\xb2\x36\x68\x3b\xec\xba\x1e\x9b\x76\xdb\x37\xce\x7b\xec\x69\x77\x55\xd1\xf8\x05\x98\x25\x25\xe4\x07\x6d\x36\x29\x44\x39\xcb\x84\x93\x24\x7e\xf0\x81\x36\x49\xd6\x3f\x2c\x4b\xf3\xdb\xb5\xae\x02\xda\x50\xb8\xae\xef\x5f\xab\x73\xb7\x70\xbc\x84\x48\x5c\xf3\xc8\xe4\x5e\x01\x00\x00\xff\xff\x35\x9a\xe8\x41\xa0\x00\x00\x00")

func modelModelGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_modelModelGotemplate,
		"model/model.gotemplate",
	)
}

func modelModelGotemplate() (*asset, error) {
	bytes, err := modelModelGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "model/model.gotemplate", size: 160, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6a, 0x10, 0x0, 0x2f, 0xdf, 0x5, 0x64, 0xa1, 0xe, 0x90, 0x4f, 0x8b, 0xa2, 0xf0, 0xea, 0x20, 0xce, 0x6e, 0x79, 0x27, 0x2, 0x5c, 0x28, 0xea, 0x8e, 0x46, 0x28, 0xcc, 0x7a, 0xbd, 0x75, 0xe2}}
	return a, nil
}

var _repositoryRepositoryGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xca\xbd\x0e\x82\x30\x14\xc5\xf1\xbd\x4f\x71\x9e\x80\xee\xae\xe2\xe0\x22\x89\x21\xee\x45\x8e\x78\x23\xe9\x25\xb7\x55\x42\x48\xdf\xdd\xf8\x31\xb0\x9d\x93\xff\xcf\x7b\xec\xb5\x27\x06\x46\x5a\xc8\xec\xd1\x2d\xe8\x82\x69\xac\x50\x37\x38\x35\x2d\x0e\xf5\xb1\xad\x9c\xf7\x38\xd3\x9e\x31\x4a\x1c\x7e\x00\xb3\x8c\x23\xf4\x45\x9b\x4d\x32\x91\xef\x92\x70\x93\x91\x5f\x7c\xa1\x25\xd1\xb8\xc3\xba\x56\xff\x5d\xca\x26\xa0\x0e\x99\xdb\xfa\xf9\xa5\x38\x37\x85\xeb\x23\x0c\x84\x71\xd2\x24\x59\x6d\x71\xef\x00\x00\x00\xff\xff\x10\x36\xf1\x40\xa5\x00\x00\x00")

func repositoryRepositoryGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_repositoryRepositoryGotemplate,
		"repository/repository.gotemplate",
	)
}

func repositoryRepositoryGotemplate() (*asset, error) {
	bytes, err := repositoryRepositoryGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "repository/repository.gotemplate", size: 165, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2c, 0xe4, 0xd, 0xdc, 0xdb, 0xa9, 0xdb, 0xba, 0x9, 0x39, 0x1b, 0xba, 0xbc, 0xbc, 0xd1, 0xb, 0xbd, 0x45, 0xfe, 0x57, 0x51, 0x6d, 0x0, 0x40, 0xb6, 0x8, 0x37, 0x13, 0x99, 0x68, 0xf2, 0xfe}}
	return a, nil
}

var _serverServerGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x56\x4d\x6f\xdb\x38\x13\x3e\x8b\xbf\x62\x2a\xf4\x20\x03\x0e\x75\x78\x6f\x41\x73\x68\x9d\xbe\xdb\x00\x4d\x6a\x38\xc6\xee\x99\x96\xc6\x14\x51\x99\xd4\x92\x94\x9d\x40\xd0\x7f\x5f\x0c\x29\xc9\x76\x3e\xbc\xdb\x5e\x6c\x89\x33\x7c\xf8\xcc\x33\x1f\x54\x9e\xc3\xc2\x94\x08\x12\x35\x5a\xe1\xb1\x84\xcd\x33\x6c\x84\x35\x9a\xc3\xed\x0f\x78\xf8\xb1\x86\xaf\xb7\x77\x6b\xce\xf2\x1c\x56\x68\x5b\xad\x95\x96\xd1\x01\x0e\xaa\xae\xc1\xec\xd1\x1e\xac\xf2\x08\xbe\x52\x0e\xb6\xaa\xc6\xe0\xfc\x27\x5a\xa7\x8c\xbe\x86\xae\xe3\xc3\x73\xdf\x9f\x18\xe0\x56\x78\x3c\xb5\xd2\x7b\xdf\x33\xd6\x88\xe2\xa7\x90\x08\x0e\xed\x1e\x2d\x63\x6a\xd7\x18\xeb\x21\x63\x49\x5a\x1b\x99\xb2\x24\xd5\xe8\x87\xbf\xbc\xf2\xbe\x39\x7d\xce\x9b\xc6\x9a\x6d\xca\x58\x92\xe7\xf0\xbf\x12\x96\xc2\xfa\x67\x96\xa4\x52\xf9\xaa\xdd\xf0\xc2\xec\x72\x2d\xbc\xbb\x52\x26\xfc\x73\x69\x68\xb7\x34\x46\xd6\xc8\xa5\xa9\x85\x96\xdc\x58\x99\x4b\xdb\x14\x03\xca\x9a\xc2\x7a\x44\xbb\x57\x05\xb2\xa4\xd9\x40\xda\x75\x7c\xf9\xe5\x2e\xd0\x5a\x0a\x5f\xc1\x55\xdf\x13\x4a\xd7\xf1\xf3\x45\xc8\x5d\xdc\x96\xb2\x19\x63\x2c\x48\xad\xb7\x4a\x42\x61\xb4\x17\x4a\x3b\xf0\x15\x82\xc5\xbf\x5b\x65\xb1\x84\xad\xc2\xba\x74\xb0\x35\x16\x46\x9d\xc5\xa8\x82\x7f\x6e\x70\xdc\xed\xbc\x6d\x0b\x0f\x1d\x4b\xbe\xad\xd7\xcb\xcf\x65\x69\x69\x49\x69\xc9\x92\x5b\xdc\xb4\xf2\x6c\xe5\x8f\xd5\x72\x71\xb6\xf0\xf0\x79\xfd\xf8\x7a\x0f\x6c\x8c\xa9\x59\xcf\xd8\xb6\xd5\x05\x3c\xe0\xe1\xab\x2e\x1b\xa3\xb4\x77\x99\xdb\x17\xd0\x6c\x78\xd7\xf1\x41\x04\xfe\x20\x76\xd8\xf7\x8f\x81\xd9\x8c\x6c\x93\x33\x91\xca\x73\xf8\xd2\x3a\xa5\xd1\x39\x28\xcd\x4e\x28\xcd\xc3\xe2\x5f\x56\x34\xa3\x8e\x70\x50\xbe\x82\x9d\x2a\xcb\x1a\x0f\xc2\xa2\xe3\xf0\x88\x31\xe5\xaa\xc0\xfc\xd4\x20\x0d\x4b\x88\xc2\xcd\x68\xe5\x04\x34\xe0\x10\xb9\x59\x4c\xd3\xc8\xe1\x78\xe6\x5e\x58\xaa\x9a\xae\xb3\x42\x4b\x84\x8f\x0a\xae\x6f\x60\x0a\xe2\x1e\x7d\x65\x4a\x47\x79\x62\x49\xd2\x75\x6b\xf3\xdd\x1c\xd0\xc2\x47\x35\xc4\x37\x01\xde\x50\x88\xf7\xe2\x27\x76\xdd\x2b\x63\x24\x90\x74\x1d\xea\x92\x80\x88\x0c\x4e\x6a\x5c\xdf\x9c\xa9\xd3\xfd\x67\x32\xaf\xce\xb9\x06\x00\xb8\x40\x72\x7e\xc2\xa1\x67\x47\xbd\x1d\xd6\x58\x50\x57\x1f\x53\xf4\xb6\xf4\x95\xd0\x65\x8d\xd6\xbd\xd2\xfe\x18\xcd\x79\x06\x8e\x05\x32\x79\x50\xf0\x16\x7d\x6b\x35\x4c\x6b\x54\x53\x34\x3a\x5a\x0d\xce\x0b\xeb\x1d\x08\xd0\x78\x00\x6a\xd6\xa1\xb8\xe7\x20\x57\xcb\xc5\xf4\x22\x74\x09\x02\xca\x50\x95\x71\x2d\x52\xf6\x15\x12\x52\x23\x9c\xc3\x92\x5a\x88\x7a\x81\x9c\x6b\x23\x25\xda\x58\xb9\xab\x56\x67\xc5\x56\x0e\xad\x32\xa3\x7a\xa4\xe2\xb9\x3e\x72\x7f\xc0\xc3\x58\x3c\xb3\x17\xb9\x7a\x59\xf6\x43\x65\xdd\x63\x51\x09\xad\x0a\x51\x1f\x6b\x0b\xad\x0d\xa8\x3b\xf1\x13\x33\x32\x03\x5a\x6b\xec\xb0\xe3\x4e\x7b\xb4\xb6\x6d\xfc\x28\x2b\x67\x89\x34\x13\x85\xc9\xfc\x2d\x5a\x33\x42\x1b\xb6\xc6\x6e\xac\x95\xf3\x34\x90\x39\x4b\xd4\x16\x8a\xad\xe4\x71\xbd\x63\x09\x01\x51\xa8\x59\x08\x2e\x49\x6a\x23\xf9\xd2\x2a\xed\x6b\x9d\xa5\xde\x0a\xed\x68\x04\xa5\x73\x48\x83\x84\xf4\x20\xca\xd2\xa6\xf3\x23\x0c\xb5\x3f\x1d\x97\x24\x3b\x8a\x81\x52\x31\xca\x82\xf7\xed\x13\xe9\x92\x24\x3b\x1e\xd9\x65\x69\x1e\x80\xe2\x64\xcd\xd3\x79\xf4\x1f\xa8\xff\x9f\x98\x04\x0b\xbf\xd3\x25\x3e\xcd\x2e\xed\x2d\x76\x65\xad\x34\xbe\x0f\xb1\x88\x0e\x17\x41\xe8\x47\xd5\x17\x40\x96\xd1\xe1\x22\x88\x7b\xde\x6d\x4c\xfd\x3e\xc6\x63\xb0\x5f\x84\xf0\x56\x14\x17\x58\xac\xc9\x3c\x8b\x2a\x87\x62\xf9\x74\x15\x5d\xbf\x87\xd4\x7e\xd6\x65\x90\x3b\x3b\x4b\xca\x1c\x76\x74\x64\x4f\x19\x18\xba\x98\x46\x3c\x4c\x69\x8d\x75\x74\x92\xfe\xf7\xb3\x4f\x1b\x5f\x24\x7f\xbc\x2e\xe8\x8c\x6a\x18\x4e\x34\xd7\x68\x7d\x2a\xc5\x63\x33\xff\x3b\xf1\x11\x70\x0e\x15\x31\xce\x86\x1a\x0e\xed\xfc\x3b\x9c\x69\x63\x3a\x3f\xa5\x3c\x5e\x5f\xc4\xa6\xd6\x73\xea\x32\x22\xae\xd1\x0f\x7c\xb2\xd4\x17\xcd\x1b\xce\x6a\x1b\x7c\x3f\xdc\x80\x56\x75\xec\x94\x31\x1a\xb4\x96\x5e\xe3\xa4\x22\xb9\x29\x49\xce\xee\x4f\x14\x21\xa4\x78\xbf\x9d\x0b\x12\xc6\x04\x7d\x1b\x4c\xfd\x62\x43\xb7\x34\x1b\xbe\x42\x49\x84\xec\x3b\xf7\x64\xe6\xe6\xe0\xec\x3e\x14\xc4\x48\xc4\xf1\x28\x65\xad\x4f\xd5\xa3\x0b\xfa\xb7\xd4\xa3\x8d\xe7\xea\x8d\x77\x3d\x51\x2c\x8c\x3e\xd1\x8f\xbe\x7d\x16\x46\x6b\x2c\x7c\xf6\xd2\xf3\x97\xa4\x4b\x88\x72\x89\x5b\xb4\x34\x92\x35\x5f\xd4\xc6\x61\x08\xe5\x85\xa4\x74\xc2\x5b\x92\xd2\x51\xc1\x29\x18\xc9\x2b\x8b\x54\x83\x5a\xbf\xca\x66\x52\x71\xd5\xea\x0f\xec\x5c\x2c\x7c\x52\xa4\xd3\xa7\xab\x38\x6e\x7b\xc6\xfe\x09\x00\x00\xff\xff\xd6\xa4\x4e\x9a\xfd\x0a\x00\x00")

func serverServerGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_serverServerGotemplate,
		"server/server.gotemplate",
	)
}

func serverServerGotemplate() (*asset, error) {
	bytes, err := serverServerGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "server/server.gotemplate", size: 2813, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc7, 0x5, 0xa4, 0xf8, 0xcd, 0xc7, 0x8f, 0x8c, 0x6e, 0xfb, 0xb3, 0xde, 0x78, 0xde, 0x60, 0x38, 0x5b, 0x48, 0x1a, 0xd6, 0x16, 0x16, 0xa3, 0xe8, 0x97, 0xc2, 0xee, 0xd5, 0xbf, 0xef, 0x8d, 0x3}}
	return a, nil
}

var _serviceHooksGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x50\xbe\xd5\x88\x7c\x53\x7b\x23\xec\xee\xeb\x5d\x93\xac\x80\x18\xe7\x2d\x3b\x9b\x1a\x9a\xf1\xbe\x42\xcf\xdc\x4a\x85\x6b\xe0\x79\x6b\x0e\x7c\x8b\x51\x0e\xba\xec\x2c\x90\xa4\x63\x4c\x7f\x00\x00\x00\xff\xff\xe8\xb0\x07\xec\x3e\x00\x00\x00")

func serviceHooksGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_serviceHooksGotemplate,
		"service/hooks.gotemplate",
	)
}

func serviceHooksGotemplate() (*asset, error) {
	bytes, err := serviceHooksGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service/hooks.gotemplate", size: 62, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xac, 0x1f, 0xe5, 0x64, 0xee, 0xef, 0x70, 0x78, 0x57, 0x74, 0xa7, 0xc9, 0x31, 0xc3, 0xd8, 0x85, 0xb7, 0xc3, 0xb5, 0xdc, 0xe2, 0x3f, 0x3b, 0x91, 0xaf, 0x20, 0x61, 0xd7, 0xa9, 0xfa, 0xc1, 0xb9}}
	return a, nil
}

var _serviceMiddlewaresGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0d\x80\x20\x10\x05\xd0\xde\x29\xae\xa6\xf0\x0f\xe3\x04\x08\x5f\x42\x04\xce\x1c\x44\x0b\xc2\xee\xbe\x39\xe1\xe4\x20\xe5\xf4\xa6\x0d\x89\x2d\xe9\x9d\x07\x3a\xed\xcd\x81\x18\xac\x4f\xf1\x83\x1d\x35\xc7\x58\xf8\x79\x63\xdf\x93\xca\xa5\x26\x41\x23\xc5\x61\xad\xed\x0f\x00\x00\xff\xff\x78\x96\x32\xf7\x47\x00\x00\x00")

func serviceMiddlewaresGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_serviceMiddlewaresGotemplate,
		"service/middlewares.gotemplate",
	)
}

func serviceMiddlewaresGotemplate() (*asset, error) {
	bytes, err := serviceMiddlewaresGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service/middlewares.gotemplate", size: 71, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf0, 0x65, 0xf6, 0xa7, 0xb2, 0xf, 0xed, 0xb5, 0x20, 0x48, 0xf3, 0xc3, 0xea, 0x42, 0x43, 0xf8, 0x89, 0xdf, 0x98, 0x2c, 0x20, 0xb4, 0x8c, 0x62, 0xdb, 0xe3, 0x6d, 0xf9, 0x92, 0x9c, 0xa6, 0xef}}
	return a, nil
}

var _serviceServiceGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\xd6\xd7\x52\x08\x4e\x4d\x55\x48\x4f\xcd\x4b\xcf\xcf\xce\x2c\xd1\x2f\x4e\x2d\x2a\xcb\x4c\x4e\xd5\x2f\x49\xcd\x2d\xc8\x49\x2c\x49\x2d\xd6\x4b\xcf\x57\x48\xcb\x2f\x52\x48\xce\x4f\x49\x55\xd0\xd2\xaf\xad\xe5\x02\x04\x00\x00\xff\xff\x83\x0c\x7f\x72\x35\x00\x00\x00")

func serviceServiceGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_serviceServiceGotemplate,
		"service/service.gotemplate",
	)
}

func serviceServiceGotemplate() (*asset, error) {
	bytes, err := serviceServiceGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service/service.gotemplate", size: 53, mode: os.FileMode(0644), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x42, 0x66, 0x3f, 0xe7, 0xfb, 0x13, 0xd6, 0x89, 0x21, 0xa4, 0x89, 0x63, 0xaf, 0x76, 0x8b, 0xd3, 0x99, 0xab, 0x96, 0x1d, 0x35, 0xfa, 0x50, 0xf9, 0x59, 0x84, 0xf5, 0xa3, 0x13, 0xf5, 0xb7, 0x5f}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"baron/NAME.pb.baron.gotemplate":   baronNamePbBaronGotemplate,
	"cmd/NAME/main.gotemplate":         cmdNameMainGotemplate,
	"cmd/NAME-client/main.gotemplate":  cmdNameClientMainGotemplate,
	"config/config.gotemplate":         configConfigGotemplate,
	"global/global.gotemplate":         globalGlobalGotemplate,
	"model/model.gotemplate":           modelModelGotemplate,
	"repository/repository.gotemplate": repositoryRepositoryGotemplate,
	"server/server.gotemplate":         serverServerGotemplate,
	"service/hooks.gotemplate":         serviceHooksGotemplate,
	"service/middlewares.gotemplate":   serviceMiddlewaresGotemplate,
	"service/service.gotemplate":       serviceServiceGotemplate,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"baron": &bintree{nil, map[string]*bintree{
		"NAME.pb.baron.gotemplate": &bintree{baronNamePbBaronGotemplate, map[string]*bintree{}},
	}},
	"cmd": &bintree{nil, map[string]*bintree{
		"NAME": &bintree{nil, map[string]*bintree{
			"main.gotemplate": &bintree{cmdNameMainGotemplate, map[string]*bintree{}},
		}},
		"NAME-client": &bintree{nil, map[string]*bintree{
			"main.gotemplate": &bintree{cmdNameClientMainGotemplate, map[string]*bintree{}},
		}},
	}},
	"config": &bintree{nil, map[string]*bintree{
		"config.gotemplate": &bintree{configConfigGotemplate, map[string]*bintree{}},
	}},
	"global": &bintree{nil, map[string]*bintree{
		"global.gotemplate": &bintree{globalGlobalGotemplate, map[string]*bintree{}},
	}},
	"model": &bintree{nil, map[string]*bintree{
		"model.gotemplate": &bintree{modelModelGotemplate, map[string]*bintree{}},
	}},
	"repository": &bintree{nil, map[string]*bintree{
		"repository.gotemplate": &bintree{repositoryRepositoryGotemplate, map[string]*bintree{}},
	}},
	"server": &bintree{nil, map[string]*bintree{
		"server.gotemplate": &bintree{serverServerGotemplate, map[string]*bintree{}},
	}},
	"service": &bintree{nil, map[string]*bintree{
		"hooks.gotemplate":       &bintree{serviceHooksGotemplate, map[string]*bintree{}},
		"middlewares.gotemplate": &bintree{serviceMiddlewaresGotemplate, map[string]*bintree{}},
		"service.gotemplate":     &bintree{serviceServiceGotemplate, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
